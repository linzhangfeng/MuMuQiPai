// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jianligameproto.proto

#ifndef PROTOBUF_jianligameproto_2eproto__INCLUDED
#define PROTOBUF_jianligameproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "gameproto.pb.h"
// @@protoc_insertion_point(includes)

namespace proto {
namespace game {
namespace jianlimj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jianligameproto_2eproto();
void protobuf_AssignDesc_jianligameproto_2eproto();
void protobuf_ShutdownFile_jianligameproto_2eproto();

class Hua;
class AckBuHua;
class AckStartPiao;
class ReqChoosePiao;
class AckBroadPiao;
class AckChooseOver;
class tagCurGameScence;
class AckCurGameEnd;

// ===================================================================

class Hua : public ::google::protobuf::Message {
 public:
  Hua();
  virtual ~Hua();

  Hua(const Hua& from);

  inline Hua& operator=(const Hua& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hua& default_instance();

  void Swap(Hua* other);

  // implements Message ----------------------------------------------

  Hua* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hua& from);
  void MergeFrom(const Hua& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // repeated int32 hua = 2;
  inline int hua_size() const;
  inline void clear_hua();
  static const int kHuaFieldNumber = 2;
  inline ::google::protobuf::int32 hua(int index) const;
  inline void set_hua(int index, ::google::protobuf::int32 value);
  inline void add_hua(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hua() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hua();

  // repeated int32 getcard = 3;
  inline int getcard_size() const;
  inline void clear_getcard();
  static const int kGetcardFieldNumber = 3;
  inline ::google::protobuf::int32 getcard(int index) const;
  inline void set_getcard(int index, ::google::protobuf::int32 value);
  inline void add_getcard(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      getcard() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_getcard();

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.Hua)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hua_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > getcard_;
  ::google::protobuf::int32 chairid_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static Hua* default_instance_;
};
// -------------------------------------------------------------------

class AckBuHua : public ::google::protobuf::Message {
 public:
  AckBuHua();
  virtual ~AckBuHua();

  AckBuHua(const AckBuHua& from);

  inline AckBuHua& operator=(const AckBuHua& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBuHua& default_instance();

  void Swap(AckBuHua* other);

  // implements Message ----------------------------------------------

  AckBuHua* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBuHua& from);
  void MergeFrom(const AckBuHua& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.game.jianlimj.Hua buhua = 1;
  inline bool has_buhua() const;
  inline void clear_buhua();
  static const int kBuhuaFieldNumber = 1;
  inline const ::proto::game::jianlimj::Hua& buhua() const;
  inline ::proto::game::jianlimj::Hua* mutable_buhua();
  inline ::proto::game::jianlimj::Hua* release_buhua();
  inline void set_allocated_buhua(::proto::game::jianlimj::Hua* buhua);

  // optional int32 leftcount = 2;
  inline bool has_leftcount() const;
  inline void clear_leftcount();
  static const int kLeftcountFieldNumber = 2;
  inline ::google::protobuf::int32 leftcount() const;
  inline void set_leftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.AckBuHua)
 private:
  inline void set_has_buhua();
  inline void clear_has_buhua();
  inline void set_has_leftcount();
  inline void clear_has_leftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::proto::game::jianlimj::Hua* buhua_;
  ::google::protobuf::int32 leftcount_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBuHua* default_instance_;
};
// -------------------------------------------------------------------

class AckStartPiao : public ::google::protobuf::Message {
 public:
  AckStartPiao();
  virtual ~AckStartPiao();

  AckStartPiao(const AckStartPiao& from);

  inline AckStartPiao& operator=(const AckStartPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckStartPiao& default_instance();

  void Swap(AckStartPiao* other);

  // implements Message ----------------------------------------------

  AckStartPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckStartPiao& from);
  void MergeFrom(const AckStartPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaonum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaonumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.AckStartPiao)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static AckStartPiao* default_instance_;
};
// -------------------------------------------------------------------

class ReqChoosePiao : public ::google::protobuf::Message {
 public:
  ReqChoosePiao();
  virtual ~ReqChoosePiao();

  ReqChoosePiao(const ReqChoosePiao& from);

  inline ReqChoosePiao& operator=(const ReqChoosePiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChoosePiao& default_instance();

  void Swap(ReqChoosePiao* other);

  // implements Message ----------------------------------------------

  ReqChoosePiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChoosePiao& from);
  void MergeFrom(const ReqChoosePiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 piaonum = 1;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaonumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.ReqChoosePiao)
 private:
  inline void set_has_piaonum();
  inline void clear_has_piaonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 piaonum_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static ReqChoosePiao* default_instance_;
};
// -------------------------------------------------------------------

class AckBroadPiao : public ::google::protobuf::Message {
 public:
  AckBroadPiao();
  virtual ~AckBroadPiao();

  AckBroadPiao(const AckBroadPiao& from);

  inline AckBroadPiao& operator=(const AckBroadPiao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBroadPiao& default_instance();

  void Swap(AckBroadPiao* other);

  // implements Message ----------------------------------------------

  AckBroadPiao* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBroadPiao& from);
  void MergeFrom(const AckBroadPiao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chairid = 1;
  inline bool has_chairid() const;
  inline void clear_chairid();
  static const int kChairidFieldNumber = 1;
  inline ::google::protobuf::int32 chairid() const;
  inline void set_chairid(::google::protobuf::int32 value);

  // optional int32 piaonum = 2;
  inline bool has_piaonum() const;
  inline void clear_piaonum();
  static const int kPiaonumFieldNumber = 2;
  inline ::google::protobuf::int32 piaonum() const;
  inline void set_piaonum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.AckBroadPiao)
 private:
  inline void set_has_chairid();
  inline void clear_has_chairid();
  inline void set_has_piaonum();
  inline void clear_has_piaonum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chairid_;
  ::google::protobuf::int32 piaonum_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static AckBroadPiao* default_instance_;
};
// -------------------------------------------------------------------

class AckChooseOver : public ::google::protobuf::Message {
 public:
  AckChooseOver();
  virtual ~AckChooseOver();

  AckChooseOver(const AckChooseOver& from);

  inline AckChooseOver& operator=(const AckChooseOver& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckChooseOver& default_instance();

  void Swap(AckChooseOver* other);

  // implements Message ----------------------------------------------

  AckChooseOver* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckChooseOver& from);
  void MergeFrom(const AckChooseOver& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 piaonum = 1;
  inline int piaonum_size() const;
  inline void clear_piaonum();
  static const int kPiaonumFieldNumber = 1;
  inline ::google::protobuf::int32 piaonum(int index) const;
  inline void set_piaonum(int index, ::google::protobuf::int32 value);
  inline void add_piaonum(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      piaonum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_piaonum();

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.AckChooseOver)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > piaonum_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static AckChooseOver* default_instance_;
};
// -------------------------------------------------------------------

class tagCurGameScence : public ::google::protobuf::Message {
 public:
  tagCurGameScence();
  virtual ~tagCurGameScence();

  tagCurGameScence(const tagCurGameScence& from);

  inline tagCurGameScence& operator=(const tagCurGameScence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagCurGameScence& default_instance();

  void Swap(tagCurGameScence* other);

  // implements Message ----------------------------------------------

  tagCurGameScence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tagCurGameScence& from);
  void MergeFrom(const tagCurGameScence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.game.AckGameScene GameSence = 1;
  inline bool has_gamesence() const;
  inline void clear_gamesence();
  static const int kGameSenceFieldNumber = 1;
  inline const ::proto::game::AckGameScene& gamesence() const;
  inline ::proto::game::AckGameScene* mutable_gamesence();
  inline ::proto::game::AckGameScene* release_gamesence();
  inline void set_allocated_gamesence(::proto::game::AckGameScene* gamesence);

  // optional bool ispaotouing = 2;
  inline bool has_ispaotouing() const;
  inline void clear_ispaotouing();
  static const int kIspaotouingFieldNumber = 2;
  inline bool ispaotouing() const;
  inline void set_ispaotouing(bool value);

  // repeated int32 ispaotouok = 3;
  inline int ispaotouok_size() const;
  inline void clear_ispaotouok();
  static const int kIspaotouokFieldNumber = 3;
  inline ::google::protobuf::int32 ispaotouok(int index) const;
  inline void set_ispaotouok(int index, ::google::protobuf::int32 value);
  inline void add_ispaotouok(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ispaotouok() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ispaotouok();

  // repeated int32 Userpaotou = 4;
  inline int userpaotou_size() const;
  inline void clear_userpaotou();
  static const int kUserpaotouFieldNumber = 4;
  inline ::google::protobuf::int32 userpaotou(int index) const;
  inline void set_userpaotou(int index, ::google::protobuf::int32 value);
  inline void add_userpaotou(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userpaotou() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userpaotou();

  // repeated int32 mingloustate = 5;
  inline int mingloustate_size() const;
  inline void clear_mingloustate();
  static const int kMingloustateFieldNumber = 5;
  inline ::google::protobuf::int32 mingloustate(int index) const;
  inline void set_mingloustate(int index, ::google::protobuf::int32 value);
  inline void add_mingloustate(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mingloustate() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mingloustate();

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.tagCurGameScence)
 private:
  inline void set_has_gamesence();
  inline void clear_has_gamesence();
  inline void set_has_ispaotouing();
  inline void clear_has_ispaotouing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::proto::game::AckGameScene* gamesence_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ispaotouok_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userpaotou_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mingloustate_;
  bool ispaotouing_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static tagCurGameScence* default_instance_;
};
// -------------------------------------------------------------------

class AckCurGameEnd : public ::google::protobuf::Message {
 public:
  AckCurGameEnd();
  virtual ~AckCurGameEnd();

  AckCurGameEnd(const AckCurGameEnd& from);

  inline AckCurGameEnd& operator=(const AckCurGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckCurGameEnd& default_instance();

  void Swap(AckCurGameEnd* other);

  // implements Message ----------------------------------------------

  AckCurGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckCurGameEnd& from);
  void MergeFrom(const AckCurGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.game.AckGameEnd gameend = 1;
  inline bool has_gameend() const;
  inline void clear_gameend();
  static const int kGameendFieldNumber = 1;
  inline const ::proto::game::AckGameEnd& gameend() const;
  inline ::proto::game::AckGameEnd* mutable_gameend();
  inline ::proto::game::AckGameEnd* release_gameend();
  inline void set_allocated_gameend(::proto::game::AckGameEnd* gameend);

  // repeated int32 userpaotou = 2;
  inline int userpaotou_size() const;
  inline void clear_userpaotou();
  static const int kUserpaotouFieldNumber = 2;
  inline ::google::protobuf::int32 userpaotou(int index) const;
  inline void set_userpaotou(int index, ::google::protobuf::int32 value);
  inline void add_userpaotou(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      userpaotou() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_userpaotou();

  // repeated int32 num = 3;
  inline int num_size() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num(int index) const;
  inline void set_num(int index, ::google::protobuf::int32 value);
  inline void add_num(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_num();

  // repeated int32 malist = 4;
  inline int malist_size() const;
  inline void clear_malist();
  static const int kMalistFieldNumber = 4;
  inline ::google::protobuf::int32 malist(int index) const;
  inline void set_malist(int index, ::google::protobuf::int32 value);
  inline void add_malist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      malist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_malist();

  // repeated int32 zhongmalist = 5;
  inline int zhongmalist_size() const;
  inline void clear_zhongmalist();
  static const int kZhongmalistFieldNumber = 5;
  inline ::google::protobuf::int32 zhongmalist(int index) const;
  inline void set_zhongmalist(int index, ::google::protobuf::int32 value);
  inline void add_zhongmalist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      zhongmalist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_zhongmalist();

  // @@protoc_insertion_point(class_scope:proto.game.jianlimj.AckCurGameEnd)
 private:
  inline void set_has_gameend();
  inline void clear_has_gameend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::proto::game::AckGameEnd* gameend_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > userpaotou_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > malist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > zhongmalist_;
  friend void  protobuf_AddDesc_jianligameproto_2eproto();
  friend void protobuf_AssignDesc_jianligameproto_2eproto();
  friend void protobuf_ShutdownFile_jianligameproto_2eproto();

  void InitAsDefaultInstance();
  static AckCurGameEnd* default_instance_;
};
// ===================================================================


// ===================================================================

// Hua

// optional int32 chairid = 1;
inline bool Hua::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hua::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hua::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hua::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 Hua::chairid() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.Hua.chairid)
  return chairid_;
}
inline void Hua::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.Hua.chairid)
}

// repeated int32 hua = 2;
inline int Hua::hua_size() const {
  return hua_.size();
}
inline void Hua::clear_hua() {
  hua_.Clear();
}
inline ::google::protobuf::int32 Hua::hua(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.Hua.hua)
  return hua_.Get(index);
}
inline void Hua::set_hua(int index, ::google::protobuf::int32 value) {
  hua_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.Hua.hua)
}
inline void Hua::add_hua(::google::protobuf::int32 value) {
  hua_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.Hua.hua)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Hua::hua() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.Hua.hua)
  return hua_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Hua::mutable_hua() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.Hua.hua)
  return &hua_;
}

// repeated int32 getcard = 3;
inline int Hua::getcard_size() const {
  return getcard_.size();
}
inline void Hua::clear_getcard() {
  getcard_.Clear();
}
inline ::google::protobuf::int32 Hua::getcard(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.Hua.getcard)
  return getcard_.Get(index);
}
inline void Hua::set_getcard(int index, ::google::protobuf::int32 value) {
  getcard_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.Hua.getcard)
}
inline void Hua::add_getcard(::google::protobuf::int32 value) {
  getcard_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.Hua.getcard)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Hua::getcard() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.Hua.getcard)
  return getcard_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Hua::mutable_getcard() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.Hua.getcard)
  return &getcard_;
}

// -------------------------------------------------------------------

// AckBuHua

// optional .proto.game.jianlimj.Hua buhua = 1;
inline bool AckBuHua::has_buhua() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBuHua::set_has_buhua() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBuHua::clear_has_buhua() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBuHua::clear_buhua() {
  if (buhua_ != NULL) buhua_->::proto::game::jianlimj::Hua::Clear();
  clear_has_buhua();
}
inline const ::proto::game::jianlimj::Hua& AckBuHua::buhua() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckBuHua.buhua)
  return buhua_ != NULL ? *buhua_ : *default_instance_->buhua_;
}
inline ::proto::game::jianlimj::Hua* AckBuHua::mutable_buhua() {
  set_has_buhua();
  if (buhua_ == NULL) buhua_ = new ::proto::game::jianlimj::Hua;
  // @@protoc_insertion_point(field_mutable:proto.game.jianlimj.AckBuHua.buhua)
  return buhua_;
}
inline ::proto::game::jianlimj::Hua* AckBuHua::release_buhua() {
  clear_has_buhua();
  ::proto::game::jianlimj::Hua* temp = buhua_;
  buhua_ = NULL;
  return temp;
}
inline void AckBuHua::set_allocated_buhua(::proto::game::jianlimj::Hua* buhua) {
  delete buhua_;
  buhua_ = buhua;
  if (buhua) {
    set_has_buhua();
  } else {
    clear_has_buhua();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.game.jianlimj.AckBuHua.buhua)
}

// optional int32 leftcount = 2;
inline bool AckBuHua::has_leftcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBuHua::set_has_leftcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBuHua::clear_has_leftcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBuHua::clear_leftcount() {
  leftcount_ = 0;
  clear_has_leftcount();
}
inline ::google::protobuf::int32 AckBuHua::leftcount() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckBuHua.leftcount)
  return leftcount_;
}
inline void AckBuHua::set_leftcount(::google::protobuf::int32 value) {
  set_has_leftcount();
  leftcount_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckBuHua.leftcount)
}

// -------------------------------------------------------------------

// AckStartPiao

// repeated int32 piaonum = 1;
inline int AckStartPiao::piaonum_size() const {
  return piaonum_.size();
}
inline void AckStartPiao::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckStartPiao::piaonum(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckStartPiao.piaonum)
  return piaonum_.Get(index);
}
inline void AckStartPiao::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckStartPiao.piaonum)
}
inline void AckStartPiao::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckStartPiao.piaonum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckStartPiao::piaonum() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckStartPiao.piaonum)
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckStartPiao::mutable_piaonum() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckStartPiao.piaonum)
  return &piaonum_;
}

// -------------------------------------------------------------------

// ReqChoosePiao

// optional int32 piaonum = 1;
inline bool ReqChoosePiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChoosePiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChoosePiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChoosePiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 ReqChoosePiao::piaonum() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.ReqChoosePiao.piaonum)
  return piaonum_;
}
inline void ReqChoosePiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.ReqChoosePiao.piaonum)
}

// -------------------------------------------------------------------

// AckBroadPiao

// optional int32 chairid = 1;
inline bool AckBroadPiao::has_chairid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBroadPiao::set_has_chairid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBroadPiao::clear_has_chairid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBroadPiao::clear_chairid() {
  chairid_ = 0;
  clear_has_chairid();
}
inline ::google::protobuf::int32 AckBroadPiao::chairid() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckBroadPiao.chairid)
  return chairid_;
}
inline void AckBroadPiao::set_chairid(::google::protobuf::int32 value) {
  set_has_chairid();
  chairid_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckBroadPiao.chairid)
}

// optional int32 piaonum = 2;
inline bool AckBroadPiao::has_piaonum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBroadPiao::set_has_piaonum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBroadPiao::clear_has_piaonum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBroadPiao::clear_piaonum() {
  piaonum_ = 0;
  clear_has_piaonum();
}
inline ::google::protobuf::int32 AckBroadPiao::piaonum() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckBroadPiao.piaonum)
  return piaonum_;
}
inline void AckBroadPiao::set_piaonum(::google::protobuf::int32 value) {
  set_has_piaonum();
  piaonum_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckBroadPiao.piaonum)
}

// -------------------------------------------------------------------

// AckChooseOver

// repeated int32 piaonum = 1;
inline int AckChooseOver::piaonum_size() const {
  return piaonum_.size();
}
inline void AckChooseOver::clear_piaonum() {
  piaonum_.Clear();
}
inline ::google::protobuf::int32 AckChooseOver::piaonum(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckChooseOver.piaonum)
  return piaonum_.Get(index);
}
inline void AckChooseOver::set_piaonum(int index, ::google::protobuf::int32 value) {
  piaonum_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckChooseOver.piaonum)
}
inline void AckChooseOver::add_piaonum(::google::protobuf::int32 value) {
  piaonum_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckChooseOver.piaonum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckChooseOver::piaonum() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckChooseOver.piaonum)
  return piaonum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckChooseOver::mutable_piaonum() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckChooseOver.piaonum)
  return &piaonum_;
}

// -------------------------------------------------------------------

// tagCurGameScence

// optional .proto.game.AckGameScene GameSence = 1;
inline bool tagCurGameScence::has_gamesence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tagCurGameScence::set_has_gamesence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tagCurGameScence::clear_has_gamesence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tagCurGameScence::clear_gamesence() {
  if (gamesence_ != NULL) gamesence_->::proto::game::AckGameScene::Clear();
  clear_has_gamesence();
}
inline const ::proto::game::AckGameScene& tagCurGameScence::gamesence() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.tagCurGameScence.GameSence)
  return gamesence_ != NULL ? *gamesence_ : *default_instance_->gamesence_;
}
inline ::proto::game::AckGameScene* tagCurGameScence::mutable_gamesence() {
  set_has_gamesence();
  if (gamesence_ == NULL) gamesence_ = new ::proto::game::AckGameScene;
  // @@protoc_insertion_point(field_mutable:proto.game.jianlimj.tagCurGameScence.GameSence)
  return gamesence_;
}
inline ::proto::game::AckGameScene* tagCurGameScence::release_gamesence() {
  clear_has_gamesence();
  ::proto::game::AckGameScene* temp = gamesence_;
  gamesence_ = NULL;
  return temp;
}
inline void tagCurGameScence::set_allocated_gamesence(::proto::game::AckGameScene* gamesence) {
  delete gamesence_;
  gamesence_ = gamesence;
  if (gamesence) {
    set_has_gamesence();
  } else {
    clear_has_gamesence();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.game.jianlimj.tagCurGameScence.GameSence)
}

// optional bool ispaotouing = 2;
inline bool tagCurGameScence::has_ispaotouing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tagCurGameScence::set_has_ispaotouing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tagCurGameScence::clear_has_ispaotouing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tagCurGameScence::clear_ispaotouing() {
  ispaotouing_ = false;
  clear_has_ispaotouing();
}
inline bool tagCurGameScence::ispaotouing() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.tagCurGameScence.ispaotouing)
  return ispaotouing_;
}
inline void tagCurGameScence::set_ispaotouing(bool value) {
  set_has_ispaotouing();
  ispaotouing_ = value;
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.tagCurGameScence.ispaotouing)
}

// repeated int32 ispaotouok = 3;
inline int tagCurGameScence::ispaotouok_size() const {
  return ispaotouok_.size();
}
inline void tagCurGameScence::clear_ispaotouok() {
  ispaotouok_.Clear();
}
inline ::google::protobuf::int32 tagCurGameScence::ispaotouok(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.tagCurGameScence.ispaotouok)
  return ispaotouok_.Get(index);
}
inline void tagCurGameScence::set_ispaotouok(int index, ::google::protobuf::int32 value) {
  ispaotouok_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.tagCurGameScence.ispaotouok)
}
inline void tagCurGameScence::add_ispaotouok(::google::protobuf::int32 value) {
  ispaotouok_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.tagCurGameScence.ispaotouok)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCurGameScence::ispaotouok() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.tagCurGameScence.ispaotouok)
  return ispaotouok_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCurGameScence::mutable_ispaotouok() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.tagCurGameScence.ispaotouok)
  return &ispaotouok_;
}

// repeated int32 Userpaotou = 4;
inline int tagCurGameScence::userpaotou_size() const {
  return userpaotou_.size();
}
inline void tagCurGameScence::clear_userpaotou() {
  userpaotou_.Clear();
}
inline ::google::protobuf::int32 tagCurGameScence::userpaotou(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.tagCurGameScence.Userpaotou)
  return userpaotou_.Get(index);
}
inline void tagCurGameScence::set_userpaotou(int index, ::google::protobuf::int32 value) {
  userpaotou_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.tagCurGameScence.Userpaotou)
}
inline void tagCurGameScence::add_userpaotou(::google::protobuf::int32 value) {
  userpaotou_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.tagCurGameScence.Userpaotou)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCurGameScence::userpaotou() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.tagCurGameScence.Userpaotou)
  return userpaotou_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCurGameScence::mutable_userpaotou() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.tagCurGameScence.Userpaotou)
  return &userpaotou_;
}

// repeated int32 mingloustate = 5;
inline int tagCurGameScence::mingloustate_size() const {
  return mingloustate_.size();
}
inline void tagCurGameScence::clear_mingloustate() {
  mingloustate_.Clear();
}
inline ::google::protobuf::int32 tagCurGameScence::mingloustate(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.tagCurGameScence.mingloustate)
  return mingloustate_.Get(index);
}
inline void tagCurGameScence::set_mingloustate(int index, ::google::protobuf::int32 value) {
  mingloustate_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.tagCurGameScence.mingloustate)
}
inline void tagCurGameScence::add_mingloustate(::google::protobuf::int32 value) {
  mingloustate_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.tagCurGameScence.mingloustate)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
tagCurGameScence::mingloustate() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.tagCurGameScence.mingloustate)
  return mingloustate_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
tagCurGameScence::mutable_mingloustate() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.tagCurGameScence.mingloustate)
  return &mingloustate_;
}

// -------------------------------------------------------------------

// AckCurGameEnd

// optional .proto.game.AckGameEnd gameend = 1;
inline bool AckCurGameEnd::has_gameend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckCurGameEnd::set_has_gameend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckCurGameEnd::clear_has_gameend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckCurGameEnd::clear_gameend() {
  if (gameend_ != NULL) gameend_->::proto::game::AckGameEnd::Clear();
  clear_has_gameend();
}
inline const ::proto::game::AckGameEnd& AckCurGameEnd::gameend() const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckCurGameEnd.gameend)
  return gameend_ != NULL ? *gameend_ : *default_instance_->gameend_;
}
inline ::proto::game::AckGameEnd* AckCurGameEnd::mutable_gameend() {
  set_has_gameend();
  if (gameend_ == NULL) gameend_ = new ::proto::game::AckGameEnd;
  // @@protoc_insertion_point(field_mutable:proto.game.jianlimj.AckCurGameEnd.gameend)
  return gameend_;
}
inline ::proto::game::AckGameEnd* AckCurGameEnd::release_gameend() {
  clear_has_gameend();
  ::proto::game::AckGameEnd* temp = gameend_;
  gameend_ = NULL;
  return temp;
}
inline void AckCurGameEnd::set_allocated_gameend(::proto::game::AckGameEnd* gameend) {
  delete gameend_;
  gameend_ = gameend;
  if (gameend) {
    set_has_gameend();
  } else {
    clear_has_gameend();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.game.jianlimj.AckCurGameEnd.gameend)
}

// repeated int32 userpaotou = 2;
inline int AckCurGameEnd::userpaotou_size() const {
  return userpaotou_.size();
}
inline void AckCurGameEnd::clear_userpaotou() {
  userpaotou_.Clear();
}
inline ::google::protobuf::int32 AckCurGameEnd::userpaotou(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckCurGameEnd.userpaotou)
  return userpaotou_.Get(index);
}
inline void AckCurGameEnd::set_userpaotou(int index, ::google::protobuf::int32 value) {
  userpaotou_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckCurGameEnd.userpaotou)
}
inline void AckCurGameEnd::add_userpaotou(::google::protobuf::int32 value) {
  userpaotou_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckCurGameEnd.userpaotou)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCurGameEnd::userpaotou() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckCurGameEnd.userpaotou)
  return userpaotou_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCurGameEnd::mutable_userpaotou() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckCurGameEnd.userpaotou)
  return &userpaotou_;
}

// repeated int32 num = 3;
inline int AckCurGameEnd::num_size() const {
  return num_.size();
}
inline void AckCurGameEnd::clear_num() {
  num_.Clear();
}
inline ::google::protobuf::int32 AckCurGameEnd::num(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckCurGameEnd.num)
  return num_.Get(index);
}
inline void AckCurGameEnd::set_num(int index, ::google::protobuf::int32 value) {
  num_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckCurGameEnd.num)
}
inline void AckCurGameEnd::add_num(::google::protobuf::int32 value) {
  num_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckCurGameEnd.num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCurGameEnd::num() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckCurGameEnd.num)
  return num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCurGameEnd::mutable_num() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckCurGameEnd.num)
  return &num_;
}

// repeated int32 malist = 4;
inline int AckCurGameEnd::malist_size() const {
  return malist_.size();
}
inline void AckCurGameEnd::clear_malist() {
  malist_.Clear();
}
inline ::google::protobuf::int32 AckCurGameEnd::malist(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckCurGameEnd.malist)
  return malist_.Get(index);
}
inline void AckCurGameEnd::set_malist(int index, ::google::protobuf::int32 value) {
  malist_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckCurGameEnd.malist)
}
inline void AckCurGameEnd::add_malist(::google::protobuf::int32 value) {
  malist_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckCurGameEnd.malist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCurGameEnd::malist() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckCurGameEnd.malist)
  return malist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCurGameEnd::mutable_malist() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckCurGameEnd.malist)
  return &malist_;
}

// repeated int32 zhongmalist = 5;
inline int AckCurGameEnd::zhongmalist_size() const {
  return zhongmalist_.size();
}
inline void AckCurGameEnd::clear_zhongmalist() {
  zhongmalist_.Clear();
}
inline ::google::protobuf::int32 AckCurGameEnd::zhongmalist(int index) const {
  // @@protoc_insertion_point(field_get:proto.game.jianlimj.AckCurGameEnd.zhongmalist)
  return zhongmalist_.Get(index);
}
inline void AckCurGameEnd::set_zhongmalist(int index, ::google::protobuf::int32 value) {
  zhongmalist_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.game.jianlimj.AckCurGameEnd.zhongmalist)
}
inline void AckCurGameEnd::add_zhongmalist(::google::protobuf::int32 value) {
  zhongmalist_.Add(value);
  // @@protoc_insertion_point(field_add:proto.game.jianlimj.AckCurGameEnd.zhongmalist)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AckCurGameEnd::zhongmalist() const {
  // @@protoc_insertion_point(field_list:proto.game.jianlimj.AckCurGameEnd.zhongmalist)
  return zhongmalist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AckCurGameEnd::mutable_zhongmalist() {
  // @@protoc_insertion_point(field_mutable_list:proto.game.jianlimj.AckCurGameEnd.zhongmalist)
  return &zhongmalist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace jianlimj
}  // namespace game
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jianligameproto_2eproto__INCLUDED
