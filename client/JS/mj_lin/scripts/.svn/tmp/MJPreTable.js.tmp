var MJPreTable = cc.Layer.extend({
    tag: "MJPreTable",

    rootNode: null,
    btns: {},
    players: {},

    allPlayerChat: [null, null, null, null],
    ctor: function () {
        this._super();
        var size = cc.director.getWinSize();
        this.bg = new ccui.ImageView(getResPath("RoomMJ/mj_public/common/pretable/bg.png"));
        this.bg.setAnchorPoint(cc.p(0.5, 0.5));
        this.bg.setPosition(size.width / 2, size.height / 2);
        this.bg.setScale(size.width / this.bg.getContentSize().width, size.height / this.bg.getContentSize().height);
        this.addChild(this.bg, -100);
        this.bg.setTouchEnabled(true);
        this.bg.addClickEventListener(function () {

        });
        this.bg.loadTexture(getResPath(MJModel.mj_table.getBgStr()));

        this.setTableIcon();

        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/preScene.json"));
        var uiNode = uiJson.node;
        Utils.doLayer(uiNode);
        this.addChild(uiNode, 10000);
        this.rootNode = uiNode;

        var self = this;
        //btn
        {
            this.btns = [];
            var btnLayer = uiNode.getChildByName("btns");
            this.rootNode.reorderChild(btnLayer, 10000);
            var cs = btnLayer.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addClickEventListener(function (sender, evt) {
                        self.actionCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                }
            }

            if (MJModel.shareType == 1) {
                var size = cc.director.getWinSize();
                var yaoqing = this.btns["yaoqing"];
                var copy = this.btns["copyshare"];
                var parent = yaoqing.getParent();
                var yaoqingPos = yaoqing.getPosition();
                var copyPos = copy.getPosition();
                yaoqing.removeFromParent();
                copy.removeFromParent();

                var parentPath = "RoomMJ/platformshare/";

                {
                    var btn = new ccui.Button();
                    btn.loadTextures(getResPath(parentPath + "btn_yaoqing1.png"), getResPath(parentPath + "btn_yaoqing2.png"), "");
                    parent.addChild(btn);
                    btn.setName("yaoqing");
                    btn.addClickEventListener(function (sender, evt) {
                        self.actionCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                    btn.setPosition(yaoqingPos);
                }

                {
                    var btn = new ccui.Button();
                    btn.loadTextures(getResPath(parentPath + "btn_copyroom1.png"), getResPath(parentPath + "btn_copyroom2.png"), "");
                    parent.addChild(btn);
                    btn.setName("copyshare");
                    btn.addClickEventListener(function (sender, evt) {
                        self.actionCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                    btn.setPosition(copyPos);
                }
            }

            var btnNames = ["gps", "more", "chat", "sound"];
            for (var i in btnNames) {
                var btn = uiNode.getChildByName(btnNames[i]);
                if (btn) {
                    if (btn.getName() == "sound") {
                        btn.addTouchEventListener(function (sender, evt) {
                            if (self.callback) {
                                self.callback(sender.getName(), evt);
                            }
                        });
                    } else {
                        btn.addClickEventListener(function (sender, evt) {
                            self.actionCallBack(sender);
                        });
                    }
                    this.btns[btn.getName()] = btn;
                }
            }
        }

        //桌上玩家初始化
        for (var i = 0; i < MJModel.Play_num; i++) {
            var player = new MJPlayer();
            player.setVisible(false);
            player.setId(i);
            player.showMoneyVisible(false);
            player.setPosition(this.getPlayerPos(i));
            this.addChild(player, 0);
            this.players[i] = player;
        }

        {
            this.mode_btn = new ccui.Button();
            this.mode_btn.loadTextures(getResPath("RoomMJ/shaorenmoshi/mode_btn.png"), getResPath("RoomMJ/shaorenmoshi/mode_btn.png"), "");
            this.mode_btn.setPosition(cc.p(size.width / 2, 430));
            this.mode_btn.setName("shaorenmoshi");
            this.mode_btn.setVisible(false);
            this.mode_btn.addClickEventListener(function (sender, evt) {
                self.modeCallback(sender);
            });
            this.addChild(this.mode_btn, 10000);

            var no = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_no.png"));
            no.setPosition(45, this.mode_btn.getContentSize().height / 2 + 5);
            no.setName("no");
            no.setVisible(false);
            this.mode_btn.addChild(no);

            var ok = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_ok.png"));
            ok.setPosition(45, this.mode_btn.getContentSize().height / 2 + 5);
            ok.setName("ok");
            ok.setVisible(false);
            this.mode_btn.addChild(ok);

            var mode_2 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_2.png"));
            mode_2.setPosition(203, this.mode_btn.getContentSize().height / 2 + 5);
            mode_2.setName("mode_2");
            mode_2.setVisible(false);
            this.mode_btn.addChild(mode_2);

            var mode_3 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_3.png"));
            mode_3.setPosition(203, this.mode_btn.getContentSize().height / 2 + 5);
            mode_3.setName("mode_3");
            mode_3.setVisible(false);
            this.mode_btn.addChild(mode_3);
        }
        if (MJModel.isSupportOnlineYaoqing == true) {
            var testbtn = new ccui.Button();
            testbtn.loadTextures(getResPath("RoomMJ/action/yaoqing_line.png"), "", "");
            var size = cc.director.getWinSize();
            testbtn.setPosition(cc.p(size.width - 65, 80));
            testbtn.addClickEventListener(function (sender, evt) {
                require("club/scripts/clubUtils/ClubScene.js");
                ClubScene.showBoxDialog(0.66);
            });
            testbtn.setScale(0.65);
            this.rootNode.addChild(testbtn);
        }
    },

    resetMode: function (isOK, gameReset) {
        if (MJModel.changMode == 0 || MJModel.isOnVideo)return;
        if (gameReset == undefined)gameReset = false;
        if (gameReset) {
            this.mode_btn.setVisible(false);
            return;
        }
        var ok = this.mode_btn.getChildByName("ok");
        var no = this.mode_btn.getChildByName("no");
        if (isOK == undefined) {
            ok.setVisible(false);
            no.setVisible(true);
        } else {
            ok.setVisible(isOK);
            no.setVisible(!isOK);
        }

        var cur_p = 0;
        for (var i = 0; i < MJModel.Play_num; i++) {
            if (MJModel.players[i].uid > 0)cur_p++;
        }
        this.mode_btn.setVisible(false);
        if (MJModel.changMode == 1 && cur_p != 2)return;
        if (MJModel.changMode == 2 && cur_p != 3)return;
        if (MJModel.changMode == 3 && cur_p != 2 && cur_p != 3)return;
        this.mode_btn.setVisible((cur_p == 2 && MJModel.mj_roomType != 2) || (cur_p == 3 && MJModel.mj_roomType != 1));
        this.mode_btn.getChildByName("mode_2").setVisible(cur_p == 2 && MJModel.mj_roomType != 2);
        this.mode_btn.getChildByName("mode_3").setVisible(cur_p == 3 && MJModel.mj_roomType != 1);
    },

    modeCallback: function (ref) {
        var ok = ref.getChildByName("ok");
        var no = ref.getChildByName("no");
        ok.setVisible(!ok.isVisible());
        no.setVisible(!no.isVisible());

        var cur_p = 0;
        for (var i = 0; i < MJModel.Play_num; i++) {
            if (MJModel.players[i].uid > 0)cur_p++;
        }

        sendSelectMode(ok.isVisible() ? cur_p : 0);
    },

    showSelectMode: function (pos, mode) {
        try {
            this.removeChildByName("select_mode_" + pos);
            if (mode != 2 && mode != 3)return;
            var cur_p = 0;
            for (var i = 0; i < MJModel.Play_num; i++) {
                if (MJModel.players[i].uid > 0)cur_p++;
            }
            if (mode != cur_p)return;
            var p_pos = this.getPlayerPos(pos);
            var sx = 1;
            var sy = 1;
            //if (pos == 2){
            //    p_pos.y -= 70;
            //    p_pos.x += 100;
            //}
            //if (pos == 1){
            //    p_pos.y -= 70;
            //    p_pos.x -= 100;
            //}
            //if (pos == 0 || pos == 3){
            //    p_pos.y -= 50;
            //    p_pos.x += 100;
            //}
            var tip = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/tip_bg.png"));
            tip.setScaleX(pos == 1 ? -1 : 1);
            tip.setName("select_mode_" + pos);
            if (pos == 1)p_pos.x -= tip.getContentSize().width;
            tip.setPosition(p_pos);
            tip.setAnchorPoint(cc.p(pos == 1 ? 1 : 0, 0));
            this.addChild(tip, 1000);

            var mode_2 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/tip_" + mode + ".png"));
            mode_2.setPosition(tip.getContentSize().width / 2, tip.getContentSize().height / 2);
            mode_2.setName("mode");
            mode_2.setScaleX(pos == 1 ? -1 : 1);
            tip.addChild(mode_2);
        } catch (e) {
            Log(this, e);
        }
    },
    resetSelectMode: function () {
        for (var i = 0; i < MJModel.Play_num; i++) {
            this.removeChildByName("select_mode_" + i);
        }
    },

    setTableIcon: function () {
        var size = cc.director.getWinSize();
        var mjType = new cc.Sprite(MJModel.mj_table.getMjTypePath());
        if (mjType != null) {
            mjType.setPosition(cc.p(size.width / 2, size.height / 2 + 120));
            this.addChild(mjType, 0);
        }
    },

    updateGPSTip: function (hasnocity, hastoonear) {
        if (hastoonear) {
            this.btns["gps"].loadTextures(getResPath("RoomMJ/mj_public/common/table/gps2.png"), "", "")
        } else if (hasnocity) {
            this.btns["gps"].loadTextures(getResPath("RoomMJ/mj_public/common/table/gps1.png"), "", "")
        } else {
            this.btns["gps"].loadTextures(getResPath("RoomMJ/mj_public/common/table/gps.png"), "", "")
        }
    },


    actionCallBack: function (sender) {
        var name = sender.getName();
        if (name == "yaoqing") {
            if (MJModel.shareType == 1) {
                var myposition = cc.p(sender.getContentSize().width / 2, sender.getContentSize().height / 2);
                var sharelist = new ShareList();
                sharelist.initList(this, 0, myposition);
                sender.addChild(sharelist);
                return;
            }
        }
        if (this.callback) this.callback(name);
    },


    setCallback: function (callback) {
        this.callback = callback;
    },

    setReadyVisible: function (v) {
        if (this.btns["ready"])this.btns["ready"].setVisible(v);
    },

    handler_server_table_info_uc: function (ackGameFree, canDelay) {
        for (var i = 0; i < MJModel.Play_num; i++) {
            var mjPlayer = this.players[i];
            mjPlayer.logout();
        }

        for (var i = 0; i < MJModel.Play_num; i++) {
            var player = MJModel.players[i];
            if (player.uid > 0) {
                var pos = MJModel.getPosBySeatid(i);
                var mjPlayer = this.players[pos];
                mjPlayer.login(i);
                mjPlayer.setPosition(this.getPlayerPos(pos));
                if (player.ready) {
                    var pos = MJModel.getPosBySeatid(i);
                    var mp = this.players[pos];
                    mp.setReadyFlag(true);
                    if (player.uid == ZJHModel.getInstance().uid) {
                        this.setReadyVisible(false);
                    }
                }
                else {
                    if (player.uid == ZJHModel.getInstance().uid) {
                        this.setReadyVisible(true);
                    }
                }
            }
        }
    },

    handler_server_ready_succ_bc: function (data, canDelay) {
        var ackUserReady = parsePacket("proto.game.AckUserReady", data);
        var ready_size = ackUserReady.ready.length;
        for (var i = 0; i < ready_size; i++) {
            var ready = ackUserReady.ready[i];
            var pos = MJModel.getPosBySeatid(i);
            var player = MJModel.players[i];
            if (player.uid != -1) {
                var mp = this.players[pos];
                if (mp.getReadyState() == ready) {
                    //和之前的状态相同
                    continue;
                }
                if (ready != 0) {
                    mp.setReadyFlag(true);
                } else {
                    mp.setReadyFlag(false);
                }
            }
            if (player.uid == ZJHModel.getInstance().uid) {
                if (ready != 0) {
                    this.setReadyVisible(false);
                } else {
                    this.setReadyVisible(true);
                }
            }
        }
    },

    handler_server_up_table_bc: function (data, canDelay) {
        var ackUpTableSuccess = parsePacket("proto.login.AckUpTableSuccess", data);
        var seatid = ackUpTableSuccess.seatid;
        if (ackUpTableSuccess.uid == ZJHModel.getInstance().uid) {
        }
        else {
            var pos = MJModel.getPosBySeatid(seatid);
            var rPlayer = this.players[pos];
            rPlayer.login(seatid);
            var point = this.getPlayerPos(pos);
            var startPoint = cc.p(point.x, point.y);
            if (pos == 0) {
                startPoint.y -= 200;
            } else if (pos == 1) {
                startPoint.x += 200;
            } else if (pos == 2) {
                startPoint.y += 200;
            } else if (pos == 3) {
                startPoint.x -= 200;
            }
            rPlayer.setPosition(startPoint);
            rPlayer.runAction(cc.sequence(cc.moveTo(0.2, point)));
        }
    },

    handler_server_down_table_bc: function (data, canDelay) {
        var ackDownTableSuccess = parsePacket("proto.login.AckDownTableSuccess", data);
        var seatid = ackDownTableSuccess.seatid;
        var pos = MJModel.getPosBySeatid(seatid);
        var roomPlayer = this.players[pos];
        var point = this.getPlayerPos(pos);
        if (pos == 0) {
            point.y -= 200;
        } else if (pos == 1) {
            point.x += 200;
        } else if (pos == 2) {
            point.y += 200;
        } else if (pos == 3) {
            point.x -= 200;
        }
        var callBack = cc.callFunc(function (target) {
            target.logout();
        }, roomPlayer);
        roomPlayer.runAction(cc.sequence(cc.moveTo(0.2, point), callBack));
    },

    showSound: function (pos, filepath, time) {
        try {
            if (this.allPlayerChat[pos]) {
                this.allPlayerChat[pos].removeFromParent();
                this.allPlayerChat[pos] = null;
            }

            var showTime = 3;
            if (time && time != 0) {
                showTime = time;
            }
            var chat = new MJPlayerChat();
            chat.initSound(pos, filepath, pos != 2, pos == 1, time);
            chat.setPosition(this.getPlayerChatPos(pos));
            this.addChild(chat);

            this.allPlayerChat[pos] = chat;
            var self = this;
            var callback = cc.callFunc(function () {
                self.allPlayerChat[pos] = null;
                chat.removeFromParent();
            });
            chat.runAction(cc.sequence(cc.delayTime(showTime), callback));
        } catch (e) {

        }
    },
    showChat: function (pos, content) {
        try {
            if (this.allPlayerChat[pos]) {
                this.allPlayerChat[pos].removeFromParent();
                this.allPlayerChat[pos] = null;
            }

            var chat = new MJPlayerChat();
            chat.initChat(pos, content, pos != 2, pos == 1);
            chat.setPosition(this.getPlayerChatPos(pos));
            this.addChild(chat);

            this.allPlayerChat[pos] = chat;
            var self = this;
            var callback = cc.callFunc(function () {
                self.allPlayerChat[pos] = null;
                chat.removeFromParent();
            });
            chat.runAction(cc.sequence(cc.delayTime(3), callback));
        } catch (e) {
            Log(this, e);
        }
    },

    getPlayerPos: function (pos) {
        return Utils.getNodeWorldPosition(this.rootNode.getChildByName("players").getChildByName("player" + pos));
    },

    getPlayerChatPos: function (pos) {
        var p = this.getPlayerPos(pos);
        if (pos == 0) {
            p.y += 50;
        } else if (pos == 1) {
            p.y += 50;
        }
        else if (pos == 2) {

        }
        else if (pos == 3) {
            p.y += 50;
        }
        return p;
    },
    updateBg: function () {
        if (this.bg) {
            this.bg.loadTexture(getResPath(MJModel.mj_table.getBgStr()));
        }
    },
});