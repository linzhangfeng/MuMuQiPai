var HUGANG =
    {
        HUGANG_ZHIGANG: 2,				//直杠
        HUGANG_WANGANG: 4,				//弯杠
        HUGANG_ANGANG: 8,				//暗杠
        HUGANG_DIANPAO: 16,			//点炮
        HUGANG_PAOHU: 32,				//炮胡
        HUGANG_DIANPENGGANG:33,     //点碰杠
        HUGANG_DIANGANG: 64,			//点杠
        HUGANG_BEIZIMO: 128,			//被自摸
        HUGANG_ZIMO: 256,				//自摸
        HUGANG_HUAZHU: 512,            //花猪
        HUGANG_DAJIAO: 1024,            //大叫
        HUGANG_BEIHUAZHU: 2048,            //被花猪赔付
        HUGANG_BEIDAJIAO: 4096,            //被大叫赔付

        //自定义部分
        HUGANG_HUAPAI: 250,                //广东麻将花牌
        HUGANG_PIAO: 260,                  //飘
        HUGANG_TINGPAI: 261,               //听牌
        HUGANG_TUIGANG: 270,               //退杠
        HUGANG_BEITUIGANG: 271,            //被退杠
        HUGANG_CHAOZHUANG: 280,            //抄庄
        HUGANG_BEICHAOZHUANG: 281,         //被抄庄

        HUGANG_BAOPAI: 500,            //包牌
        HUGANG_BEIBAOPAI: 501,            //被包牌
        HUGANG_SHABAO: 502,            //杀报
        HUGANG_BEISHABAO: 503,            //被杀报
    }

var MJResult = cc.Layer.extend({
        ackGameEnd: null,
        bgSpr: "",
        leftColor: null,
        rightColor: null,
        buff: "",
        ctor: function () {

            this._super();

            var size = cc.director.getWinSize();

            var layout = new ccui.Layout();
            layout.setContentSize(size);
            layout.setAnchorPoint(cc.p(0, 0));
            layout.setPosition(cc.p(0, 0));
            layout.setTouchEnabled(true);
            layout.setSwallowTouches(true);
            layout.addClickEventListener(function (Ref) {
            });
            this.addChild(layout, -1000);

            this.bgSpr = new cc.Sprite(getResPath("RoomMJ/result2/bg.png"));
            this.bgSpr.setAnchorPoint(cc.p(0.5 , 0))

            this.bgSpr.setPosition(cc.p(size.width / 2, 0));
            this.addChild(this.bgSpr);

            //继续游戏
            var continueBtn = new ccui.Button(getResPath("RoomMJ/result2/continue1.png"), getResPath("RoomMJ/result2/continue2.png"), "");
            continueBtn.setAnchorPoint(cc.p(0.5, 0.5));
            continueBtn.setPosition(cc.p(1150, 47));
            continueBtn.setName("continueBtn");
            continueBtn.addClickEventListener(this.continueClick.bind(this));
            this.bgSpr.addChild(continueBtn);

            this.leftColor = cc.color(0xd7, 0xf2, 0xf8);
            this.rightColor = cc.color(0xd7, 0xf2, 0xf8);

            return true;
        },

        handCradPos: {x: 0, y: 0},
        hand_card: [[], [], [], []],
        hu_card: [null, null, null, null],
        createHandCard: function (seatid) {
            var tagHu = 0;
            //占时注释掉，胡的那张牌

            if (this.ackGameEnd.faninfo.length > seatid) {
                if (this.ackGameEnd.faninfo[seatid].hucard && this.ackGameEnd.faninfo[seatid].hucard != 255) {
                    tagHu = this.ackGameEnd.faninfo[seatid].hucard;
                }
            }

            var layer = new cc.Layer();
            var imageView = new ccui.ImageView(getResPath("RoomMJ/result2/item_bg.png"));
            imageView.setPosition(cc.p(0, 0));
            imageView.setAnchorPoint(cc.p(0, 0));
            layer.addChild(imageView);

            var pos = MJModel.getPosBySeatid(seatid);
            if (this.ackGameEnd.UserCard.length > seatid) {
                var x = 230;
                var y = 15;
                var paiSpace = 10;
                var penggangSize = cc.size(88, 40);
                for (var i = 0; i < this.ackGameEnd.UserCard[seatid].FixedCardsLen; i++) {

                    var state = this.ackGameEnd.UserCard[seatid].stFixedCards[i].state;
                    var card = this.ackGameEnd.UserCard[seatid].stFixedCards[i].CardData;
                    var chairID = this.ackGameEnd.UserCard[seatid].stFixedCards[i].chairID;
                    var cardList = this.ackGameEnd.UserCard[seatid].stFixedCards[i].OpCards;
                    var LaiziNum = this.ackGameEnd.UserCard[seatid].stFixedCards[i].LaiziNum;
                    var specialCard = this.ackGameEnd.UserCard[seatid].stFixedCards[i].SpecialCard;
                    var out_pos = MJModel.getPosBySeatid(chairID);

                    if (card == undefined || card == null || card == 0) {
                        continue;
                    }
                    //下排杠牌
                    var gangCard = new MJPeng();
                    gangCard.setAnchorPoint(cc.p(0.0, 0.0));

                    if ((state & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                        gangCard.setValue(PengType.Peng_Peng, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    else if ((state & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                        gangCard.setValue(PengType.Peng_AnKang, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    else if ((state & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI) {
                        gangCard.setValue(PengType.Chi_L, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    else if ((state & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI) {
                        gangCard.setValue(PengType.Chi_M, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    else if ((state & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                        gangCard.setValue(PengType.Chi_R, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    else {
                        gangCard.setValue(PengType.Peng_Kang, pos, card, 0, out_pos, true, state, specialCard,LaiziNum,cardList);
                    }
                    gangCard.setScale(0.35);
                    gangCard.setPosition(cc.p(x + penggangSize.width/2 , y + penggangSize.height/2));
                    layer.addChild(gangCard);

                    x += penggangSize.width + 18;

                }

                var is_remove = 0;
                var need_remove = (parseInt(this.ackGameEnd.UserCard[seatid].ChangeableCardsLen % 3) == 2);
                this.hand_card[pos] = [];
                this.ackGameEnd.UserCard[seatid].ChangeableCards.sort(MJModel.mj_table.room_Card.sortCard);
                //牌面信息
                for (var i = this.ackGameEnd.UserCard[seatid].ChangeableCardsLen - 1; i >= 0; i--) {

                    //去掉type＝＝1的判断 有些游戏自摸不一定叫自摸 只判断玩家的手牌数量 只要多牌 而且有胡牌数据 就跳过
                    if (is_remove == 0 && need_remove && tagHu) {
                        if (this.ackGameEnd.UserCard[seatid].ChangeableCards[i] == tagHu) {
                            is_remove = 1;
                            continue;
                        }
                    }
                    var handCard = new MJCard();
                    handCard.seatid = seatid;
                    handCard.setValue(this.ackGameEnd.UserCard[seatid].ChangeableCards[i], 0, CardType.Card_Hand, 0);
                    handCard.setScale(0.4);
                    handCard.setAnchorPoint(cc.p(0.0, 0.0));
                    handCard.setPosition(cc.p(x , y));
                    x += handCard.getBoundingBox().width;
                    layer.addChild(handCard);
                    this.hand_card[pos].push(handCard);
                }

                //胡的牌
                cc.log("----tagHu---: " + tagHu);
                this.hu_card[pos] = null;
                if (tagHu) {
                    //多加一个是否多牌的判断 防止前面又没有跳过 这里又多加的bug
                    var huCard = new MJCard();
                    huCard.setValue(tagHu, 0, CardType.Card_End, 0);
                    huCard.setScale(0.4);
                    huCard.setAnchorPoint(cc.p(0.0, 0.0));
                    huCard.setPosition(cc.p(x + paiSpace, y));
                    layer.addChild(huCard);
                    this.hu_card[pos] = huCard;
                }
            }
            this.handCradPos.x = x;
            this.handCradPos.y = y;
            return layer;
        }
        ,


        createSmallCard: function (val) {
            //TODO
            var paiBg = new cc.Sprite(getResPath("RoomMJ/result-detail/result_detail_frame_gang.png"));

            var num_str = this.getCardValueStr(val, 0, CardType.Card_Hand);

            if (num_str != "") {
                var num_sp = new cc.Sprite(num_str);
                num_sp.setScale(0.35);
                num_sp.setAnchorPoint(cc.p(0.5, 0.5));
                num_sp.setPosition(cc.p(paiBg.getContentSize().width / 2, paiBg.getContentSize().height / 2));
                paiBg.addChild(num_sp);
            }
            return paiBg;
        }
        ,

        getCardValueStr: function (value, pos, type) {
            if (pos == 0 || pos == 2 || type == CardType.Card_Outing) {
                return getResPath("RoomMJ/result-detail/card_value/card_0_") + Utils.toHex2(value) + ".png";
            } else {
                return getResPath("RoomMJ/result-detail/card_value/card_1_") + Utils.toHex2(value) + ".png";
            }

        },

        createAvatar: function (pos) {
            var seatid = MJModel.getSeatidByPos(pos);
            var player = MJModel.players[seatid];
            var layer = new cc.Layer();

            var headPic = Utils.createCircleAvatar(player.avatar, "Avatars/user4_unlogin.png", "Avatars/user4_unlogin.png", cc.size(96, 96));
            layer.addChild(headPic);

            var framepath = getResPath("RoomMJ/result2/head_bg.png");
            var scale = 1;

            var headFrame = new cc.Sprite(framepath);
            headFrame.setAnchorPoint(cc.p(0.5, 0.5));
            headFrame.setScale(scale);
            headFrame.setPosition(cc.p(0, 0));
            layer.addChild(headFrame, -1);

            var headSize = cc.size(96, 96);

            //是否是庄家
            if (MJModel.banker_seatid == seatid) {
                var bankerPic = new cc.Sprite(getResPath("RoomMJ/banker.png"));
                bankerPic.setAnchorPoint(cc.p(0.5, 0));
                bankerPic.setPosition(cc.p(-headSize.width / 2 + 5, 0));
                layer.addChild(bankerPic);
            }

            //位置
            var posPic = new cc.Sprite(__String.createWithFormat(getResPath("RoomMJ/result2/result_detail_pos_%1.png"), pos));
            posPic.setAnchorPoint(cc.p(0, 0));
            posPic.setPosition(cc.p(-headSize.width / 2 - 10, -headSize.height / 2 - 10));
            layer.addChild(posPic);

            //玩家名字
            var nameLabel = new cc.LabelTTF(Utils.parseName(6, player.name), "Arial", 24);
            nameLabel.setColor(this.leftColor);
            nameLabel.setAnchorPoint(cc.p(0, 0));
            nameLabel.setPosition(cc.p(65, -30));
            layer.addChild(nameLabel);

            return layer;
        }
        ,

        //输赢分
        createScoreLayer: function (seatid) {
            var layer = new cc.Layer();
            var score = 0;
            if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];
            var width = 0;
            var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
            if (score > 0) {
                path = getResPath("RoomMJ/result2/result_small_label_win.png");
            }
            var scoredes = ":";
            if (score == 0 ) scoredes = "" ;
            cc.log("createScoreLayer：" + path);
            var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

            scoreLabel.setAnchorPoint(cc.p(0.0, 0.5));

            scoreLabel.setPosition(cc.p(width, 15));
            scoreLabel.setName("scoreLabel");
            layer.addChild(scoreLabel);
            cc.log("createScoreLayer end");
            return layer;
        },

        createMaLayer: function (seatid) {
            return null;
        },


        continueClick: function (ref) {
            if (MJModel.isOnVideo)return;
            sendReady();

            this.removeFromParent();
            MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        }
        ,

        getStringByType: function (stype) {
            var type = Number(stype);
            var str = "";
            switch (type) {
                case HUGANG.HUGANG_ZHIGANG:
                    str = "直杠";
                    break;
                case HUGANG.HUGANG_WANGANG:
                    str = "弯杠";
                    break;
                case HUGANG.HUGANG_ANGANG:
                    str = "暗杠";
                    break;
                case HUGANG.HUGANG_DIANGANG:
                    str = "点杠";
                    break;
                case HUGANG.HUGANG_DIANPAO:
                    str = "点炮";
                    break;
                case HUGANG.HUGANG_PAOHU:
                    str = "炮胡";
                    break;
                case HUGANG.HUGANG_BEIZIMO:
                    str = "被自摸";
                    break;
                case HUGANG.HUGANG_ZIMO:
                    str = "自摸";
                    break;
                default:
                    break;
            }
            return str;
        }
        ,

        getStringGuiZhouByType: function (stype) {
            var type = Number(stype);
            var str = "";
            switch (type) {
                case 0:
                    str = "输豆";
                    break;
                case 1:
                    str = "爬坡豆";
                    break;
                case 2:
                    str = "点豆";
                    break;
                case 3:
                    str = "闷豆";
                    break;
                case 4:
                    str = "爬坡豆";
                    break;
                case 8:
                    str = "闷豆";
                    break;
                case 10:
                    str = "憨包豆";
                    break;
                case 11:
                    str = "打出";
                    break;
                case 64:
                    str = "输豆";
                    break;
                default:
                    break;
            }
            return str;
        }
    })
    ;

var MJCommonResult = MJResult.extend({
    updateContentView: function (data) {
        this.ackGameEnd = data;

        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - countY * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer , 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer , 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            cc.log("createHandCard-----");
            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX, startY));
            this.bgSpr.addChild(handCardLayer);

            cc.log("createSpecialHuTip-----");
            this.createSpecialHuTip(startX + 785, startY + 40, seatid);

            cc.log("createScoreLayer-----");
            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            cc.log("end-----");

        }
    },

    _win_effect: function (name) {

        try {
            ccs.armatureDataManager.addArmatureFileInfo(name == "win" ? getResPath("RoomMJ/effect/win/effects_xmjjsg.ExportJson") : getResPath("RoomMJ/effect/lose/effects_xmjzjzl.ExportJson"));
            var armature = new ccs.Armature(name == "win" ? "effects_xmjjsg" : "effects_xmjzjzl");
            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(0, -1, true);
                        armature.setPosition(cc.p(this.bgSpr.getContentSize().width / 2, this.bgSpr.getContentSize().height + 25));
                        this.bgSpr.addChild(armature);
                    }
                }
            }
        } catch (e) {
            Log(this, e);
        }
        return;

        var bgSp = null;
        var titleSp = null;
        var lightSp = null;
        if(name == "win"){
            bgSp = new cc.Sprite(getResPath("RoomMJ/result2/top_win_bg.png"));
            titleSp = new cc.Sprite(getResPath("RoomMJ/result2/top_win_title.png"));
            lightSp = new cc.Sprite(getResPath("RoomMJ/result2/top_win_light.png"));
        }else {
            bgSp = new cc.Sprite(getResPath("RoomMJ/result2/top_lose_bg.png"));
            titleSp = new cc.Sprite(getResPath("RoomMJ/result2/top_lose_title.png"));
            lightSp = new cc.Sprite(getResPath("RoomMJ/result2/top_lose_light.png"));
        }
        titleSp.setPosition(cc.p(bgSp.getContentSize().width/2 , bgSp.getContentSize().height/2 + 20));
        bgSp.addChild(titleSp);
        bgSp.setPosition(cc.p(this.bgSpr.getContentSize().width / 2, this.bgSpr.getContentSize().height));
        lightSp.setPosition(cc.p(this.bgSpr.getContentSize().width / 2, this.bgSpr.getContentSize().height + lightSp.getContentSize().height/2))
        this.addChild(lightSp , -1);
        this.bgSpr.addChild(bgSp , 100);
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        this.createEndInfoTip(x, y, layer, seatid);
        return layer;
    },

    //游戏结束后通用的提示信息
    createEndInfoTip: function (x, y, layer, seatid) {
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {

                    var smallCard = new MJCard();
                    smallCard.setValue(temp[j], 0, CardType.Card_End, 0);
                    smallCard.setScale(0.3);
                    smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                    smallCard.setPosition(cc.p(x, y));
                    layer.addChild(smallCard);
                    x += 26;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }

        return {x: x, y: y};
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        //具体胡什么。。。
    },

});