var MJTips = cc.Layer.extend(
    {
        tag: "MJTips",
        hu_tips: [],
        zhongma_tips: [],
        zhongma_tips2: [],
        baoting_tips: [],
        count: 0,
        tip: null,
        tip_effect: null,
        tip_text: null,
        my_tip: null,
        my_tip_text: null,
        no_dizhu: null,
        callback: null,
        out_card_effect: null,
        allPlayerChat: [null, null, null, null],
        ctor: function () {
            this._super();

            var size = cc.director.getWinSize();

            this.ignoreAnchorPointForPosition(false);
            this.setAnchorPoint(cc.p(0.5, 0.5));
            this.setContentSize(cc.size(size.width, size.height));
            var self = this;
            {
                this.tip = new cc.Sprite(getResPath("RoomMJ/text_bg.png"));
                this.tip.setPosition(cc.p(size.width / 2, 274));
                this.tip.setVisible(false);
                this.addChild(this.tip, 10000);

                this.tip_text = new ccui.Text("", "", 30);
                this.tip_text.setTextColor(cc.color(255, 249, 141));
                this.tip_text.setAnchorPoint(cc.p(0.5, 0.5));
                this.tip_text.setPosition(cc.p(this.tip.getContentSize().width / 2, this.tip.getContentSize().height / 2));
                this.tip.addChild(this.tip_text);

                this.tip_effect = new ccui.Text(".", "", 30);
                this.tip_effect.setTextColor(cc.color(255, 249, 141));
                this.tip_effect.setAnchorPoint(cc.p(0.0, 0.5));
                this.tip_effect.setPosition(cc.p(this.tip.getContentSize().width / 2, this.tip.getContentSize().height / 2));
                this.tip.addChild(this.tip_effect);


                this.count = 0;
                var cl = cc.callFunc(function () {

                    self.count++;
                    if (self.count > 2) {
                        self.count = 0;
                    }

                    if (self.count == 0) {
                        self.tip_effect.setString(".");
                    }
                    else if (self.count == 1) {
                        self.tip_effect.setString("..");
                    }
                    else if (self.count == 2) {
                        self.tip_effect.setString("...");
                    }
                });
                this.tip_effect.runAction(cc.sequence(cc.delayTime(0.2), cl).repeatForever());
            }

            {
                this.my_tip = new cc.Sprite(getResPath("RoomMJ/text_bg.png"));
                this.my_tip.setVisible(false);
                this.my_tip.setPosition(cc.p(size.width / 2, 274));
                this.addChild(this.my_tip, 10000);

                this.my_tip_text = new ccui.Text("", "AmericanTypewriter", 25);
                this.my_tip_text.setTextColor(cc.color(255, 249, 141));
                this.my_tip_text.setAnchorPoint(cc.p(0.5, 0.5));
                this.my_tip_text.setPosition(cc.p(this.my_tip.getContentSize().width / 2, this.my_tip.getContentSize().height / 2));
                this.my_tip.addChild(this.my_tip_text);
            }

            {
                this.endroomtip = new cc.Sprite(getResPath("RoomMJ/text_bg.png"));
                this.endroomtip.setPosition(cc.p(size.width / 2, 274 - 40));
                this.endroomtip.setVisible(false);
                this.addChild(this.endroomtip, 10000);

                this.endroomtip_text = new ccui.Text("", "", 30);
                this.endroomtip_text.setTextColor(cc.color(255, 249, 141));
                this.endroomtip_text.setAnchorPoint(cc.p(0.5, 0.5));
                this.endroomtip_text.setPosition(cc.p(this.tip.getContentSize().width / 2, this.tip.getContentSize().height / 2));
                this.endroomtip.addChild(this.endroomtip_text);
            }

            //out card effect
            {

                this.out_card_effect = new cc.Layer();
                this.out_card_effect.ignoreAnchorPointForPosition(false);
                this.out_card_effect.setAnchorPoint(cc.p(0, 0));
                this.out_card_effect.setPosition(cp.vzero);
                this.out_card_effect.setVisible(false);
                this.addChild(this.out_card_effect, 10000);

                var text = new cc.Sprite(getResPath("RoomMJ/effect/outcard_tip/out_card_effect_text.png"));
                text.setPosition(cc.p(size.width / 2 - 50, 158));
                this.out_card_effect.addChild(text);

//        auto arrow = new cc.Sprite("RoomMJ/effect/outcard_tip/this.out_card_effect_point.png");
//        arrow.setPosition(cc.p(size.width - 370, 246));
//        this.out_card_effect.addChild(arrow);

                var sp = new cc.Sprite(getResPath("RoomMJ/effect/outcard_tip/out_card_effect_1.png"));
                sp.setPosition(cc.p(size.width / 2 + 28, 99));
                this.out_card_effect.addChild(sp);

                var disappearf = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
                var disappear = Utils.getCCAnimate(getResPath("RoomMJ/effect/outcard_tip/out_card_effect_%1.png"), 10, disappearf, 0.1, true, false);
                sp.runAction(disappear.repeatForever());
            }

            var _listenerChat = cc.EventListener.create({
                event: cc.EventListener.CUSTOM,
                eventName: "notify_room_chat1",
                callback: function (evt) {
                    self.hasChatNotify(JsUtils.decodeBase64(evt.getUserData()));
                    cc.log("notify_room_chat1");
                }
            });
            cc.eventManager.addListener(_listenerChat, this);

            var _listenerChat2 = cc.EventListener.create({
                event: cc.EventListener.CUSTOM,
                eventName: "notify_room_chat",
                callback: function (evt) {
                    self.hasChatNotify(evt.getUserData());
                    cc.log("notify_room_chat");
                }
            });
            cc.eventManager.addListener(_listenerChat2, this);

            //var _listenerHome = cc.EventListener.create({
            //    event: cc.EventListener.CUSTOM,
            //    eventName: "chat_sound_play_start_notify1",
            //    callback: function (evt) {
            //        Log(self, "chat_sound_play_start_notify1:" + JsUtils.decodeBase64(evt.getUserData()));
            //        PlatformHelper.showToast("start_notify1:" + JsUtils.decodeBase64(evt.getUserData()));
            //    }
            //});
            //cc.eventManager.addListener(_listenerHome, this);
            //
            var _listenerHome2 = cc.EventListener.create({
                event: cc.EventListener.CUSTOM,
                eventName: "chat_sound_play_over_notify1",
                callback: function (evt) {
                    ZJHModel.getInstance().isPause = 0;
                }
            });
            cc.eventManager.addListener(_listenerHome2, this);
            //ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/newpeng/peng.ExportJson"));

        },
        autoEndRoomTime:0,
        startAutoEndRoomTip:function(ts,show,seatid){
            this.autoEndRoomTime = ts * 1000 + time(null);
            var self = this;
            var cl = cc.callFunc(function () {
                var autoEndRoomTime = parseInt((self.autoEndRoomTime - time(null)) / 1000);
                if (autoEndRoomTime < 0) autoEndRoomTime = 0;
                var t = Utils.pad(parseInt(autoEndRoomTime / 60), 2) + ":" + Utils.pad(parseInt(autoEndRoomTime % 60), 2);
                self.endroomtip_text.setString("有玩家超时，" + parseInt(MJModel.outtimecount / 60) + "分钟后自动解散(" + t + ")");
            });
            var autoEndRoomTime = parseInt((this.autoEndRoomTime - time(null)) / 1000);
            var t = Utils.pad(parseInt(autoEndRoomTime / 60), 2) + ":" + Utils.pad(parseInt(autoEndRoomTime % 60), 2);
            this.endroomtip_text.setString("有玩家超时，" + parseInt(MJModel.outtimecount / 60) + "分钟后自动解散(" + t + ")");
            this.endroomtip.stopAllActions();
            this.endroomtip.runAction(cc.sequence(cc.delayTime(1), cl).repeat(ts + 1));
            this.endroomtip.setVisible(show);

        },
        setAutoEndRoomVis:function(show){
            this.endroomtip.setVisible(show);
            if (show == false)this.endroomtip.stopAllActions();
        },
        showBigfaceNew: function (bpos, epos, fid, sex) {
            if (bpos == epos) {
                return;
            }

            try {
                var face = "";
                var effects = "";
                var shanxieffect = "";
                var action = "";
                var effect_time = 3;
                var fade_time = 0.2;//淡入时间
                var move_time = 0.5;//飞行时间
                var begin;
                var beginSound = getResPath(__String.createWithFormat("RoomMJ/bigface/sound/%1_%2.mp3", sex == SEX_ID.SEX_MAN ? "m" : "w", fid));
                var effect_sound = "";//特效音效
                var dx = 0;
                var end;
                begin = MJConfig.getPlayerPos(bpos);
                end = MJConfig.getPlayerPos(epos);

                switch (fid) {
                    case 1: {
                        face = getResPath("RoomMJ/bigface/hua/hua.png");
                        effects = getResPath("RoomMJ/bigface/hua/effects_bqhua.ExportJson");
                        action = "effects_bqhua";
                        effect_sound = getResPath("RoomMJ/bigface/sound/xianhua.mp3");
                        break;
                    }
                    case 2: {
                        face = getResPath("RoomMJ/bigface/yanhua/fireworks.png");
                        effects = getResPath("RoomMJ/bigface/yanhua/effects_bqyanhua.ExportJson");
                        action = "effects_bqyanhua";
                        effect_sound = getResPath("RoomMJ/bigface/sound/yanhua.mp3");
                        effect_time = 2.7;
                        break;
                    }
                    case 3: {
                        face = getResPath("RoomMJ/bigface/kiss/kiss.png");
                        effects = getResPath("RoomMJ/bigface/kiss/effects_bqweng.ExportJson");
                        action = "effects_bqweng";
                        effect_sound = getResPath("RoomMJ/bigface/sound/kiss.mp3");
                        effect_time = 2;
                        break;
                    }
                    case 4: {
                        face = getResPath("RoomMJ/bigface/pianbao/firecrackers.png");
                        effects = getResPath("RoomMJ/bigface/pianbao/effectsbqbianpao.ExportJson");
                        action = "effectsbqbianpao";
                        effect_sound = getResPath("RoomMJ/bigface/sound/pianbao.mp3");
                        effect_time = 5;
                        break;
                    }
                    case 5: {
                        face = getResPath("RoomMJ/bigface/cheers/cheers.png");
                        effects = getResPath("RoomMJ/bigface/cheers/effects_bqganbei.ExportJson");
                        action = "effects_bqganbei";
                        effect_sound = getResPath("RoomMJ/bigface/sound/pijiu.mp3");
                        dx = -100;
                        effect_time = 0.8;
                        break;
                    }
                    case 6: {
                        face = getResPath("RoomMJ/bigface/hongbao/redbag.png");
                        effects = getResPath("RoomMJ/bigface/hongbao/effects_bqhongbao.ExportJson");
                        action = "effects_bqhongbao";
                        effect_sound = getResPath("RoomMJ/bigface/sound/rebag.mp3");
                        effect_time = 3;
                        break;
                    }
                    case 7: {
                        face = getResPath("RoomMJ/bigface/diyan/xuejia.png");
                        effects = getResPath("RoomMJ/bigface/diyan/effects_sxuejia1.ExportJson");
                        action = "effects_sxuejia1";
                        effect_sound = getResPath("RoomMJ/bigface/sound/xuejia.mp3");
                        effect_time = 3;
                        break;
                    }
                    case 8: {
                        face = getResPath("RoomMJ/bigface/huaxie/flower1.png");
                        effects = getResPath("RoomMJ/bigface/huaxie/effects_bqhldxl1.ExportJson");
                        action = "effects_bqhldxl1";
                        beginSound = getResPath("RoomMJ/bigface/sound/huaer.mp3");
                        effect_time = 2;
                        break;
                    }
                    case 9: {
                        face = getResPath("RoomMJ/bigface/bomb/bomb.png");
                        effects = getResPath("RoomMJ/bigface/bomb/effects_bqzhadan.ExportJson");
                        action = "effects_bqzhadan";
                        effect_sound = "";
                        Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/zhadan.mp3"));
                        effect_time = 2;
                        break;
                    }
                    case 13: {
                        face = getResPath("RoomMJ/bigface/orange/orange.png");
                        effects = getResPath("RoomMJ/bigface/orange/effects_sjrencz.ExportJson");
                        action = "effects_sjrencz";
                        effect_sound = getResPath("RoomMJ/bigface/sound/jidan.mp3");
                        beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                            sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        effect_time = 2;
                        break;
                    }
                    case 14: {
                        face = getResPath("RoomMJ/bigface/shanxi/icon/smoke.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/dan/effects_dan.ExportJson");
                        shanxieffect = "effects_dan"
                        action = "effects_yan";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/smoke.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        effect_time = 3.5;
                        break;
                    }
                    case 15: {
                        face = getResPath("RoomMJ/bigface/shanxi/icon/shoes.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/danxiehuazui/effects_danxiehuazui.ExportJson");
                        shanxieffect = "effects_danxiehuazui"
                        action = "effects_xie";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/shoes.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        effect_time = 1.2;
                        break;
                    }
                    case 16: {
                        face = getResPath("RoomMJ/bigface/shanxi/icon/kiss.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/danxiehuazui/effects_danxiehuazui.ExportJson");
                        shanxieffect = "effects_danxiehuazui"
                        action = "effects_zui";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/kiss.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        effect_time = 2;
                        break;
                    }
                    case 17: {
                        face = getResPath("RoomMJ/bigface/shanxi/icon/hua.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/danxiehuazui/effects_danxiehuazui.ExportJson");
                        shanxieffect = "effects_danxiehuazui"
                        action = "effects_hua";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/hua.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        effect_time = 1.8;
                        break;
                    }
                    case 18: {
                        if (epos == 3) {
                            end.x = end.x + 90;
                        }
                        face = getResPath("RoomMJ/bigface/shanxi/icon/cheers.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/dan/effects_dan.ExportJson");
                        shanxieffect = "effects_dan"
                        action = "effects_jiu";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/cheers.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        break;
                    }
                    case 19: {
                        face = getResPath("RoomMJ/bigface/shanxi/icon/bullion.png");
                        effects = getResPath("RoomMJ/bigface/shanxi/dan/effects_dan.ExportJson");
                        shanxieffect = "effects_dan"
                        action = "effects_jintiao";
                        effect_sound = getResPath("RoomMJ/bigface/shanxi/sound/jintiao.mp3");
                        //beginSound = getResPath(cc.formatStr("RoomMJ/bigface/sound/%s_jidan.mp3",
                        //    sex === SEX_ID.SEX_MAN ? "M" : "F"));
                        break;
                    }

                    default: {
                        break;
                    }
                }
                if (fid < 14) {
                    var face_sp = new cc.Sprite(face);
                    if (face_sp != null) {
                        face_sp.setPosition(begin);
                        var self = this;
                        var playeffect = cc.callFunc(function () {
                            ccs.armatureDataManager.addArmatureFileInfo(effects);
                            var armature = new ccs.Armature(action);
                            var animation = armature.getAnimation();
                            if (animation) {
                                if (typeof animation.playWithIndex === "function") {
                                    animation.playWithIndex(0, -1, 0);
                                    armature.setPosition(cc.p(end.x + dx, end.y));
                                    self.addChild(armature, 10000);

                                    if (fid == 7 && (epos != 1)) {
                                        armature.setScaleX(-1);
                                    }
                                }
                            }
                            armature.runAction(cc.sequence(cc.delayTime(effect_time), cc.removeSelf()));
                            if (effect_sound != "") Sound.getInstance().playEffect(effect_sound);
                        });

                        if (fid == 8) {
                            var sx = 1;
                            if (bpos == 1 || (bpos == 2 && (epos == 0 || epos == 3))) {
                                sx = -1;
                            }
                            face_sp.setPosition(cc.p(begin.x + (sx == -1 ? -50 : 50), begin.y));
                            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/bigface/huaxie/effects_bqhldxl.ExportJson"));
                            var armature = new ccs.Armature("effects_bqhldxl");
                            var animation = armature.getAnimation();
                            if (animation) {
                                if (typeof animation.playWithIndex === "function") {
                                    animation.playWithIndex(0, -1, 0);
                                    armature.setPosition(begin);
                                    self.addChild(armature, 10000);
                                    armature.runAction(cc.sequence(cc.delayTime(3), cc.removeSelf()));
                                    armature.setScaleX(sx);
                                }
                            }
                            face_sp.runAction(cc.sequence(cc.delayTime(1.5), cc.spawn(cc.fadeIn(0), cc.moveTo(move_time, end).easing(cc.easeSineIn())), cc.removeSelf(), playeffect));
                        } else {
                            face_sp.runAction(cc.sequence(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(move_time, end).easing(cc.easeSineIn())), cc.removeSelf(), playeffect));
                        }
                        face_sp.setOpacity(0);
                        this.addChild(face_sp);
                        if (beginSound != "") Sound.getInstance().playEffect(beginSound);
                    }
                }
                if (fid > 13) {
                    var face_sp = new cc.Sprite(face);
                    if (face_sp != null) {
                        face_sp.setPosition(begin);
                        var self = this;
                        var playeffect = cc.callFunc(function () {
                            ccs.armatureDataManager.addArmatureFileInfo(effects);
                            var armature = new ccs.Armature(shanxieffect);
                            var animation = armature.getAnimation();
                            if (animation) {
                                if (typeof animation.play === "function") {
                                    animation.play(action);
                                    armature.setPosition(cc.p(end.x + dx, end.y));
                                    self.addChild(armature, 10000);

                                    if (fid == 14 && (epos != 1)) {
                                        armature.setScaleX(-1);
                                    }
                                }
                            }
                            armature.runAction(cc.sequence(cc.delayTime(effect_time), cc.removeSelf()));
                            if (effect_sound != "") Sound.getInstance().playEffect(effect_sound);
                        });

                        if (fid == 20) {
                            var sx = 1;
                            if (bpos == 1 || (bpos == 2 && (epos == 0 || epos == 3))) {
                                sx = -1;
                            }
                            face_sp.setPosition(cc.p(begin.x + (sx == -1 ? -50 : 50), begin.y));
                            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/bigface/huaxie/effects_bqhldxl.ExportJson"));
                            var armature = new ccs.Armature("effects_bqhldxl");
                            var animation = armature.getAnimation();
                            if (animation) {
                                if (typeof animation.playWithIndex === "function") {
                                    animation.playWithIndex(0, -1, 0);
                                    armature.setPosition(begin);
                                    self.addChild(armature, 10000);
                                    armature.runAction(cc.sequence(cc.delayTime(3), cc.removeSelf()));
                                    armature.setScaleX(sx);
                                }
                            }
                            face_sp.runAction(cc.sequence(cc.delayTime(1.5), cc.spawn(cc.fadeIn(0), cc.moveTo(move_time, end).easing(cc.easeSineIn())), cc.removeSelf(), playeffect));
                        } else {
                            face_sp.runAction(cc.sequence(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(move_time, end).easing(cc.easeSineIn())), cc.removeSelf(), playeffect));
                        }
                        face_sp.setOpacity(0);
                        this.addChild(face_sp);
                        if (beginSound != "") Sound.getInstance().playEffect(beginSound);
                    }

                }
            }
            catch (e) {
                Log(this, e);
            }
        },
        showBigfaceNewYear: function (bpos, epos, fid, sex) {
            if (bpos == epos) {
                return;
            }

            try {
                var face = "";
                var effects = "";
                var action = "";
                var effect_time = 3;
                var fade_time = 0.2;//淡入时间
                var move_time = 0.5;//飞行时间
                var begin;
                var effect_sound = "";//特效音效
                var end;
                begin = MJConfig.getPlayerPos(bpos);
                end = MJConfig.getPlayerPos(epos);
                var ss = 1;
                var dx = 0;
                var dy = 0;
                if (epos == 1){
                    dx -= 0;
                } else if (epos == 0 || epos == 3){
                    dx += 0;
                } else if (epos == 2){
                    dy -= 10;
                }
                switch (fid) {
                    case 20:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/gxfc.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/gxfc/effectsgnbq_gxfc.ExportJson");
                        action = "effectsgnbq_gxfc";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/gxfc.mp3");
                        break;
                    }
                    case 21:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/jxry.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/jxry/effectsgnbq_yu.ExportJson");
                        action = "effectsgnbq_yu";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/jxry.mp3");
                        break;
                    }
                    case 22:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/xxsc.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/xxsc/effectsgnbq_xxsc.ExportJson");
                        action = "effectsgnbq_xxsc";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/xxsc.mp3");
                        break;
                    }
                    case 23:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/xnh.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/xnh/effectsgnbq_xnhzh.ExportJson");
                        action = "effectsgnbq_xnhzh";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/xnh.mp3");
                        break;
                    }
                    case 24:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/yffs.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/yffs/effectsgnbq_yffs.ExportJson");
                        action = "effectsgnbq_yffs";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/yffs.mp3");
                        if (epos == 1){
                            dx -= 40;
                        } else if (epos == 0 || epos == 3){
                            dx += 0;
                        } else if (epos == 2){
                            dy -= 0;
                        }
                        break;
                    }
                    case 25:
                    {
                        face = getResPath("RoomMJ/newyear/bigface/icon/zzrs.png");
                        effects = getResPath("RoomMJ/newyear/bigface/effect/zzrs/effectsgnbq_zzrs.ExportJson");
                        action = "effectsgnbq_zzrs";
                        effect_sound = getResPath("RoomMJ/newyear/bigface/sound/zzrs.mp3");
                        if (epos == 1){
                            dx -= 80;
                        } else if (epos == 0 || epos == 3){
                            dx += 80;
                        } else if (epos == 2){
                            dy -= 30;
                        }
                        break;
                    }
                    default:
                    {
                        return;
                    }
                }

                var face_sp = new cc.Sprite(face);
                if (face_sp != null) {
                    face_sp.setPosition(begin);
                    var self = this;
                    var playeffect = cc.callFunc(function () {
                        ccs.armatureDataManager.addArmatureFileInfo(effects);
                        var armature = new ccs.Armature(action);
                        armature.setScale(ss);
                        var animation = armature.getAnimation();
                        if (animation) {
                            if (typeof animation.playWithIndex === "function") {
                                animation.playWithIndex(0, -1, 0);
                                armature.setPosition(cc.p(end.x + dx, end.y + dy));
                                self.addChild(armature, 10000);
                            }
                        }
                        armature.runAction(cc.sequence(cc.delayTime(effect_time), cc.removeSelf()));
                        if (effect_sound != "") Sound.getInstance().playEffect(effect_sound);
                    });

                    face_sp.runAction(cc.sequence(cc.spawn(cc.fadeIn(fade_time), cc.moveTo(move_time, cc.p(end.x + dx, end.y + dy)).easing(cc.easeSineIn())), cc.removeSelf(), playeffect));
                    face_sp.setOpacity(0);
                    this.addChild(face_sp);
                }
            } catch (e) {
                Log(this, e);
            }
        },
        showBigFace: function (bpos, epos, fid, sex) {
            if (Utils.isNewYear()){
                this.showBigfaceNewYear(bpos, epos, fid, sex);
                return;
            }
            if (bpos == epos) {
                return;
            }
            if (fid == 10) {
                if (fid == 10) {
                    fid = 4;
                }
                this.showBigFace_old(bpos, epos, fid, sex);
                return;
            }
            this.showBigfaceNew(bpos, epos, fid, sex);
            return;
        },
        showBigFace_old: function (bpos, epos, fid, sex) {
            try {
                var begin;
                var end;

                var face = null;
                begin = MJConfig.getPlayerPos(bpos);
                end = MJConfig.getPlayerPos(epos);

                var appear = null;
                var move = null;
                var disappear = null;

                switch (fid) {
                    //case 1:
                    //{
                    //    face = new cc.Sprite("Room/bigface/flower/flower1.png");
                    //    if (face != null) {
                    //        appear = cc.fadeIn(0.5);
                    //        move = cc.moveTo(0.5, end);
                    //
                    //        var disappearf = [2, 3, 4, 5, 6, 7, 8, 9, 10];
                    //        disappear = Utils.getCCAnimate("Room/bigface/flower/flower%1.png", 9, disappearf, 0.2, false, false);
                    //    }
                    //    break;
                    //}
                    //case 2:
                    //{
                    //    face = new cc.Sprite("Room/bigface/cheers/cheers1.png");
                    //    if (face != null) {
                    //        appear = cc.fadeIn(0.5);
                    //        move = cc.moveTo(0.7, end);
                    //
                    //        var disappearf = [2, 3, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10];
                    //        disappear = Utils.getCCAnimate("Room/bigface/cheers/cheers%1.png", 13, disappearf, 0.10, false, false);
                    //    }
                    //    break;
                    //}
                    //case 3:
                    //{
                    //    face = new cc.Sprite("Room/bigface/kiss/kiss1.png");
                    //    if (face != null) {
                    //        appear = cc.fadeIn(0.5);
                    //        move = cc.moveTo(0.5, end);
                    //
                    //        var disappearf = [2, 3, 3, 4, 5, 6, 7, 8, 9, 10];
                    //        disappear = Utils.getCCAnimate("Room/bigface/kiss/kiss%1.png", 10, disappearf, 0.2, false, false);
                    //    }
                    //    break;
                    //}
                    case 4: {
                        face = new cc.Sprite(getResPath("RoomMJ/bigface/eggs/egg1.png"));
                        if (face != null) {
                            {
                                end.y -= 30;
                            }
                            appear = cc.fadeIn(0.5);
                            move = cc.spawn(cc.rotateBy(0.5, 720), cc.moveTo(0.5, end));

                            var disappearf = [2, 2, 2, 3, 4, 5, 6];
                            disappear = Utils.getCCAnimate(getResPath("RoomMJ/bigface/eggs/egg%1.png"), 7, disappearf, 0.2, false, false);
                        }
                        break;
                    }
                    //case 5:
                    //{
                    //    face = new cc.Sprite(getResPath("RoomMJ/bigface/shoe/shoe1.png"));
                    //    if (face != null) {
                    //        {
                    //            end.y -= 10;
                    //        }
                    //        appear = cc.fadeIn(0.5);
                    //        move = cc.spawn(cc.rotateBy(0.5, 360 + 360), cc.moveTo(0.5, end));
                    //        var disappearf = [2, 2, 2, 3, 4, 5, 6, 7, 8, 9];
                    //        disappear = Utils.getCCAnimate(getResPath("RoomMJ/bigface/shoe/shoe%1.png"), 10, disappearf, 0.2, false, false);
                    //    }
                    //
                    //    break;
                    //}
                    case 6: {
                        face = new cc.Sprite(getResPath("RoomMJ/bigface/bomb/bomb1.png"));
                        if (face != null) {
                            appear = cc.fadeIn(0.5);
                            move = cc.spawn(cc.rotateBy(0.5, 720), cc.moveTo(0.5, end));

                            var disappearf = [2, 3, 4, 2, 3, 4, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 11, 12, 12, 12, 13, 14, 15];
                            disappear = Utils.getCCAnimate(getResPath("RoomMJ/bigface/bomb/bomb%1.png"), 24, disappearf, 0.1, false, false);
                        }
                        break;
                    }
                    default: {
                        break;
                    }
                }

                if (fid > -1 && fid < 7) {
                    if (face != null) {
                        face.setPosition(begin);
                        face.setOpacity(0);
                        face.setTag(1000 + fid);
                        this.bigFacePlayTalk(fid, sex);
                        var self = this;

                        var playsoundcallback = cc.callFunc(function () {
                            sex == SEX_ID.SEX_FEMALE ? self.bigFacePlaySoundf(face) : self.bigFacePlaySoundm(face);
                        });

                        face.runAction(cc.sequence(appear, move.easing(cc.easeSineIn()), playsoundcallback, disappear, cc.removeSelf()));
                        this.addChild(face);
                    }

                }
            } catch (e) {

            }
        },
        bigFacePlayTalk: function (faceid, sex) {
            if (faceid == 1) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_xianhua.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
            else if (faceid == 2) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_pijiu.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
            else if (faceid == 3) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_kiss.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
            else if (faceid == 4) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_jidan.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
            else if (faceid == 5) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_tuoxie.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
            else if (faceid == 6) {
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/bigface/sound/%1_zhadan.mp3"), sex == SEX_ID.SEX_FEMALE ? "F" : "M"));
            }
        },
        bigFacePlaySoundf: function (pSender) {
            var faceid = pSender.getTag();
            faceid -= 1000;
            if (faceid == 1) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/xianhua.mp3"));
            }
            else if (faceid == 2) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/pijiu.mp3"));
            }
            else if (faceid == 3) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/f_wen.mp3"));
            }
            else if (faceid == 4) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/jidan.mp3"));
            }
            else if (faceid == 5) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/tuoxie.mp3"));
            }
            else if (faceid == 6) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/zhadan.mp3"));
            }
        },
        bigFacePlaySoundm: function (pSender) {
            var faceid = pSender.getTag();
            faceid -= 1000;

            if (faceid == 1) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/xianhua.mp3"));
            }
            else if (faceid == 2) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/pijiu.mp3"));
            }
            else if (faceid == 3) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/m_wen.mp3"));
            }
            else if (faceid == 4) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/jidan.mp3"));
            }
            else if (faceid == 5) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/tuoxie.mp3"));
            }
            else if (faceid == 6) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/bigface/sound/zhadan.mp3"));
            }
        },

        reset: function () {
            this.showTextTip("");
            this.hideOutCardTip();
        },
        showTextTip: function (str) {
            if (str == "") {
                this.tip.setVisible(false);
            }
            else {
                this.tip.setVisible(true);
                this.tip_text.setString(str);
                this.tip_effect.setPositionX(this.tip_text.getPositionX() + this.tip_text.getContentSize().width / 2);
            }
        },

        showMyTip: function (str) {
            if (str == "") {
                this.my_tip.setVisible(false);
            }
            else {
                this.my_tip.setVisible(true);
                this.my_tip_text.setString(str);
                this.my_tip.stopAllActions();
                this.my_tip.runAction(cc.sequence(cc.delayTime(3), cc.hide()));
            }
        },

        setCallback: function (callback) {
        },

        hasChatNotify: function (msg) {
            if (msg == null) {
                return;
            }

            var json = JSON.parse(msg);

            if (json == null)return;
            var uid = json["uid"];
            var name = json["name"];
            var content = json["content"];

            var seatid = -1;
            for (var i = 0; i < 4; i++) {
                var p = MJModel.players[i];
                if (p.uid == uid) {
                    seatid = i;
                    break;
                }
            }

            if (seatid != -1) {
                if (json.hasOwnProperty("filepath") && json["filepath"] != null) {
                    SoundModel.getInstance().addSound(json["filepath"]);
                    this.showSound(MJModel.getPosBySeatid(seatid), json["filepath"], json["time"]);
                } else {
                    this.showChat(MJModel.getPosBySeatid(seatid), content);
                    var p = MJModel.players[seatid];
                    var chat_sound = Utils.getFastChatSound(content, p.sex);
                    if (chat_sound != "") {
                        Sound.getInstance().playEffect(chat_sound);
                    }
                }

                MJModel.mj_chatInfoList.push(json);
                cc.eventManager.dispatchCustomEvent("chat_info_notice");
            }
        },
        showSound: function (pos, filepath, time) {
            try {
                if (this.allPlayerChat[pos]) {
                    this.allPlayerChat[pos].removeFromParent();
                    this.allPlayerChat[pos] = null;
                }

                var showTime = 3;
                if (time && time != 0) {
                    showTime = time;
                }
                var chat = new MJPlayerChat();
                chat.initSound(pos, filepath, pos != 2, pos == 1, time);
                chat.setPosition(MJConfig.getPlayerChatPos(pos));
                this.addChild(chat);

                this.allPlayerChat[pos] = chat;
                var self = this;
                var callback = cc.callFunc(function () {
                    self.allPlayerChat[pos] = null;
                    chat.removeFromParent();
                });
                chat.runAction(cc.sequence(cc.delayTime(showTime), callback));
            } catch (e) {

            }

            if (MJModel.mj_table.pre_scene) {
                MJModel.mj_table.pre_scene.showSound(pos, filepath, time);
            }
        },
        showChat: function (pos, content) {
            try {
                if (this.allPlayerChat[pos]) {
                    this.allPlayerChat[pos].removeFromParent();
                    this.allPlayerChat[pos] = null;
                }

                var chat = new MJPlayerChat();
                chat.initChat(pos, content, pos != 2, pos == 1);
                chat.setPosition(MJConfig.getPlayerChatPos(pos));
                this.addChild(chat);

                this.allPlayerChat[pos] = chat;
                var self = this;
                var callback = cc.callFunc(function () {
                    self.allPlayerChat[pos] = null;
                    chat.removeFromParent();
                });
                chat.runAction(cc.sequence(cc.delayTime(3), callback));
            } catch (e) {
                Log(this, e);
            }

            if (MJModel.mj_table.pre_scene) {
                MJModel.mj_table.pre_scene.showChat(pos, content);
            }
        },
        ShowMoveChat: function (uid, name, content) {
            var winSize = cc.director.getWinSize();
            var container = new cc.Sprite();
            this.addChild(container, 100);
            var totalWidth = 0;

            var contentLabel = new cc.LabelTTF(content, "Arial", 24);
            contentLabel.setColor(cc.WHITE);
            contentLabel.setAnchorPoint(cc.p(0, 0));
            container.addChild(contentLabel);
            totalWidth += contentLabel.getContentSize().width;

            var nameLabel = new cc.LabelTTF(name + ":", "Arial", 24);

            nameLabel.setAnchorPoint(cc.p(0, 0));
            nameLabel.setPosition(cc.p(0, 0));
            container.addChild(nameLabel);
            totalWidth += nameLabel.getContentSize().width;

            contentLabel.setPosition(cc.p(nameLabel.getContentSize().width, 0));

            if (ZJHModel.getInstance().uid == uid) {
                nameLabel.setColor(cc.GREEN);
            }
            else {
                nameLabel.setColor(cc.color(181, 243, 255));
            }

            var begin = cc.p(winSize.width, winSize.height - 120 - Utils.Random(0, 100));
            container.setPosition(begin);
            container.runAction(cc.sequence(cc.moveBy(6, cc.p(-winSize.width - totalWidth, 0)),
                cc.removeSelf()));
        },//弹幕

        hideAllTip: function () {
            while (this.getChildByName("hu_effect") != null) {
                this.removeChildByName("hu_effect");
            }
        },
        showQianggangHuEffect: function (pos, out_pos) {
            try {
                this.showEffect(out_pos, ActionType.TYPE_WANGANG);
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/qghu/effects_mjxqgh.ExportJson"));
                var armature = new ccs.Armature("effects_mjxqgh");
                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0, -1, 0);

                            armature.setPosition(MJConfig.getOperatorTipPos(pos));
                            this.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        },

        showOtherEffect: function (pos, effectFile, effect_name, time, action_name) {
            try {
                if (time == undefined) {
                    time = 1;
                }
                if (action_name == undefined) {
                    action_name = "";
                }
                var begin;
                {
                    begin = MJConfig.getOperatorTipPos(pos);
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath(effectFile));
                    var armature = null;
                    armature = new ccs.Armature(effect_name);
                    if (armature != null) {
                        animation = armature.getAnimation();
                        if (animation) {
                            if (typeof animation.playWithIndex === "function") {
                                if (action_name != "") {
                                    animation.play(action_name);
                                } else {
                                    animation.playWithIndex(0);
                                }

                                armature.setPosition(begin);
                                this.addChild(armature, 10000);
                            }
                        }
                        armature.runAction(cc.sequence(cc.delayTime(time), cc.removeSelf()));
                    }
                }
            } catch (e) {
                Log(this, e);
            }
            return null;
        },

        showEffect: function (pos, type, zimo) {
            try {
                if (zimo == undefined) zimo = false;
                var sp = null;
                var effect = null;
                var begin;
                var end;
                var size = cc.director.getWinSize();

                {
                    begin = MJConfig.getOperatorTipPos(pos);

                    var armature = null;
                    var name = "";

                    if (type == ActionType.TYPE_PENG) {
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/peng/effects_mjxpen.ExportJson"));
                        armature = new ccs.Armature("effects_mjxpen");
                        name = "peng";
                    }
                    else if (type == ActionType.TYPE_HU) {
                        if (zimo) {
                            name = "zimo";
                            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/zimo/effects_mjxzimo.ExportJson"));
                            armature = new ccs.Armature("effects_mjxzimo");
                        } else {
                            name = "hu";
                            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/hu/effects_mjxhu.ExportJson"));
                            armature = new ccs.Armature("effects_mjxhu");
                        }
                    }
                    else if (type == ActionType.TYPE_LEFT_CHI || type == ActionType.TYPE_CENTER_CHI || type == ActionType.TYPE_RIGHT_CHI) {
                        name = "chi";
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/chi/effects_mjxchi.ExportJson"));
                        armature = new ccs.Armature("effects_mjxchi");
                    }
                    else {
                        name = "gang";
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/gang/effects_mjxgang.ExportJson"));
                        armature = new ccs.Armature("effects_mjxgang");
                    }

                    if (armature != null && name != "") {
                        animation = armature.getAnimation();
                        if (animation) {
                            if (typeof animation.playWithIndex === "function") {
                                //animation.play(name);
                                animation.playWithIndex(0);
                                armature.setPosition(begin);
                                this.addChild(armature, 10000);
                            }
                        }
                        armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                        armature.setName("hu_effect");
                        return armature;
                    }
                }
            } catch (e) {
                Log(this, e);
            }
            return null;
        },

        showEffect1: function (pos, out_pos, type, effect) {
            try {
                var begin = MJConfig.getOperatorTipPos(pos);

                var armature = null;
                var name = "";

                if (effect == "qiangganghu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/qiangganghu/effects_sysmj_fontqiangganghu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontqiangganghu");
                    name = "qiangganghu";
                }
                else if (type == ActionType.TYPE_PENG) {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/peng/effects_sysmj_fontpeng.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontpeng");
                    name = "peng";
                }
                else if (type == ActionType.TYPE_HU) {
                    if (effect == "zimo") {
                        name = "zimo";
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/zimo/effects_sysmj_fontzimo.ExportJson"));
                        armature = new ccs.Armature("effects_sysmj_fontzimo");
                    } else {
                        name = "hu";
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/paohu/effects_sysmj_fontpaohu.ExportJson"));
                        armature = new ccs.Armature("effects_sysmj_fontpaohu");
                    }
                }
                else if (type == ActionType.TYPE_LEFT_CHI || type == ActionType.TYPE_CENTER_CHI || type == ActionType.TYPE_RIGHT_CHI) {
                    name = "chi";
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/chi/effects_sysmj_fontchi.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontchi");
                }
                else {
                    name = "gang";
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect1/gang/effects_sysmj_fontgang.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontgang");
                }

                if (armature != null && name != "") {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            //animation.play(name);
                            animation.playWithIndex(0);
                            armature.setPosition(begin);
                            this.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                    armature.setName("hu_effect");
                    return armature;
                }
            } catch (e) {
                Log(this, e);
            }
            return null;
        },
        showTingEffect: function (pos, type) {
            try {
                var armature = null;

                if (type == LISTEN_TYPE.LISTEN_CARD_BAIPAI) {
                    armature = new ccs.Armature("effects_xtangp");

                } else if (type == LISTEN_TYPE.LISTEN_CARD_FIRST_BAOPAI) {
                    armature = new ccs.Armature("effects_xbaopai");
                }
                else {
                    armature = new ccs.Armature("effects_xbaot");
                }

                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);

                            armature.setPosition(MJConfig.getOperatorTipPos(pos));
                            this.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        },

        //展示简单的动画，用于简化碰杠胡动画
        showSimpleEffect: function (pos, out_pos, type, effect, hold) {
            try {
                if (hold == undefined)hold = false;
                var begin = MJConfig.getOperatorTipPos(pos);
                var path = null;
                var parentPath = "RoomMJ/simple/";
                if (effect == "qiangganghu") {
                    hold = true;
                    path = getResPath(parentPath + "qiangganghu.png");
                } else if (effect == "dianpao") {
                    hold = true;
                    path = getResPath(parentPath + "dianpao.png");
                } else if (effect == "haidi") {
                    path = getResPath(parentPath + "haidi.png");
                } else if (effect == "baoting") {
                    path = getResPath(parentPath + "baoting.png");
                } else if (effect == "buzhang") {
                    path = getResPath(parentPath + "buzhang.png");
                } else if (effect == "genzhuang") {
                    var size = cc.director.getWinSize();
                    begin = cc.p(size.width / 2, size.height / 2);
                    path = getResPath(parentPath + "genzhuang.png");
                } else if (type == ActionType.TYPE_PENG) {
                    path = getResPath(parentPath + "peng.png");
                } else if (type == ActionType.TYPE_HU) {
                    hold = true;
                    if (effect == "zimo") {
                        path = getResPath(parentPath + "zimo.png");
                    } else {
                        if (pos != out_pos) {
                            this.showSimpleEffect(out_pos, null, null, "dianpao");
                        }
                        path = getResPath(parentPath + "hu.png");
                    }
                } else if (type == ActionType.TYPE_LEFT_CHI || type == ActionType.TYPE_CENTER_CHI || type == ActionType.TYPE_RIGHT_CHI) {
                    path = getResPath(parentPath + "chi.png");
                } else {
                    path = getResPath(parentPath + "gang.png");
                }

                var bg = new cc.Sprite(getResPath(parentPath + "bg.png"));
                bg.setPosition(begin);
                bg.setName("hu_effect");
                // this.addChild(bg, 10000);

                var sp = new cc.Sprite(path);
                sp.setPosition(begin);
                sp.setName("hu_effect");
                this.addChild(sp, 10000);

                if (hold) {
                    // bg.runAction(cc.sequence(cc.delayTime(this.getHuEffectTime()), cc.removeSelf()));
                    sp.runAction(cc.sequence(cc.delayTime(this.getHuEffectTime()), cc.removeSelf()));
                } else {
                    // bg.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                    sp.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        },

        getHuEffectTime: function () {
            return 2;
        },


        showOutCardEffect: function (v) {
            if (this.out_card_effect) this.out_card_effect.setVisible(v);
        },


        ShowGameState: function (type) {
            this.showGameStateEffect(type);

            // var size = cc.director.getWinSize();
            // var jipai_bg = new cc.Sprite();
            // jipai_bg.setAnchorPoint(cc.p(0.5, 0.5));
            // jipai_bg.setPosition(MJConfig.getInfoPos());
            // this.addChild(jipai_bg);
            //
            // var buf = __String.createWithFormat(getResPath("RoomMJ/effect/gamestate/effects_gamestate_%1.png"), type);
            // var bg_size = jipai_bg.getContentSize();
            // var effects_js = new cc.Sprite(buf);
            // effects_js.setPosition(cc.p(bg_size.width / 2, bg_size.height / 2));
            // jipai_bg.addChild(effects_js);
            // effects_js.runAction(cc.sequence(cc.delayTime(1.0 / 12 * 12.0 / 30), cc.scaleTo(0.02 * 12.0 / 30, 0.96), cc.delayTime(1.0 / 12 * 12.0 / 30), cc.scaleTo(0.02 * 12.0 / 30, 1.04), cc.delayTime(1.0 / 12 * 12.0 / 30), cc.scaleTo(0.02 * 12.0 / 30, 1.0)));
            //
            // var seq = cc.sequence(cc.delayTime(1.5), cc.removeSelf());
            // jipai_bg.runAction(seq);
        },


        showGameStateEffect: function (type) {
            var path = "";
            var name = "";
            if (type == 1) {
                path = getResPath("RoomMJ/effect/kaiju/effects_xmjkaishiyouxi.ExportJson");
                name = "effects_xmjkaishiyouxi";
            } else if (type == 3) {
                path = getResPath("RoomMJ/effect/liuju/effects_xmjliuju.ExportJson");
                name = "effects_xmjliuju";
            } else {
                return;
            }
            try {
                ccs.armatureDataManager.addArmatureFileInfo(path);
                var size = cc.director.getWinSize();
                var armature = new ccs.Armature(name);
                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);

                            armature.setPosition(MJConfig.getInfoPos());
                            this.addChild(armature, 10000);

                            armature.runAction(cc.sequence(cc.delayTime(1.2), cc.removeSelf()));
                        }
                    }
                }
            } catch (e) {
                Log(this, e);
            }
        },


        resetRemove: function () {
            try {
                this.removeChildByTag(98);
                this.removeChildByTag(99);
                this.removeChildByTag(101);
                while (this.getChildByName("hu_effect")) {
                    this.removeChildByName("hu_effect");
                }
            } catch (e) {
                Log(this, e)
            }
        },

        _curOutCardTip: null,
        hideOutCardTip: function () {
            if (this._curOutCardTip) {
                this._curOutCardTip.setVisible(false);
                this._curOutCardTip.stopAllActions();
            }
        },
        showOutCardTip: function () {
            try {
                if (this._curOutCardTip == null) {
                    var size = cc.director.getWinSize();
                    this._curOutCardTip = new cc.Sprite(getResPath("RoomMJ/out_card_tip.png"));
                    this._curOutCardTip.setVisible(false);
                    this._curOutCardTip.setPosition(cc.p(size.width - 181, 132));
                    this._curOutCardTip.setAnchorPoint(cc.p(0.8, 0));
                    this.addChild(this._curOutCardTip, 100000);

                    //var tf = new cc.LabelTTF("到你出牌咯！", "Thonburi", 45);
                    //tf.setPosition(cc.p(this._curOutCardTip.getContentSize().width / 2, this._curOutCardTip.getContentSize().height / 2 + 5));
                    //tf.setColor(cc.color(78, 45, 32));
                    //this._curOutCardTip.addChild(tf);
                }
                if (!this._curOutCardTip.isVisible()) {
                    this._curOutCardTip.setVisible(false);
                    // this._curOutCardTip.runAction(cc.sequence(cc.scaleTo(0.1, 1), cc.delayTime(0.5), cc.scaleTo(0.17, 0), cc.hide()));
                    this._curOutCardTip.runAction(cc.sequence(cc.delayTime(MJModel.outCardTime),cc.show(),cc.scaleTo(0.1, 1), cc.delayTime(0.5), cc.scaleTo(0.17, 0), cc.hide()));
                }
            } catch (e) {
                this._curOutCardTip = null;
            }
        },

        faces: ["effectsxmjbq_wolai", "effectsxmjbq_kaixin", "effectsxmjbq_dcpl", "effectsxmjbq_aiqi", "effectsxmjbq_bzzz", "effectsxmjbq_haixiu", "effectsxmjbq_dszc", "effectsxmjbq_azjs", "effectsxmjbq_kuaidian"],

        showFaceSelf: function (type, pos) {
            if (Utils.isNewYear()) {
                this.showFaceSelfNewYear(type, pos);
                return;
            }
            try {
                cc.log("type:" + type + ";name:" + this.faces[type]);
                Sound.getInstance().playEffect(getResPath(cc.formatStr("RoomMJ/sound/faceSelf/face%s.mp3", type)));
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/face_self/face" + type + "/" + this.faces[type] + ".ExportJson"));
                var begin = MJConfig.getPlayerPos(pos);
                if (pos == 0) {
                    begin.x += 120;
                    begin.y += 20;
                } else if (pos == 1) {
                    begin.x -= 120;
                } else if (pos == 2) {
                    begin.y -= 50;
                    begin.x += 100;
                } else if (pos == 3) {
                    begin.x += 120;
                    begin.y += 20;
                }

                if (MJModel.mj_table.pre_scene) {
                    begin = MJModel.mj_table.pre_scene.getPlayerPos(pos);
                }
                var armature = new ccs.Armature(this.faces[type]);
                if (armature) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);
                            armature.setPosition(begin);
                            // armature.setScale(0.7);
                            MJModel.mj_table.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        },
        showFaceSelfNewYear: function (type, pos) {
            type -= 2019;
            if (type <= 0)return;

            var dirname = ["","xbbn", "gxfc", "hhh", "hyll", "jzhs", "nnyy", "xnkl", "zlyj", "znbf"];
            var effectname = ["","effectsxiaobei_bn", "effectsxiaozhu_gxfc", "effectsxiaozhu_ha", "effectsxiaozhu_hyll", "effectsxiaozhu_jzhs", "effectsxiaobei_nnyy", "effectsxiaobei_xnkl", "effectsxiaobei_zlyj", "effectsxiaobei_znbf"];
            try {
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/newyear/chatface/effect/" + dirname[type] + "/" + effectname[type] + ".ExportJson"));
                var begin = MJConfig.getPlayerPos(pos);
                if (pos == 1){
                    begin.x -= 10;
                } else if (pos == 0 || pos == 3){
                    begin.x += 10;
                } else if (pos == 2){
                    begin.y -= 40;
                }
                if (MJModel.mj_table.pre_scene) {
                    begin = MJModel.mj_table.pre_scene.getPlayerPos(pos);
                }
                var armature = new ccs.Armature(effectname[type]);
                if (armature) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);
                            armature.setPosition(begin);
                            //armature.setScale(0.6);
                            MJModel.mj_table.addChild(armature, 10000);
                        }
                    }
                    Sound.getInstance().playEffect(getResPath("RoomMJ/newyear/chatface/sound/" + dirname[type] + ".mp3"));
                    armature.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        },
    });
