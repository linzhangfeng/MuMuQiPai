/*
 安阳麻将 2018.12.18
 */
loadProtoFile("proto/anyangmajianggameproto.proto");

var SELF_CMD = {
    SERVER_SEND_PAOFEN_START : 5074,        //开始选飘
    CLIENT_CHOOSE_PAOFEN     : 5075,        //客户端选择飘分
    SERVER_PAOFEN_RESULT     : 5076,        //选飘结果
    SERVER_LAIZICARD_RESULT  : 5077,        //癞子
};

var GameType = {
    MJ_NOFENG: 0,      //不带风玩法
    MJ_DAIHUN: 1,      //带混玩法
    MJ_JIEFENG: 2,     //接风玩法
    MJ_HONGZHONG: 3,   //红中玩法
};

var PiaoType = {
    PIAO_NO: 0,
    PIAO_1: 1,
    PIAO_2: 2,
    PIAO_3: 3,
};

var PZHActionType =
{
    TYPE_BAOTING: 0x200,//报听
    TYPE_QUXIAOBAOTING: 0x400,//报听
};

var sendPiaoNums = function (v) {
    var packet = createPacket("proto.game.anyangmajiang.ResPaoFenResult");
    packet.chairid = MJModel.seatid;
    packet.paofen = v;
    cc.log("LX=======ResPaoFenResult:" + JSON.stringify(packet))
    sendPacket(packet, SELF_CMD.CLIENT_CHOOSE_PAOFEN);
};

var MJTable_AnYang = MJTable.extend({
    tag : "MJTable_AnYang",
    _LaiziArray:[],
    _curLaizipi: -1,
    _curLaizi_bg: null,
    isRecordShow: false,    //总结算界面展示
    _pkg_id: 0,
    play_id:[],

    cardNumBg:null,
    leftCardNum: 0, //剩余的排数
    cardNumLab: null,
    jushuNumBg: null,
    jushuNumLab: null,

    isBaoTingIng: false,
    _fanmain_card: [-1, -1, -1, -1],
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        MJModel.mj_suport_fangyan = 0;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;

        MJModel.mj_gps_type = 1;
        MJModel.shareType = 1;

        this.isBaoTingIng = false;

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if(this._pkg_id == 3202 || this._pkg_id == 3039) this._pkg_id = GameType.MJ_NOFENG;
            if(this._pkg_id == 3231 || this._pkg_id == 3061) this._pkg_id = GameType.MJ_DAIHUN;
            if(this._pkg_id == 3254 || this._pkg_id == 3090) this._pkg_id = GameType.MJ_JIEFENG;
            if(this._pkg_id == 3269 || this._pkg_id == 3091) this._pkg_id = GameType.MJ_HONGZHONG;

            if (this._pkg_id == 3203 || this._pkg_id == 3040) {
                this._pkg_id = GameType.MJ_NOFENG;
                MJModel.mj_roomType = 1;
            }
            if (this._pkg_id == 3232 || this._pkg_id == 3062) {
                this._pkg_id = GameType.MJ_DAIHUN;
                MJModel.mj_roomType = 1;
            }
        } catch (e) {
            Log(this, e);
        }
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }
        this._init_extend();
        this._super();
        this._init_ui();
        this.init_pao();
    },

    updateBg:function(isInit) {
        this._super(isInit);
        if (isInit)return;
        GetChild(this.paoLayer, "tips").setPosition(MJConfig.getInfoPos());
        if (this.room_Card.isDuoPai(0)) {
            this.room_Card.setSomeCardClickState();
        }
    },

    _init_ui: function () {
        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting1.png"), "");
            this.room_Action.actions["baoting"] = btn;
            btn.setName("baoting");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }

        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("anyangmj/action/qx_baoting1.png"), getResPath("anyangmj/action/qx_baoting1.png"), "");
            this.room_Action.actions["quxiaobaoting"] = btn;
            btn.setName("quxiaobaoting");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }

        if (MJModel.isOnVideo) {
            for (var i = 0; i < 4; i++) {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting1.png"), "");
                btn.setName("baoting");
                btn.setVisible(false);
                btn.setTag(4);
                this.room_Action_video.addChild(btn);

                this.room_Action_video.actions[i]["baoting"] = btn;
                this.room_Action_video.opBtns[i].push(btn);
            }
        }
    },

    _init_extend : function () {
        var self_table = this;

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            if ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                if(self_table.room_Card.isDuoPai(0)){
                    this.actions["hu"].loadTextureNormal(getResPath("anyangmj/action/zimo.png"));
                }else{
                    this.actions["hu"].loadTextureNormal(getResPath("RoomMJ/action/hu1.png"));
                }
            }
            this.isBaoTingIng = false;
            if (operat != -1 && (operat & PZHActionType.TYPE_BAOTING) == PZHActionType.TYPE_BAOTING) {
                if (this.actions["baoting"]) {
                    this.actions["baoting"].setVisible(true);
                }
            }

            if (operat != -1 && (operat & PZHActionType.TYPE_QUXIAOBAOTING) == PZHActionType.TYPE_QUXIAOBAOTING) {
                this.isBaoTingIng = true;
                if (this.actions["quxiaobaoting"]) {
                    this.actions["quxiaobaoting"].setVisible(true);
                }
                this.reflashOpBtns();
                return;
            }
            super_setOperator.call(this,operat);
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);
            if (name == "baoting") {
                var type = PZHActionType.TYPE_BAOTING;
                sendOperateCard(type, MJModel.curOperateCard);
                this.setOperator(-1);
                return;
            }

            if (name == "quxiaobaoting") {
                var type = PZHActionType.TYPE_QUXIAOBAOTING;
                sendOperateCard(type, MJModel.curOperateCard);
                this.setOperator(-1);
                return;
            }
            super_btnCallback.call(this, ref);
        };

        var super_setOperator_v = MJActionVideo.prototype.setOperator;
        MJActionVideo.prototype.setOperator = function (pos , operat) {
            super_setOperator_v.call(this, pos, operat);
            if (operat != -1 && ((operat & PZHActionType.TYPE_BAOTING) == PZHActionType.TYPE_BAOTING)) {
                if (this.actions[pos]["baoting"]) {
                    this.actions[pos]["baoting"].setVisible(true);
                }
            }
            this.reflashOpBtns(pos);
            return true;
        };

        MJPlayer.prototype.setLiangPaiVisible = function (v) {
            if (!this.liangpai_flag) {
                this.liangpai_flag = new cc.Sprite(getResPath("RoomMJ/tingpai_flag.png"));
                this.liangpai_flag.setVisible(false);
                if (this.pid == 1) {
                    this.liangpai_flag.setPosition(cc.p(0, 30));
                }
                else {
                    this.liangpai_flag.setPosition(cc.p(this.m_size.width, 30));
                }
                this.addChild(this.liangpai_flag, 1);
            }
            if (this.liangpai_flag) {
                this.liangpai_flag.setVisible(v);
            }
        };

        var superreset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function (allClean, isGameStart) {
            superreset.call(this);
            this.setLiangPaiVisible(false);
        };

        var super_setSomeCardClickState = MJCards.prototype.setSomeCardClickState;
        MJCards.prototype.setSomeCardClickState = function() {
            if (MJModel.mj_lockcard_type == 1) {
                var listen_cards = [];
                for (var i = 0; i < MJModel.listen_info.length; i++) {
                    var lsi = MJModel.listen_info[i];
                    listen_cards.push(lsi.OutCard);
                }

                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    if (listen_cards.indexOf(card.getValue()) == -1) {
                        card.setBlackVis(true);
                        card.setCardTouchEnable(false);
                    }
                    if(this.isDuoPai(0) && i == this.hand_card[0].length - 1) {
                        card.setBlackVis(true);
                        card.setCardTouchEnable(false);
                    }
                }
            } else {
                super_setSomeCardClickState.call(this);
            }
        };

        MJCard.prototype.check_addFlag = function () {

            self_table._checkAddCardFlag(this);
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        var super_addOutCard = MJCards.prototype.addOutCard;
        MJCards.prototype.addOutCard = function (pos, value, showPoint) {
            var isFanPai = false;

            if (self_table._fanmain_card[pos] == value) {
                isFanPai = true;
                if (!MJModel.isOnVideo) {
                    value = 0;
                    self_table._fanmain_card[pos] = -1;
                }
            }

            var card = super_addOutCard.call(this, pos, value, showPoint);
            if (MJModel.isOnVideo && isFanPai) {
                self_table._checkAddTingFlag(card)
            }
            return card;
        }

        RoomChat.prototype.initUI  = function () {
            var size = cc.director.getWinSize();
            this.uiJson = ccs.load(getResPath("RoomMJ/mj_public/chat_0.json"));
            this.uiNode = this.uiJson.node;
            this.uiNode.setPosition(cc.p(size.width, 70));
            this.addChild(this.uiNode);
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if(this._LaiziArray.indexOf(av) != -1 && this._LaiziArray.indexOf(bv) == -1) return 1;
            if(this._LaiziArray.indexOf(av) == -1 && this._LaiziArray.indexOf(bv) != -1) return -1;
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

    _checkAddTingFlag: function (card) {
        try {
            //if (card.type != CardType.Card_Outing)return;
            var flag_str = "RoomMJ/ting_tip.png";
            if (flag_str != "") {
                card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("fan_ting_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath(flag_str));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("fan_ting_flag");
                    p.addChild(flag);
                    this._tingflagDirection(card.pos, flag, m_size);
                    flag.setScale(0.5);
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },

    //每个方向角标对应
    _tingflagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }
        if (MJModel.mj_table_view == "2d") {
            if (pos == 1) {
                flag.setPosition(cc.p(0, 15));
                flag.setRotation(-90);
            } else if (pos == 2) {
                flag.setPosition(cc.p(m_size.width, 5));
                flag.setRotation(180);
            } else if (pos == 3) {
                flag.setPosition(cc.p(m_size.width, m_size.height));
                flag.setRotation(90);
            }
        } else {
            if (pos == 1) {
                flag.setPosition(cc.p(5, 15));
                flag.setRotation(-90);
            } else if (pos == 2) {
                flag.setPosition(cc.p(m_size.width, 10));
                flag.setRotation(180);
            } else if (pos == 3) {
                flag.setPosition(cc.p(m_size.width - 5, m_size.height));
                flag.setRotation(90);
            }
        }

    },

    getMjTypePath: function () {
        return getResPath("anyangmj/flag/aymj.png");
    },

    _setGameType: function () {
        var pkg_id = 1;
        this.play_id = [];

        if(this._pkg_id == GameType.MJ_NOFENG) {
            this.play_id.push("不带风玩法");
        } else if(this._pkg_id == GameType.MJ_DAIHUN) {
            this.play_id.push("带混玩法");
        } else if(this._pkg_id == GameType.MJ_JIEFENG) {
            this.play_id.push("接风玩法");
        } else if(this._pkg_id == GameType.MJ_HONGZHONG) {
            this.play_id.push("红中玩法");
        }

        if(MJModel.mj_roomType == 0){
            this.play_id.push("4人");
        }else if(MJModel.mj_roomType == 1){
            this.play_id.push("3人");
        }else if(MJModel.mj_roomType == 2){
            this.play_id.push("2人");
        }

        if (MJModel.RoomConfigID.indexOf(1234001) != -1) {
            this.play_id.push("自摸胡");
        }
        if (MJModel.RoomConfigID.indexOf(1234002) != -1) {
            this.play_id.push("点炮胡");
        }
        if (MJModel.RoomConfigID.indexOf(1235001) != -1) {
            this.play_id.push("带跑");
        }
        if (MJModel.RoomConfigID.indexOf(1235002) != -1) {
            this.play_id.push("不带跑");
        }

        if (MJModel.RoomConfigID.indexOf(1237001) != -1) {
            this.play_id.push("带混");
        }
        if(MJModel.RoomConfigID.indexOf(1237002) != -1){
            this.play_id.push("不带混");
        }
        if (MJModel.RoomConfigID.indexOf(1238001) != -1) {
            this.play_id.push("单混");
        }
        if(MJModel.RoomConfigID.indexOf(1238002) != -1){
            this.play_id.push("双混");
        }

        if (MJModel.RoomConfigID.indexOf(1236001) != -1) {
            this.play_id.push("杠上花加倍");
        }
        if(MJModel.RoomConfigID.indexOf(1236002) != -1){
            this.play_id.push("七对可胡");
        }
        if(MJModel.RoomConfigID.indexOf(1236003) != -1){
            this.play_id.push("七对加倍");
        }
        if(MJModel.RoomConfigID.indexOf(1236004) != -1){
            this.play_id.push("荒庄荒杠");
        }
        if(MJModel.RoomConfigID.indexOf(1236005) != -1){
            this.play_id.push("庄家加底");
        }
        if(MJModel.RoomConfigID.indexOf(1236006) != -1){
            this.play_id.push("荒庄不荒杠");
        }

        MJModel.play_id_str = this.play_id;

        var gameDes = "";
        for (var i = 0; i < this.play_id.length; i++) {
            gameDes += this.play_id[i];
            if (i != this.play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    resetGame: function (allClean) {
        this._super(allClean);

        this._LaiziArray = [];
        this._curLaizipi = -1
        this._setLaizi([], -1);
        this.isBaoTingIng = false;
        this._fanmain_card = [-1, -1, -1, -1];
        this.hidePaoLayer();
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        cc.log("LX======cmd:" + cmd);
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.anyangmajiang.tagCDGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        } else if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.anyangmajiang.AckCDGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        } else if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }else if(cmd == SELF_CMD.SERVER_SEND_PAOFEN_START){
            this.handler_server_piao_start(jpacket,canDelay);
            return;
        }else if(cmd == SELF_CMD.SERVER_PAOFEN_RESULT){
            this.handler_server_piao_Result(jpacket,canDelay);
            return;
        }else if(cmd == SELF_CMD.SERVER_LAIZICARD_RESULT){
            this._handler_server_laizi_bc(jpacket,canDelay);
            return;
        }
        else{
            this._super(cmd, jpacket, canDelay, svrid);
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.anyangmajiang.SendLaiZiCards", data);
        var self = this;
        var curLaiziArr = packet.laizicards;
        var curLaizipi = packet.chaotiancard;

        var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);

        this._setLaizi(curLaiziArr, curLaizipi, canDelay ? true : false);

        if (canDelay == false) {
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }
        MJModel.isEnterWait = true;

        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);

            var mo_card = null;
            if (self.room_Card.isDuoPai(0)) {
                mo_card = self.room_Card.hand_card[0][self.room_Card.hand_card[0].length - 1];
                self.room_Card.hand_card[0].splice(self.room_Card.hand_card[0].length - 1, 1);
            }

            var allPreCars = [];
            var allLaiZi = [];
            var dd = 0;

            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (curLaiziArr.indexOf(card.getValue()) != -1) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - 1 - i, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);

                    //if (MJModel.outCardEffect_style == 0 || true) {
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    //card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    if (mo_card) {
                        mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                        self.room_Card.hand_card[0].push(mo_card);
                    }
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
                self.room_Card.reflashHandCard(0, true);
                if (mo_card) {
                    mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                    self.room_Card.hand_card[0].push(mo_card);
                }
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1), move_end));
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _checkAddCardFlag: function (card) {
        try {
            if (card.type == CardType.Card_Outing)return;
            if (card.type == CardType.Card_Peng)return;
            if (card.getValue() == 0)return;
            var flag_str = "";
            if (this._LaiziArray.indexOf(card.getValue()) != -1)flag_str = "anyangmj/flag/lai_flag2.png";
            if (flag_str != "") {
                if (this._LaiziArray.indexOf(card.getValue()) != -1)card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath(flag_str));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    flag.setScale(0.5);
                    if (card.pos == 0 && card.type != CardType.Card_Out)flag.setScale(1);
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },

    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }
        if (pos == 1) {
            flag.setPosition(cc.p(0, 15));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 5));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },

    _setLaizi: function (laizi, laizipi, gamestart) {
        this._LaiziArray = [].concat(laizi);
        this._curLaizipi = laizipi;
        if(this._pkg_id == GameType.MJ_HONGZHONG) this._LaiziArray.push(65);
        var size = cc.director.getWinSize();
        if (laizi.length == 0) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("anyangmj/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(size.width - 220, size.height - 70));
            this.addChild(this._curLaizi_bg, 200);
        }
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);

        if (gamestart) {
            var dl = 0;
            var card_pi = new MJCard();
            card_pi.setValue(this._curLaizipi, 0, CardType.Card_Out, 0);
            card_pi.setScale(0);
            card_pi.setVisible(false);
            this.addChild(card_pi, 101);

            var self = this;
            var callFunc = cc.CallFunc(function () {
                self._showLaizi_effect("赖子皮");
            });
            card_pi.setPosition(cc.p(size.width / 2, size.height / 2));
            card_pi.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(1.0), cc.removeSelf()));
            this.room_Card.removePublicCardByNums(1, false);
        }

        for(var i = 0; i < this._LaiziArray.length; i++) {
            var curLaizi = this._LaiziArray[i];
            if (curLaizi > 0) {
                var card = new MJCard();
                card.setValue(curLaizi, 0, CardType.Card_Out, 0);
                card.setPosition(cc.p(this._curLaizi_bg.getContentSize().width / 2 + (((i > (this._LaiziArray.length / 2 - 1))) ? ((i - this._LaiziArray.length / 2) * 60 + 30) : (i - (this._LaiziArray.length / 2 - 1)) * 60 - 30), this._curLaizi_bg.getContentSize().height / 2));
                card.setScale(1);
                //card.setStoreColor(cc.color(255, 249, 137));
                this._curLaizi_bg.addChild(card);
                this.room_Card.other_card.push(card);
            }
        }
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("anyangmj/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }

        //var armature = new ccs.Armature("effects_mjhunancx");
        //var animation = armature.getAnimation();
        //if (animation) {
        //    if (typeof animation.playWithIndex === "function") {
        //        if (name == "赖子") {
        //            animation.playWithIndex(1, -1, 0);
        //        }
        //        if (name == "赖根") {
        //            animation.playWithIndex(2, -1, 0);
        //        }
        //        if (name == "朝天") {
        //            animation.playWithIndex(3, -1, 0);
        //        }
        //        armature.setPosition(cc.p(size.width / 2, size.height / 2 + 150));
        //        this.addChild(armature, 100);
        //        armature.runAction(cc.sequence(cc.delayTime(1.7), cc.removeSelf()));
        //    }
        //}
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("anyangmj/sound/laizi.mp3")));
        return armature;
    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        this.room_Tip.showTextTip("");
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setOperator(-1);
        }
        if (this.room_Action_video) this.room_Action_video.reset();

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);

        if ((OpType & PZHActionType.TYPE_BAOTING) == PZHActionType.TYPE_BAOTING) {
            var player = MJModel.players[seatid];
            if (player && canDelay) {
                this.room_Tip.showSimpleEffect(pos, out_pos, PZHActionType.TYPE_BAOTING, "baoting");
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/operator/%1_%2.mp3"), player.sex == SEX_ID.SEX_FEMALE ? "w" : "m", "ting"));
            }
            this.players[pos].setLiangPaiVisible(true);
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 1;
                this.myselfOpenOutCard(false);
            }
            return;
        } else if (((OpType & PZHActionType.TYPE_QUXIAOBAOTING) == PZHActionType.TYPE_QUXIAOBAOTING)) {
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 0;
            }
            this.room_Card.setSomeCardClickState();
            return;
        }
        this._super(data, canDelay);
    },

    handler_server_out_card_bc: function (data, canDelay) {
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var card = userOutCard.Card;
        var da_type = userOutCard.da_type;
        var XianNingLaiZi = userOutCard.XianNingLaiZi;
        var pos = MJModel.getPosBySeatid(seatId);
        if (XianNingLaiZi) {
            var cardItem = this.room_Card.out_card[pos][this.room_Card.out_card[pos].length - 1];
            if (MJModel.isMyPlayer(seatId) && cardItem && cardItem.value == card) {
                cardItem.updateValue(0);
            }
            this._fanmain_card[pos] = card;
        }

        this._super(data, canDelay)

        var can_show_listen_info = true;
        for (var j = 0; j < MJModel.final_listen_info.length; j++) {
            if (MJModel.final_listen_info[j].Card == 255) {
                can_show_listen_info = false;
                break;
            }
        }
        if (MJModel.isMyPlayer(seatId))MJModel.mj_table.removeChildByName("tingpai_layer");
        if (MJModel.final_listen_info.length > 0 && can_show_listen_info && MJModel.isMyPlayer(seatId)) {
            MJModel.mj_listenLayer_autoshow = true;
            var selectLayer = new TingPaiLayer();
            selectLayer.show2(MJModel.final_listen_info);
            selectLayer.setName("tingpai_layer");
            MJModel.mj_table.addChild(selectLayer, 100);//一定要在MJAction下边
        } else {
            cc.eventManager.dispatchCustomEvent("tingpai_info_notice_reflash");
        }

        if (MJModel.isOnVideo) {
            this.room_Action.setOperator(-1);
        }

        if (MJModel.isMyPlayer(seatId) && MJModel.mj_lockcard_type == 1) {
            MJModel.mj_lockcard_type = 2;
        }

        if (this.room_Card) {
            this.room_Card.setSomeCardClickState();
        }
    },

    handler_server_piao_start : function (date,canDelay) {
        MJModel.roomState = 1;
        this.resetGame(false);
        this.room_Info.setVisible(true);
        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
        cc.eventManager.dispatchCustomEvent("hide_copy_room");
        if (this.room_Action.actions["yaoqing"]) {
            this.room_Action.actions["yaoqing"].setVisible(false);
        }
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }
        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }
        this.room_Info.showTime(1);

        this.hidePaoResult();
        this.showPaoLayer();
    },

    handler_server_piao_Result : function (date,canDelay) {
        var broadPiao = parsePacket("proto.game.anyangmajiang.ResPaoFenResult", date);
        var seatId = broadPiao.chairid;
        var paofen = broadPiao.paofen;
        var pos = MJModel.getPosBySeatid(seatId);

        //this.showPaoOk(seatId, true);
        if (MJModel.isMyPlayer(seatId))this.hidePaoLayer();
        this.showPaoResult(pos, paofen);
    },

    paoLayer: null,
    paoBtnLayer: null,
    init_pao: function () {
        var size = cc.director.getWinSize();
        var uiJson = ccs.load(getResPath("anyangmj/paoLayer.json"));
        this.paoLayer = uiJson.node;
        this.addChild(this.paoLayer);

        var btnLayer = null;
        if(this._pkg_id == GameType.MJ_HONGZHONG || this._pkg_id == GameType.MJ_JIEFENG) {
            btnLayer = GetChild(this.paoLayer, "btns_0");
        } else {
            btnLayer = GetChild(this.paoLayer, "btns");
        }
        btnLayer.removeFromParent();
        setNodeSize(btnLayer, size);
        setNodeSize(GetChild(this.paoLayer, "tips2"), size);

        this.paoBtnLayer = btnLayer;
        this.addChild(this.paoBtnLayer, 100);
        var css = btnLayer.getChildren();
        for (var i in css) {
            var btn = css[i];
            if (btn) {
                btn.addClickEventListener(function (sender, evt) {
                    sendPiaoNums(sender.getTag());
                });
            }
        }
        this.hidePaoLayer();
        this.hidePaoOk();
        this.hidePaoResult();
        GetChild(this.paoLayer, "tips").setPosition(MJConfig.getInfoPos());
    },
    showPaoLayer: function () {
        setNodeVis(this.paoBtnLayer, true);
    },
    hidePaoLayer: function () {
        setNodeVis(this.paoBtnLayer, false);
    },
    showPaoOk: function (seatid, v) {
        var pos = MJModel.getPosBySeatid(seatid);
        var node = GetChild(this.paoLayer, "tips2", "ok" + pos);
        setNodeVis(node, v);
    },
    hidePaoOk: function () {
        for (var i = 0; i < MJModel.Play_num; i++) {
            this.showPaoOk(i, false);
        }
    },
    showPaoResult: function (pos, vs) {
        if(MJModel.RoomConfigID.indexOf(1235002) != -1){
            return;
        }
        if (vs == -1 || vs == 255) return;

        var node = GetChild(this.paoLayer, "tips", "tip" + pos);
        node.setTexture(getResPath("anyangmj/pao/tip_" + vs + ".png"));
        setNodeVis(node, true);

    },
    hidePaoResult: function () {
        for (var i = 0; i < MJModel.Play_num; i++) {
            var node = GetChild(this.paoLayer, "tips", "tip" + i);
            setNodeVis(node, false);
        }
    },

    handler_server_scene_info_uc: function (anyangScene, canDelay) {
        this.reflashSetting(true);
        var ackGameFree = anyangScene.gamesence;
        MJModel.RoomConfigID = ackGameFree.RoomConfigID;
        this._setGameType();
        if (anyangScene.chaotiancard && anyangScene.laizicards.length > 0) {
            this._setLaizi(anyangScene.laizicards, anyangScene.chaotiancard, false);
        }
        this._super(ackGameFree, canDelay);

        var sceneStatus = ackGameFree.SceneStatus;
        if (sceneStatus == 4) {
            MJModel.roomState = 1;
            this.resetGame(false);
            this.room_Info.setVisible(true);
            JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
            cc.eventManager.dispatchCustomEvent("hide_copy_room");
            if (this.room_Action.actions["yaoqing"]) {
                this.room_Action.actions["yaoqing"].setVisible(false);
            }
            if (this.room_Action.actions["copyshare"]) {
                this.room_Action.actions["copyshare"].setVisible(false);
            }
            if (this.pre_scene) {
                this.pre_scene.removeFromParent(true);
                this.pre_scene = null;
            }
            this.room_Info.showTime(1);
        }
        var paofenInfo = anyangScene.paofen;
        for(var i = 0;i < paofenInfo.length;i++){
            var piao = paofenInfo[i];
            var pos = MJModel.getPosBySeatid(i);
            if(piao == -1 && MJModel.isMyPos(pos) && sceneStatus == 4){
                this.showPaoLayer();
            }
            if(piao >=0 ){
                this.showPaoResult(pos, piao);
            }
        }

        if (ackGameFree.sceneStatus != 0) {
            var baoting = anyangScene.baotingstates;
            for (var i = 0; i < baoting.length; i++) {
                var pos = MJModel.getPosBySeatid(i);
                var isbaoting = baoting[i];
                if (MJModel.isMyPlayer(i)) {
                    if (isbaoting == 1) {
                        MJModel.mj_lockcard_type = 2;
                    } else if (isbaoting == 2) {
                        MJModel.mj_lockcard_type = 1;
                    }
                }

                if (isbaoting == 1 || isbaoting == 2) {
                    this.players[pos].setLiangPaiVisible(true);
                }
            }
        }

        if (this.room_Card) {
            this.room_Card.setSomeCardClickState();
        }
    },

    handler_server_game_end_bc: function (anyangGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = anyangGameend.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();
            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });
            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var has_niao = false;
            var liangniaocard = [];
            var zhongniaocard = [];
            liangniaocard = anyangGameend.liangniaocard;
            zhongniaocard = anyangGameend.zhongniaocard;

            if (liangniaocard && liangniaocard.length != 0) {
                has_niao = true;
            }
            if (state == 1)has_niao = false;
            //亮鸟牌
            var showniaocard = cc.callFunc(function () {
                if (has_niao == false)return;
                self._showNiaoEffect(liangniaocard, zhongniaocard);
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                var result = new MJResult_AnYang();
                result.setName("reset_remove");
                result.updateContentView(anyangGameend);
                self.addChild(result, 100000);
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, showniaocard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), showniaocard, cc.delayTime(has_niao ? 2 : 0), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "安阳麻将";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "杠牌次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.GangTimes];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    _showNiaoEffect: function (cardList, zhongList) {

        this.room_Tip.reset();
        var self = this;
        //结束亮马牌动画
        var size = cc.director.getWinSize();
        var dx = 100;
        var bg = new cc.Sprite(getResPath("anyangmj/pao/niao_bg2.png"));
        bg.setPosition(size.width / 2, size.height / 2);
        bg.setScaleY(0.7);
        this.room_Card.addChild(bg, 10000);
        bg.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));

        var bx = size.width / 2 - dx * (cardList.length - 1) / 2;
        for (var j = 0; j < cardList.length; j++) {
            var card = new MJCard();
            card.setValue(cardList[j], 0, CardType.Card_Hand, 0);
            card.setPosition(bx + dx * j, size.height / 2);
            self.room_Card.addChild(card, 10000 + cardList.length);
            if (zhongList.indexOf(cardList[j]) != -1) {
                var callback = cc.callFunc(function () {
                    this.setStoreColor(cc.color(240, 182, 147));
                }, card);
                card.runAction(cc.sequence(cc.delayTime(1), callback,cc.delayTime(1),cc.removeSelf()));
            }else{
                card.runAction(cc.sequence(cc.delayTime(2),cc.removeSelf()));
            }
        }
    },

    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.actionCallBack("ready");
            } else {
                this.actionCallBack("ready");
            }
        }
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
});

var MJ_HuPai_Type = {
    36 : "七对",              //七对
    17 : "平胡",              //平胡
    24 : "杠上花",             //杠上花
    2 : "八混",              //八混
    3 : "四混",              //四混
};

var MJResult_AnYang = MJCommonResult.extend({

    updateContentView: function (ackGameEndHN) {
        this.ackGameEnd = ackGameEndHN.gameend;
        this.anyangGameEnd = ackGameEndHN;

        var gameDes = "";
        for (var i = 0; i < MJModel.mj_table.play_id.length; i++) {
            gameDes += MJModel.mj_table.play_id[i];
            if (i != MJModel.mj_table.play_id.length - 1) {
                gameDes += ",";
            }
            if(i == 7) {
                gameDes += "\n";
            }
        }

        var gameDesStr = new cc.LabelTTF(gameDes, "Arial", 20);
        gameDesStr.setColor(this.leftColor);
        gameDesStr.setAnchorPoint(cc.p(0, 0.5));
        gameDesStr.setPosition(cc.p(47, 30));
        this.bgSpr.addChild(gameDesStr);

        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        this.createBottomMaLayer();
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.anyangGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("anyangmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        //x += 10;
        ////胡牌分
        //var hufen = sxendInfo.huscorenum[seatid];
        //if(hufen){
        //    var txt = "胡分  +";
        //    if (sxendInfo.huscorenum[seatid] < 0) {
        //        txt = "胡分  ";
        //    }
        //    var hufentext = new cc.LabelTTF(txt + sxendInfo.huscorenum[seatid], "Arial", 20);
        //    hufentext.setColor(this.leftColor);
        //    hufentext.setAnchorPoint(cc.p(0, 0));
        //    hufentext.setPosition(cc.p(x, y + 10));
        //    layer.addChild(hufentext);
        //    x += hufentext.getContentSize().width + 10;
        //}
        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            var txt = "杠牌分  +";
            if (gangScore < 0) {
                txt = "杠牌分  ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        x += 10;
        //跑分
        if (sxendInfo.paofennum[seatid] > 0) {
            var txt = "跑分  +";
            if (sxendInfo.paofennum[seatid] < 0) {
                txt = "跑分  ";
            }
            var hongzhongfen = new cc.LabelTTF(txt + sxendInfo.paofennum[seatid], "Arial", 20);
            hongzhongfen.setColor(this.leftColor);
            hongzhongfen.setAnchorPoint(cc.p(0, 0));
            hongzhongfen.setPosition(cc.p(x, y + 10));
            layer.addChild(hongzhongfen);
            x += hongzhongfen.getContentSize().width + 10;
        }
        x += 10;

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (MJ_HuPai_Type[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(MJ_HuPai_Type[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "anyangmj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "anyangmj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "anyangmj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "anyangmj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "anyangmj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "anyangmj/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "anyangmj/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },

    createBottomMaLayer: function () {
        var zhongmalist = this.anyangGameEnd.zhongniaocard;
        var liangmalist = this.anyangGameEnd.liangniaocard;
        var maLength = 0;
        var marginWidth = 0;
        if (liangmalist.length > 0) {
            maLength = liangmalist.length;
            var label = new cc.LabelTTF("马牌:", "Arial", 25);
            label.setAnchorPoint(cc.p(0.0, 0.5));
            label.setColor(this.leftColor);
            label.setPosition(cc.p(50, 75));
            this.bgSpr.addChild(label);

            for (var i = 0; i < liangmalist.length; i++) {
                var card = new MJCard();
                card.setValue(liangmalist[i], 0, CardType.Card_End, 0);
                card.setAnchorPoint(cc.p(0.0, 0.5));
                card.setScale(0.5);
                card.setPosition(cc.p(120 + (card.getBoundingBox().width) * i, 75));
                if (zhongmalist.indexOf(liangmalist[i]) == -1) {
                    card.setBlackVis(true);
                } else {
                    card.setZhongMaColor(1);
                }
                this.bgSpr.addChild(card);

                if(marginWidth == 0){
                    marginWidth = card.getBoundingBox().width * maLength;
                }
            }

            this.configLayout = new ccui.Layout();
            this.configLayout.setPosition(120 + marginWidth , 75);
            this.bgSpr.addChild(this.configLayout);

            var mafen = this.anyangGameEnd.zhongmashu;
            var mafen_txt = new cc.LabelTTF(__String.createWithFormat("马分: +%1",mafen), "Arial", 25);
            mafen_txt.setAnchorPoint(cc.p(0.0, 0.5));
            mafen_txt.setColor(this.leftColor);
            mafen_txt.setPosition(cc.p(marginWidth + 170, 75));
            this.bgSpr.addChild(mafen_txt);

        }

        var lianzhuangtimes = this.anyangGameEnd.lianzhuangtimes;
        if(lianzhuangtimes > 0){
            var lian_label = new cc.LabelTTF(__String.createWithFormat("连庄: +%1",lianzhuangtimes), "Arial", 25);
            lian_label.setAnchorPoint(cc.p(0.0, 0.5));
            lian_label.setColor(this.leftColor);
            lian_label.setPosition(cc.p(marginWidth + 200, 80));
            this.bgSpr.addChild(lian_label);
        }
    },

});

