loadProtoFile("proto/shanxikoudiangameproto.proto");
var ShanxiKD_SERVER_CMD = {
    SERVER_SHANXI_CLIENT_LAIZIPAI: 5029,
}

var Action_Ting = 0x10000;//报牌
var Action_QXTing =0x200;//取消报牌

var AddFanType = {
    MJ_FAN_TYPE_QINGYISE : 14,				//清一色
    MJ_FAN_TYPE_PINGHU : 17,				//平胡
    MJ_FAN_TYPE_LONGQIDUI: 27,					//豪华七对
    MJ_FAN_TYPE_FENGYISE: 39,					//一条龙
    MJ_FAN_TYPE_QIDUI: 36,						//七对
    MJ_FAN_TYPE_NOJOKER : 35,					//十三幺


};

var AddFanTypeArray = [
    AddFanType.MJ_FAN_TYPE_QINGYISE ,
    AddFanType.MJ_FAN_TYPE_PINGHU ,
    AddFanType.MJ_FAN_TYPE_LONGQIDUI,
    AddFanType.MJ_FAN_TYPE_FENGYISE ,
    AddFanType.MJ_FAN_TYPE_QIDUI,
    AddFanType.MJ_FAN_TYPE_NOJOKER,

];

var AddFanNameArray = [
    "清一色",
    "平胡",
    "豪华七对",
    "一条龙",
    "七对",
    "十三幺",
];
var MJTable_shanxikoudian = MJTable.extend({

    isRecordShow: false,
    _allBeiShu: [null, null, null, null],
    _curLaizi_bg: null,
    _curLaizi: -1,
    _curLaizipi :-1,
    _out_card_temp: [],
    _has_show_pi_flag: false,
    _isgang: false,
    gameDes: "",
    _pkgid: 0,
    effectType: "horizontal",
    isFangZuoBi : false,
    isbaoting : false,
    isKouPai: false,
    isClickGps: false,
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        this._init_extend();

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 1;
        MJModel.isOutCard = true;
        //MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_touch_tip = 1;
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;
        MJModel.shareType = 1;
        MJModel.mj_font = "gexing";
        MJModel.mj_fontSize = "dahao";
        MJModel.mj_style = "shishang";
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            MJModel.mj_roomType = 0;
            if (this._pkg_id == 2903 ||this._pkg_id == 2804 ){
                MJModel.mj_roomType = 1;
            }
            if (this._pkg_id == 2904 ||this._pkg_id == 2805) {
                MJModel.mj_roomType = 2;
            }

        } catch (e) {
            Log(this, e);
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }
        this._super();
        this._init_ui(true);
        //this.schedule(this.test, 1.0);


    },
    //设置背景
    getBgStr: function () {
        if ( MJModel.mj_style != "shishang" && MJModel.mj_style != "huaijiu" && MJModel.mj_style != "jingdian"){
            MJModel.mj_style = "shishang";
        }
        return __String.createWithFormat("shanxikoudianmj/bgs/%1_%2.png", MJModel.mj_style, MJModel.mj_table_view);
    },
    updateBg: function (isInit) {
        if (isInit == undefined)isInit = false;
        //this._super(isInit);

        if (isInit == undefined)isInit = false;
        var size = cc.director.getWinSize();
        if (this.bg == null) {
            this.bg = new ccui.ImageView(getResPath(this.getBgStr()));
            this.bg.setAnchorPoint(cc.p(0.5, 0.5));
            this.bg.setContentSize(size);
            this.bg.setScale9Enabled(true);
            this.bg.setPosition(size.width / 2, size.height / 2);
            this.addChild(this.bg, -100);
        } else {
            this.bg.loadTexture(getResPath(this.getBgStr()));
        }
        if ( MJModel.mj_table_view =="2d") {
            Utils.addCardSprites(__String.createWithFormat("shanxikoudianmj/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        } else {
            Utils.addCardSprites(__String.createWithFormat("RoomMJ/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        }

        if (MJModel.mj_roomType == 2) {
            this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config_2ren.json" : "RoomMJ/config/card_config2d_2ren.json");
        } else {
            this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config.json" : "RoomMJ/config/card_config2d.json");
        }

        if (isInit)return;

        this.room_Card.reflashAllCardUI();
        for (var i = 0; i < 4; i++) {
            this.players[i].setPosition(MJConfig.getPlayerPos(i));
            this.players[i].reflashNameMoneyPosition();
        }
        if (this.room_Info)this.room_Info.reflash();

        if (isInit)return;
        this._init_ui(false);
    },
    _init_ui:function(isInit){
        var self = this;
        this.room_Action.actions["pass"].setScale(1.0);
        if(isInit){
            {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting1.png"), "");
                this.room_Action.actions["ting"] = btn;
                btn.setName("ting");
                btn.addClickEventListener(function (sender, evt) {
                    self.room_Action.btnCallback(sender);
                });
                btn.setVisible(false);
                this.room_Action.addChild(btn);
                this.room_Action.opBtns.push(btn);
            }
            {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath("shanxikoudianmj/action/qxbaoting1.png"), "", "");
                this.room_Action.actions["qxting"] = btn;
                btn.setName("qxting");
                btn.addClickEventListener(function (sender, evt) {
                    self.room_Action.btnCallback(sender);
                });
                var size = cc.director.getWinSize();
                btn.setPosition(cc.p(size.width-300,200));
                btn.setVisible(false);
                this.room_Action.addChild(btn,1001);
                this.room_Action.opBtns.push(btn);
            }


        }

        if (MJModel.mj_table_view == "2d"){
            this.room_Action.actions["pass"].loadTextures(getResPath("shanxikoudianmj/action/pass1.png"), getResPath("shanxikoudianmj/action/pass1.png"), "");
            this.room_Action.actions["pass"].setScale(1.2);
            this.room_Action.actions["hu"].loadTextures(getResPath("shanxikoudianmj/action/hu1.png"), getResPath("shanxikoudianmj/action/hu1.png"), "");
            this.room_Action.actions["hu"].setScale(1.2);
            this.room_Action.actions["gang"].loadTextures(getResPath("shanxikoudianmj/action/gang1.png"), getResPath("shanxikoudianmj/action/gang1.png"), "");
            this.room_Action.actions["gang"].setScale(1.2);
            this.room_Action.actions["peng"].loadTextures(getResPath("shanxikoudianmj/action/peng1.png"), getResPath("shanxikoudianmj/action/peng1.png"), "");
            this.room_Action.actions["peng"].setScale(1.2);
            this.room_Action.actions["chi"].loadTextures(getResPath("shanxikoudianmj/action/chi1.png"), getResPath("shanxikoudianmj/action/chi1.png"), "");
            this.room_Action.actions["chi"].setScale(1.2);
            this.room_Action.actions["ting"].loadTextures(getResPath("shanxikoudianmj/action/ting1.png"), getResPath("shanxikoudianmj/action/ting1.png"), "");
            this.room_Action.actions["ting"].setScale(1.2);
            //this.room_Action.actions["qxting"].loadTextures(getResPath("shanxikoudianmj/action/qxbaoting1.png"), getResPath("shanxikoudianmj/action/qxbaoting1.png"), "");
            //this.room_Action.actions["qxting"].setScale(1.0);
        }else {
            this.room_Action.actions["pass"].loadTextures(getResPath("RoomMJ/action/pass1.png"), getResPath("RoomMJ/action/pass1.png"), "");
            this.room_Action.actions["pass"].setScale(1.0);
            this.room_Action.actions["hu"].loadTextures(getResPath("RoomMJ/action/hu1.png"), getResPath("RoomMJ/action/hu1.png"), "");
            this.room_Action.actions["hu"].setScale(1.0);
            this.room_Action.actions["gang"].loadTextures(getResPath("RoomMJ/action/gang1.png"), getResPath("RoomMJ/action/gang1.png"), "");
            this.room_Action.actions["gang"].setScale(1.0);
            this.room_Action.actions["peng"].loadTextures(getResPath("RoomMJ/action/peng1.png"), getResPath("RoomMJ/action/peng1.png"), "");
            this.room_Action.actions["peng"].setScale(1.0);
            this.room_Action.actions["chi"].loadTextures(getResPath("RoomMJ/action/chi1.png"), getResPath("RoomMJ/action/chi1.png"), "");
            this.room_Action.actions["chi"].setScale(1.0);
            this.room_Action.actions["ting"].loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting2.png"), "");
            this.room_Action.actions["ting"].setScale(1.0);
            //this.room_Action.actions["qxting"].loadTextures(getResPath("shanxikoudianmj/action/qxbaoting1.png"), getResPath("shanxikoudianmj/action/qxbaoting1.png"), "");
            //this.room_Action.actions["qxting"].setScale(1.0);
        }

    },

    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 2) pkg_id = 2;
        if (MJModel.mj_roomType == 1) pkg_id = 3;
        return __String.createWithFormat(getResPath("shanxikoudianmj/flag/pkgid%1.png"), pkg_id);

    },

    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            this._curLaizipi = 0x11;
            this._curLaizi = 0x12;
        }
    },
    _show_op_effect: function (pos, name) {
        try {
            var begin;
            {
                begin = MJConfig.getOperatorTipPos(pos);
                var armature = null;
                var effect_name = "";
                if (name == "ting") {
                    effect_name = "effects_mjxbaoting";
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shanxikoudianmj/effect/ting/effects_mjxbaoting.ExportJson"));
                }
                armature = new ccs.Armature(effect_name);
                if (armature != null) {
                    animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);

                            armature.setPosition(begin);
                            this.room_Tip.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },

    handler_server_up_table_bc: function (data, canDelay) {
        if (MJModel.waitUpdate == false) Sound.getInstance().playEffect(getResPath("RoomMJ/sound/enter.mp3"));
        var ackUpTableSuccess = parsePacket("proto.login.AckUpTableSuccess", data);
        var seatid = ackUpTableSuccess.seatid;

        var player = MJModel.players[seatid];
        player.reset();

        player.seatid = seatid;
        player.uid = ackUpTableSuccess.uid;
        player.name = ackUpTableSuccess.name;
        player.money = ackUpTableSuccess.money;
        player.ready = ackUpTableSuccess.ready;
        player.sex = ackUpTableSuccess.sex;
        player.avatar = ackUpTableSuccess.avatar;
        player.start_money = player.money * 2;//乘2 做简单的加密

        if (player.uid == ZJHModel.getInstance().uid) {
            MJModel.waitUpdate = true;
            CCTcpClient.getInstance(MJModel.curRoomID).reset_response_queue();
            sendTableInfoReq();
        }
        else {
            var pos = MJModel.getPosBySeatid(seatid);
            var rPlayer = this.players[pos];
            rPlayer.login(player.seatid);

            //if (MJModel.mj_public_style == 0) {
            //    JsUtils.postNotifi("notify_room_check_ip");
            //} else {
            //    this.checkIpAndDistance();
            //    this.checkGPSWarning();
            //}
            if (this.pre_scene) this.pre_scene.resetMode();
            if (this.pre_scene) this.pre_scene.resetSelectMode();
        }

        if (this.pre_scene) this.pre_scene.handler_server_up_table_bc(data, canDelay);
    },


    handler_game_time_over_bc: function (data, canDelay) {
        if (!this.gameending)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },
    gameending: false,
    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this.gameending = true;
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_shanxikoudian();
                    result.updateContentView(shanxiGameEnd);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.gameending = false;
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(1.5), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },

    _init_extend: function () {
        var self = this;
        //去掉出牌按钮
        MJCards.prototype.createOutCardBtn = function () {

        };
        //去掉出牌放大
        MJCards.prototype.outHandCardEffct2 = function (pos, value) {
            this.addOutCard(pos, value);
            this.reflashHandCard(pos, true, true);
        };
        var super_continueClick = MJResult.prototype.continueClick;
        MJResult.prototype.continueClick = function (ref) {
            super_continueClick.call(this, ref);
            self.gameending = false;
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self._sortCard(a, b);
        };

        MJCards.prototype.outMyCard = function (out_card, isServer) {
            this.curOutCard = null;
            if (isServer == undefined) {
                isServer = false;
            }
            if (out_card) {
                //cc.director.getRunningScene().removeChildByName("tingpai_layer");
                if (this.outCardBtn) this.outCardBtn.setVisible(false);
                if (isServer == false && MJModel.mj_self_outCard_type == 1) {
                    out_card.goBack();
                    return;
                }
                out_card = removeCardByCard(out_card, this.hand_card[0]);
                var card = out_card;
                var pos = 0;
                if (card) {
                    card.reset();
                    var delay = MJModel.speeds[MJModel.mj_speed - 1];
                    if (delay == 0) {
                        card.removeFromParent(true);
                        MJModel.mj_mo_cards[pos] = -1;
                        this.reflashHandCard(pos, true, true);
                        if(self.isKouPai && !MJModel.isOnVideo){
                            this.addOutCard(pos, 0);
                            this.handler_out_card_sound(MJModel.players[MJModel.seatid].sex, 0);//出牌的声音
                        }else{
                            this.addOutCard(pos, card.value);
                            this.handler_out_card_sound(MJModel.players[MJModel.seatid].sex, out_card.value);//出牌的声音
                        }
                    } else {
                        var self_outmycard = this;
                        MJModel.isEnterWait = true;
                        var move_callbck = cc.callFunc(function () {
                            card.removeFromParent(true);
                            self_outmycard.reflashHandCard(pos, true, true);
                            if(self.isKouPai && !MJModel.isOnVideo){
                                self_outmycard.addOutCard(pos, 0);
                                self_outmycard.handler_out_card_sound(MJModel.players[MJModel.seatid].sex, 0);//出牌的声音
                            }else{
                                self_outmycard.addOutCard(pos, card.value);
                                self_outmycard.handler_out_card_sound(MJModel.players[MJModel.seatid].sex, out_card.value);//出牌的声音
                            }
                            MJModel.isEnterWait = false;
                        });
                        card.runAction(cc.sequence(cc.moveTo(delay, MJConfig.getOutCardPos(pos, this.out_card[pos].length)), move_callbck));
                    }
                }
            }
        };


        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };

        MJAction.prototype.setTingPaiVis = function (v) {
            if(self.isbaoting == false){
                return;
            }
            if (this.tingpai) {
                this.tingpai.setVisible(v);
                if (v == false) cc.director.getRunningScene().removeChildByName("tingpai_layer");
            }
        };
        MJCard.prototype.check_addFlag = function () {
            self._checkAddCardFlag(this);
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };
        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            if (operat != -1 &&(operat & Action_Ting) == Action_Ting) {
                if (this.actions["ting"]) {
                    this.actions["ting"].setVisible(true);
                }
            }
            if (operat != -1 &&(operat & Action_QXTing) === Action_QXTing) {
                this.setQXTing(true);
            }

            //if ((operat & Action_QXTing) == Action_QXTing) {
            //    if (this.actions["qxting"]) {
            //        this.actions["qxting"].setVisible(true);
            //    }
            //}

            super_setOperator.call(this, operat);


        }

        MJAction.prototype.setQXTing=function (v) {
            if(this.actions["qxting"]){
                var size = cc.director.getWinSize();
                this.actions["qxting"].setPosition(cc.p(size.width-300,200));
                this.actions["qxting"].setVisible(v);
            }
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);
            if (name == "ting") {
                var type = Action_Ting;
                sendOperateCard(type, 0);
                //this.myselfOpenOutCard();
                this.setOperator(-1);
                MJModel.mj_lockcard_type = 1;
                self.myselfOpenOutCard();
                self.room_Card.setSomeCardClickState();
                return;
            }
            if (name == "qxting") {
                var type = Action_QXTing;
                sendOperateCard(type, 0);
                this.setOperator(-1);
                return;
            }
            super_btnCallback.call(this, ref);
        };

        var super_reset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function () {
            super_reset.call(this);
            this.setLiangPaiVisible(false);
        };
        var super_setId = MJPlayer.prototype.setId;
        MJPlayer.prototype.setId = function (id) {
            super_setId.call(this, id);

            this.m_pMoney_bg.setTexture(getResPath("shanxikoudianmj/flag/bgscore.png"));
            this.banker_flag.setTexture(getResPath("shanxikoudianmj/flag/banker.png"));

            this.liangpai_flag = new cc.Sprite(getResPath("RoomMJ/ting_tip.png"));
            this.liangpai_flag.setVisible(false);
            if (id == 1) {
                this.liangpai_flag.setPosition(cc.p(-this.banker_flag.getBoundingBox().width / 2 + 10, this.liangpai_flag.getBoundingBox().height / 2 - 5 + 50));
            }
            else {
                this.liangpai_flag.setPosition(cc.p(this.m_size.width + this.liangpai_flag.getBoundingBox().width / 2 - 40, this.liangpai_flag.getBoundingBox().height / 2 + 60));
            }
            this.addChild(this.liangpai_flag, 100000);
        };

        MJPlayer.prototype.setLiangPaiVisible = function (v) {
            if (this.liangpai_flag) {
                this.liangpai_flag.setVisible(v);
            }
        };

        MJInfo.prototype.getInfoRes = function (type) {
            var myseat = 0;
            if (MJModel.seatid != -1) {
                myseat = MJModel.seatid;
            }
            var playerNum = 4;
            if (MJModel.mj_roomType == 1) {
                playerNum = 3;
            }else if (MJModel.mj_roomType == 2) {
                playerNum = 2;
            }

            if(type == 0){
                return "RoomMJ/zhishiqi/info1_" + playerNum + "_" + myseat + ".json";
            }else {
                return "shanxikoudianmj/info1_" + playerNum + "_" + myseat + ".json";
            }
        };

        //防作弊
        PlayerInfo.prototype.updateInfo = function () {
            var hasnocity = false;
            var hastoonear = false;
            var playerNums = 4;
            if (MJModel.mj_roomType == 1) {
                playerNums = 3;
            } else if (MJModel.mj_roomType == 2) {
                playerNums = 2;
            }
            for (var i = 0; i < playerNums; i++) {
                var player = MJModel.players[i];
                var playerData = this.getPlayerData(player.uid);
                var pos = MJModel.getPosBySeatid(i);
                var playerUI = this.players.getChildByName("player" + pos);
                var avatar = playerUI.getChildByName("avatar");
                var name = playerUI.getChildByName("name");
                var city = playerUI.getChildByName("city");
                city.stopAllActions();
                avatar.removeAllChildren();
                name.setString("");
                name.ignoreContentAdaptWithSize(true);

                city.setString("");
                city.ignoreContentAdaptWithSize(true);
                if (player.uid <= 0) {
                    city.setString("");
                    var m_pAvatar = new cc.Sprite("Avatars/user4_unlogin.png");
                    m_pAvatar.setScale(85 / m_pAvatar.getContentSize().width, 85 / m_pAvatar.getContentSize().height);
                    avatar.addChild(m_pAvatar);
                } else {
                    var m_pAvatar = Utils.createCircleAvatar(player.avatar, "Avatars/user4_unlogin.png", "Avatars/user4_unlogin.png", cc.size(85, 85));
                    avatar.addChild(m_pAvatar);
                    name.setString(player.name);
                    //city.setColor(cc.color(255, 255, 255));
                    if (this.isNoData(playerData)) {
                        hasnocity = true;
                        //city.setColor(cc.color(255, 0, 0));
                        city.setString("未检测到位置");
                        //city.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                    } else {
                        city.setString(Utils.parseName(10, playerData.city));
                    }
                }
            }
            var cs = this.julitips.getChildren();
            for (var i in cs) {
                var tips = cs[i];
                if (!tips)continue;
                var name = tips.getName();
                var ps = name.split("_");
                var label = tips.getChildByName("num");
                var s1 = MJModel.getSeatidByPos(parseInt(ps[0]));
                var s2 = MJModel.getSeatidByPos(parseInt(ps[1]));
                var p1 = MJModel.players[s1];
                var p2 = MJModel.players[s2];

                tips.getChildByName("hong").setVisible(false);
                tips.getChildByName("lv").setVisible(false);
                tips.getChildByName("hong").setScaleX(1);
                tips.getChildByName("lv").setScaleX(1);
                tips.getChildByName("hong").stopAllActions();
                tips.getChildByName("lv").stopAllActions();
                label.setString("");
                label.ignoreContentAdaptWithSize(true);

                if (!p1 || !p2 || p1.uid <= 0 || p2.uid <= 0) {
                    continue;
                }

                var playerData1 = this.getPlayerData(p1.uid);
                var playerData2 = this.getPlayerData(p2.uid);

                if (this.isNoData(playerData1)) {
                    continue;
                }

                if (this.isNoData(playerData2)) {
                    continue;
                }

                if (playerData1.city != playerData2.city) {
                    continue;
                }

                var dis = Utils.getDistance(playerData1.latitude, playerData1.longitude, playerData2.latitude, playerData2.longitude);
                tips.setVisible(true);
                if (dis >= 1000) {
                    var tip = tips.getChildByName("lv");
                    tip.setVisible(true);
                    var dis_f = parseFloat(dis / 1000);
                    label.setString(dis_f.toFixed(1) + "千米");
                    tip.setScaleX((label.getContentSize().width + 20) / tip.getContentSize().width);
                    label.setScaleX(1 / tip.getScaleX());
                } else {
                    label.setString(dis + "米");
                }

                if (dis <= 50) {
                    tips.getChildByName("hong").setVisible(true);
                    //tip.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                    hastoonear = true;
                } else {
                    tips.getChildByName("lv").setVisible(true);
                }
            }

            this.warningTip.setVisible(false);
            this.btns["jieshan"].setVisible(false);
            this.btns["continue"].setVisible(false);
            this.warningTip.stopAllActions();
            if (hasnocity || hastoonear) {
                this.warningTip.setVisible(true);
                this.btns["jieshan"].setVisible(false);
                this.btns["continue"].setVisible(false);
                this.warningTip.runAction(cc.sequence(cc.delayTime(1), cc.hide(), cc.delayTime(0.1), cc.show()).repeatForever());
                this.warningTip.ignoreContentAdaptWithSize(true);
                if (hasnocity && hastoonear) {
                    this.warningTip.setString("* 发现距离过近、未检测到位置的玩家，请关闭退出房间！");
                } else if (hasnocity) {
                    this.warningTip.setString("* 发现未检测到位置的玩家，请关闭退出房间！");
                } else if (hastoonear) {
                    this.warningTip.setString("* 发现距离过近的玩家，请关闭退出房间！");
                }
            }

            MJModel.mj_table.room_Action.updateGPSTip(hasnocity , hastoonear);
            if(MJModel.mj_table.pre_scene){
                MJModel.mj_table.pre_scene.updateGPSTip(hasnocity , hastoonear);
            }
        };

        PlayerInfo.prototype.disappear = function () {
            MJModel.gpsInfo = null;
            this.removeFromParent(true);
            if (self.isFangZuoBi && self.isClickGps == false){
                self.exitRoom();
            }
            self.isClickGps = false;
        };





    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        //
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.shanxikoudianmj.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            if (this.isFangZuoBi){
                this.checkIpAndDistance();
            }
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.shanxikoudianmj.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }
        if (cmd == ShanxiKD_SERVER_CMD.SERVER_SHANXI_CLIENT_LAIZIPAI) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    isSupportVideoAction: function () {
        return false;
    },
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("-_handler_game_record-");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "抠点 · 4人 ";
        if (MJModel.mj_roomType == 1) {
            gameType = "抠点 · 3人 ";
        }
        if (MJModel.mj_roomType == 2) {
            gameType = "抠点 · 2人 ";
        }
        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }

        for (var i = 0; i < gameRecord.MostWinScoreUser.length; i++) {
            var seatId = gameRecord.MostWinScoreUser[i];
            if (seatId != 255) {
                _winSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "赢分次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.WinCounts, recoreInfo.outtime_num];

            if (player && player.uid != -1) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, _winSeatid[i], _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);

        this.release();
    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._setLaizi(-1, -1, -1);
        this._out_card_temp = [];
        this.gameending = false;
        this.isbaoting = false ;
        this.isKouPai =false ;
    },


    //设置背景
    getBgStr: function () {
        if ( MJModel.mj_style != "shishang" && MJModel.mj_style != "huaijiu" && MJModel.mj_style != "jingdian"){
            MJModel.mj_style = "shishang";
        }
        return __String.createWithFormat("shanxikoudianmj/bgs/%1_%2.png", MJModel.mj_style, MJModel.mj_table_view);
    },


    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
        } else {
            this._super(sex, card);
        }
    },
    //
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {

        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },
    handler_server_operate_notify_bc2: function (data, canDelay) {
        var ackOpNotify = parsePacket("proto.game.AckOpNotify", data);
        var seatid = ackOpNotify.ChairID;
        var operat = ackOpNotify.OpType;
        var card = ackOpNotify.Card;
        var da_type =ackOpNotify.LockLaizi;

        var packet = createPacket("proto.game.AckUserOutCard");
        packet.ChairID = seatid;
        packet.Card = card;
        packet.da_type = da_type;

        var sendData = packet.encode64();
        this.handler_server_out_card_bc(sendData, canDelay);

        if (MJModel.seatid != -1) {
            ackOpNotify.ChairID = MJModel.seatid;
            this.handler_server_operate_notify_bc(ackOpNotify.encode64(), canDelay);
        }
    },
    handler_server_out_card_bc: function (data, canDelay) {
        this._super(data, canDelay);
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var da_type = userOutCard.da_type;
        var pos = MJModel.getPosBySeatid(seatId);
        if (da_type == 1) {
            //报听
            if (MJModel.isMyPlayer(seatId)) {
                MJModel.mj_lockcard_type = 2;
                this.isbaoting = true;
                this.isKouPai =false;
                //if (this.room_Action) this.room_Action.setTingPaiVis(true);
            }
            this.players[pos].setLiangPaiVisible(true);
            var player = MJModel.players[seatId];
            if (player && canDelay) {
                //Sound.getInstance().playEffect(__String.createWithFormat(getResPath("shanxikoudianmj/sound/operator/%1_%2.mp3"), player.sex == SEX_ID.SEX_FEMALE ? "w" : "m", "ting"));

            }
        }
    },
    handler_server_scene_info_uc: function (shanxi_gameScene, canDelay) {
        var ackGameFree = shanxi_gameScene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        MJModel.base_money =ackGameFree.basescore;

        if (MJModel.mj_roomType == 0){
            MJModel.changMode = 2;
        }
        if (MJModel.mj_roomType == 1){
            MJModel.changMode = 1;
        }
        if (shanxi_gameScene.issuopai) {
            var singdance = shanxi_gameScene.issuopai;
            for (var i = 0; i < singdance.length; i++) {
                var seatid = i;
                var pos = MJModel.getPosBySeatid(seatid);
                if (singdance[seatid] == 1) {
                    this.players[pos].setLiangPaiVisible(true);
                    if (MJModel.isMyPlayer(seatid)){
                        MJModel.mj_lockcard_type = 1;
                        this.isKouPai =true ;
                        //this.room_Action.setQXTing(true);
                    }


                }
                if (singdance[seatid] == 2) {
                    this.players[pos].setLiangPaiVisible(true);
                    if (MJModel.isMyPlayer(seatid))MJModel.mj_lockcard_type = 2;
                    this.isbaoting = true;
                    this.isKouPai =false ;

                    //if (this.room_Action) this.room_Action.setTingPaiVis(true);
                }
            }
        }
        if (sceneStatus != 0) {
            //恢复癞子
            if (shanxi_gameScene.card >0) {
                if(shanxi_gameScene.card == 1){
                    this._curLaizi = shanxi_gameScene.laizicard[0];
                    this._curLaizipi = -1;
                }else if(shanxi_gameScene.card == 2){
                    this._curLaizi = shanxi_gameScene.laizicard[0];
                    this._curLaizipi = shanxi_gameScene.laizicard[1];
                }

                if (this._curLaizi > 0 && this._curLaizi != 255) {
                    var curLaizi = this._curLaizi;
                    var curLaizipi = this._curLaizipi;
                    this._setLaizi(curLaizi, curLaizipi, -1);//还原赖子
                }
            }
        }
        this._super(ackGameFree, canDelay);

        if (shanxi_gameScene.issuopai) {
            var singdance = shanxi_gameScene.issuopai;
            for (var i = 0; i < singdance.length; i++) {
                var seatid = i;
                var pos = MJModel.getPosBySeatid(seatid);
                if (singdance[seatid] == 1) {
                    if (MJModel.isMyPlayer(seatid)){
                        this.room_Action.setQXTing(true);
                    }
                }
            }
        }


        this._setGameType();

    },
    handler_server_peng_kang_bc: function (data, canDelay) {
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
        var seatid = ackBcOpResult.ChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var pos = MJModel.getPosBySeatid(seatid);
        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & Action_Ting) == Action_Ting) {
            var player = MJModel.players[seatid];
            var effect = "ting";
            if (player && canDelay) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/sound/give.mp3"));
                this.handler_op_sound(pos, player.sex, OpType, OpType2, effect);
                if(MJModel.isOnVideo){
                    if (this.room_Action) this.room_Action.setOperator(-1);
                }
                this._show_op_effect(pos, effect);
            }
            this.players[pos].setLiangPaiVisible(true);
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 2;
                this.isbaoting = true ;
                this.isKouPai =true ;
                //if (this.room_Action) this.room_Action.setTingPaiVis(true);
                //this.updateTingListenInfo(ackBcOpResult);

                this.room_Action.setQXTing(true);
            }
            return;
        }
        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & Action_QXTing) == Action_QXTing) {
            var player = MJModel.players[seatid];
            this.players[pos].setLiangPaiVisible(false);
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 0;
                //this.updateTingListenInfo(ackBcOpResult);
                this.isbaoting = false;
                this.isKouPai =false ;
                this.room_Action.setQXTing(false);

            }
            if (this.room_Card.isDuoPai(pos)){
                this.room_Info.showDirectionTip(pos);
                if (MJModel.isMyPlayer(seatid)){
                    this.myselfOpenOutCard();
                }
            }
            return;
        }
        this._super(data, canDelay);

    },

    gpsToNearTimer:function () {
        if (MJModel.gpsInfo){
            MJModel.gpsInfo.disappear();
        }
        this.unschedule(this.gpsToNearTimer);
    },
    actionCallBack: function (name, evt) {
        this._super(name, evt);
        if (name == "gps"){
            this.isClickGps = true;
        }
    },

    checkIpAndDistance: function () {
        // cc.log(" checkIpAndDistance ======isFangZuoBi: " + this.isFangZuoBi);
        if (MJModel.mj_gps_type == 1) return;
        if (this.isFangZuoBi == false) return;
        var json = {};
        var self = this;
        json.roomId = MJModel.curRoomID;
        CCHttpAgent.getInstance().sendHttpPost(function (tag) {
                var data = CCHttpAgent.getInstance().getPacketData(tag);
                CCHttpAgent.getInstance().popPackets(tag);
                if (data != "") {
                    var recv = JSON.parse(data);
                    if (recv && recv.status == 200) {
                        if (recv["resultMap"].hasOwnProperty("lookList") && recv["resultMap"]["lookList"].hasOwnProperty("result")) {
                            var data = recv["resultMap"]["lookList"]["result"];
                            if (data && data.length > 0) {
                                MJModel.gpsData = data;
                                //MJModel.seatid  //自己的座位id
                                // cc.log(" checkIpAndDistance =======1" +JSON.stringify(data));
                                var selfData = null;
                                var isToNear = false;
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i].userId == ZJHModel.getInstance().uid){
                                        selfData = data[i];
                                        break;
                                    }
                                }
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i].userId == ZJHModel.getInstance().uid){
                                        continue;
                                    }else{
                                        // cc.log(" checkIpAndDistance =======12:" +Utils.getDistance(selfData.latitude, selfData.longitude, data[i].latitude, data[i].longitude));
                                        if (i<MJModel.seatid &&selfData && Utils.getDistance(selfData.latitude, selfData.longitude, data[i].latitude, data[i].longitude) < 50){
                                            isToNear = true;
                                            break;
                                        }
                                    }
                                }
                                // cc.log(" checkIpAndDistance =======2" +JSON.stringify(selfData) + isToNear);
                                if (MJModel.seatid != 0 && selfData.city == null || selfData.city == "" || isToNear){
                                    MJModel.gpsInfo = new PlayerInfo();
                                    MJModel.gpsInfo.updateInfo();
                                    MJModel.mj_table.addChild(MJModel.gpsInfo, 100000);
                                    self.schedule(self.gpsToNearTimer, 6.0);
                                    return true;
                                }else{
                                    self.actionCallBack("uptable");
                                }
                            }
                        }
                    }
                }
            },
            "duiju/invite/lookList", JSON.stringify(json), "room_all_player");
    },
    handlerAutoUpTableReady: function (nums, selfIsReady) {
        // cc.log("handlerAutoUpTableReady =====nums: " +nums);
        if (MJModel.seatid == -1 && nums < 4) {
            if (this.isFangZuoBi && nums>1){ //除房主外 开启防作弊功能需要检测近距离 上桌

                this.checkIpAndDistance();
            }else {
                this.actionCallBack("uptable");
            }
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.room_Action.setReadyVisible(true);
            } else {
                this.room_Action.setReadyVisible(true);
            }
        }
    },

    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {
        if (this._isgang) {
            this._super(scores, OpType, OpType2, canDelay);
        }
    },
    _setGameType: function () {
        //抠点麻将
        MJModel.play_id_str = [];
        if (MJModel.RoomConfigID.indexOf(85220001) != -1) {
            MJModel.play_id_str.push("大胡");
        }
        if (MJModel.RoomConfigID.indexOf(85220002) != -1) {
            MJModel.play_id_str.push("带庄");
        }
        if (MJModel.RoomConfigID.indexOf(85220003) != -1) {
            MJModel.play_id_str.push("带风");
        }
        if (MJModel.RoomConfigID.indexOf(85220004) != -1) {
            MJModel.play_id_str.push("过胡只能自摸");
        }
        if (MJModel.RoomConfigID.indexOf(85230001) != -1) {
            MJModel.play_id_str.push("防作弊");
            this.isFangZuoBi = true;
        }

        if (MJModel.RoomConfigID.indexOf(85220005) != -1) {
            MJModel.play_id_str.push("点杠三家付");
        }
        if (MJModel.RoomConfigID.indexOf(85220006) != -1) {
            MJModel.play_id_str.push("点炮包杠");
        }
        if (MJModel.RoomConfigID.indexOf(85220007) != -1) {
            MJModel.play_id_str.push("改变听口可以杠");
        }
        if (MJModel.RoomConfigID.indexOf(85220008) != -1) {
            MJModel.play_id_str.push("风嘴子");
        }
        if (MJModel.RoomConfigID.indexOf(85220009) != -1) {
            MJModel.play_id_str.push("荒庄不荒杠");
        }
        if (MJModel.RoomConfigID.indexOf(85250001) != -1) {
            MJModel.play_id_str.push("单耗子");
        }
        if (MJModel.RoomConfigID.indexOf(85250002) != -1) {
            MJModel.play_id_str.push("双耗子");
        }
        if (MJModel.RoomConfigID.indexOf(85250003) != -1) {
            MJModel.play_id_str.push("风耗子");
        }
        if (MJModel.RoomConfigID.indexOf(85250004) != -1) {
            MJModel.play_id_str.push("无耗子");
        }
        if (MJModel.RoomConfigID.indexOf(85260001) != -1) {
            MJModel.play_id_str.push("12不能胡");
        }
        if (MJModel.RoomConfigID.indexOf(85260002) != -1) {
            MJModel.play_id_str.push("123不能胡");
        }
        if (MJModel.RoomConfigID.indexOf(85270001) != -1) {
            MJModel.play_id_str.push("345自摸");
        }
        if (MJModel.RoomConfigID.indexOf(85270002) != -1) {
            MJModel.play_id_str.push("4自摸");
        }
        if (MJModel.RoomConfigID.indexOf(85270003) != -1) {
            MJModel.play_id_str.push("34自摸");
        }
        if (MJModel.RoomConfigID.indexOf(85840001) != -1) {
            MJModel.play_id_str.push("大胡加倍");
        }
        if (MJModel.RoomConfigID.indexOf(85840002) != -1) {
            MJModel.play_id_str.push("大胡加10点");
        }
        if (MJModel.RoomConfigID.indexOf(85840003) != -1) {
            MJModel.play_id_str.push("大胡加20点");
        }

        var gameDes = "";
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            gameDes += MJModel.play_id_str[i];
            if (i != MJModel.play_id_str.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        if (laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        var size = cc.director.getWinSize();

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("shanxikoudianmj/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(70, 570));
            this._curLaizi_bg.setScale(0.9);
            this.addChild(this._curLaizi_bg, 500);
        }

        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;

        if (this._curLaizi > 0) {
            laizi_tip = new cc.Sprite(getResPath("shanxikoudianmj/flag/lai_flag2.png"));
            laizi_tip.setPosition(cc.p(25, 40));
            this._curLaizi_bg.addChild(laizi_tip);
            var card = new MJCard();
            card.setValue(laizi, 0, CardType.Card_End, 0);//CardType.Card_Out
            if (this._curLaizipi > 0 && this._curLaizipi !=255) {
                card.setPosition(cc.p(95, 40));
            }else{
                card.setPosition(cc.p(70, 40));
            }
            card.setScale(0.4);//0.9
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
            if (gamestart) {
                var endPos = card.getPosition();
                var scale = card.getScale();
                var dl = 0;
                //laizi_tip.setVisible(false);
                //laizi_tip.runAction(cc.sequence(cc.delayTime(1 + dl), cc.show()));
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    //self._showLaizi_effect();
                });

                var p = MJConfig.getInfoPos();
                card.setPosition(cc.p(p.x - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, p.y - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), cc.scaleTo(0.2, 1.5), cc.delayTime(0.5), cc.spawn(cc.moveTo(0.17, endPos), cc.scaleTo(0.17, scale))));//2
            }
        }
        if (this._curLaizipi > 0 && this._curLaizipi !=255) {
            var card = new MJCard();
            card.setValue(laizipi, 0, CardType.Card_End, 0);//CardType.Card_Out
            card.setPosition(cc.p(60, 40));
            card.setScale(0.4);//0.9
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.shanxikoudianmj.AckLaiziCard", data);
        var self = this;
        var curLaizi = -1;
        var curLaizipi = -1;
        if(packet.card == 1){
            curLaizi = packet.laizicard[0];
        }else if(packet.card == 2){
            curLaizi = packet.laizicard[0];
            curLaizipi = packet.laizicard[1];
        }

        //var publiccard = null;
        //var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);

        this._curLaizi = curLaizi;
        this._curLaizipi = curLaizipi;

        this._setLaizi(curLaizi, curLaizipi, -1, canDelay ? true : false);

        if (canDelay == false) {
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }

        MJModel.isEnterWait = true;
        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);
            var allPreCars = [];
            var allLaiZi = [];
            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - i - 1, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    self.room_Card.reflashHandCard(1, true);
                    self.room_Card.reflashHandCard(2, true);
                    self.room_Card.reflashHandCard(3, true);
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1.0), move_end));
    },

    //赖子动画
    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("shanxikoudianmj/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if(true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.8), cc.removeSelf()));
                }
            }
        }
        var armature = new ccs.Armature("effects_mjhunancx");
        var animation = armature.getAnimation();
        if (animation) {
            if (typeof animation.playWithIndex === "function") {
                if (name == "赖子") {
                    animation.playWithIndex(1, -1, 0);
                }
                if (name == "赖根") {
                    animation.playWithIndex(2, -1, 0);
                }
                //if (name == "朝天") {
                //    animation.playWithIndex(3, -1, 0);
                //}
                armature.setPosition(cc.p(size.width / 2, size.height / 2 + 150));
                this.addChild(armature, 100);
                armature.runAction(cc.sequence(cc.delayTime(1.7), cc.removeSelf()));
            }
        }
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("shanxikoudianmj/sound/laizi.mp3")));
        return armature;
    },

    _showHandcardFlag: function () {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _checkAddCardFlag: function (card) {
        try {
            if (card.value == this._curLaizi) {
                //card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;
                flag = new cc.Sprite(getResPath("shanxikoudianmj/flag/lai_flag.png"));
                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, 5));
                    flag.setAnchorPoint(cc.p(0, 0));
                    flag.setScale(1);
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    if (card.type == CardType.Card_End || card.type == CardType.Card_Peng) {
                        if (card.pos == 1 || card.pos == 3|| card.pos == 2) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(1.5);
                        }
                    }
                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flag.setScale(0.6);
                        if (card.pos == 0) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(0.6);
                        }
                    }
                }
                return;
            }
            if (card.value == this._curLaizipi) {
                var pi = card.getChildByName("sprite");
                pi.removeChildByName("laizipi_flag");
                var flagpi = null;
                flagpi = new cc.Sprite(getResPath("shanxikoudianmj/flag/lai_flag.png"));
                var m_size = pi.getContentSize();
                if (flagpi) {
                    flagpi.setPosition(cc.p(0, 5));
                    flagpi.setAnchorPoint(cc.p(0, 0));
                    flagpi.setScale(1);
                    flagpi.setName("laizipi_flag");
                    pi.addChild(flagpi);
                    this._flagDirection(card.pos, flagpi, m_size);
                    if (card.type == CardType.Card_End || card.type == CardType.Card_Peng) {
                        if (card.pos == 1 || card.pos == 3|| card.pos == 2) {
                            flagpi.setScale(0.6);
                        } else {
                            flagpi.setScale(1.5);
                        }
                    }
                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flagpi.setScale(0.6);
                        if (card.pos == 0) {
                            flagpi.setScale(0.6);
                        } else {
                            flagpi.setScale(0.6);
                        }
                    }
                }

            }

        } catch (e) {
            Log(this, e);
        }
    },
    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (pos == 1) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(m_size.width, 17));
                flag.setRotation(-90);
            }else{
                flag.setPosition(cc.p(m_size.width, 17));
                flag.setRotation(-90);
            }
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width,m_size.height));
            flag.setRotation(180);
        } else if (pos == 3) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(0, m_size.height));
                flag.setRotation(90);
            }else{
                flag.setPosition(cc.p(0, m_size.height));
                flag.setRotation(90);
            }
        }
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边

            if (av == this._curLaizipi && bv != this._curLaizipi)return 1;//赖子皮放在最前边
            if (av != this._curLaizipi && bv == this._curLaizipi)return -1;//赖子皮放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    myselfOpenOutCard: function (IsMoCard, showTip) {
        this._super(IsMoCard, showTip);
        this.checkAutoOutCard();
    },
    checkAutoOutCard: function () {
        if (MJModel.isMyPlayer(MJModel.cur_seat) && this.room_Card.isDuoPai(0) && MJModel.mj_lockcard_type == 2 ) {
            this.autoOutCard();
        }
    },
    autoOutCard: function () {
        this.schedule(this.autoOutCardTimeOut, 0.5);
    },
    autoOutCardTimeOut: function (dt) {
        if (MJModel.TouPiaoING == true) return;//投票期间 该功能不起作用
        this.unschedule(this.autoOutCardTimeOut);
        var operate = MJModel.curOperate;
        if (( operate & ActionType.TYPE_LISTEN) == ActionType.TYPE_LISTEN) {
            operate = operate - ActionType.TYPE_LISTEN;
        }

        if (operate > 0) {
            return;
        }
        sendOutCard(MJModel.curOperateCard);
    },

});

var MJResult_shanxikoudian = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
        var allL = 0;
        var allPlayId = [];
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            var str = MJModel.play_id_str[i];
            var _gameType_sp = new cc.LabelTTF(str, "Thonburi", 20);
            _gameType_sp.setColor(this.leftColor);
            _gameType_sp.setAnchorPoint(cc.p(0, 0));
            this.addChild(_gameType_sp);
            allL += _gameType_sp.getContentSize().width + 10;
            allPlayId.push(_gameType_sp);
        }
        var curP = 0;
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            var _gameType_sp = allPlayId[i];
            _gameType_sp.setPosition(cc.p(50+curP, 75));
            curP += _gameType_sp.getContentSize().width + 10;
        }
    },
    createAvatar: function (pos) {
        var layer = this._super(pos);
        var seatid = MJModel.getSeatidByPos(pos);
        if (this.shanxiGameEnd.jiesuanbaoting.length > seatid && this.shanxiGameEnd.jiesuanbaoting[seatid] == 1) {
            var headSize = cc.size(96, 96);
            var baotingPic = new cc.Sprite(getResPath("RoomMJ/ting_tip.png"));
            baotingPic.setAnchorPoint(cc.p(0.5, 0));
            baotingPic.setPosition(cc.p(headSize.width / 2, 0));
            layer.addChild(baotingPic, 100);
        }
        return layer;
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("shanxikoudianmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            var txt = "杠牌分  +";
            if (gangScore < 0) {
                txt = "杠牌分  ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        //var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        //if (addfan) {
        //    for (var i = 0; i < addfan.length; i++) {
        //        if (AddFanType[addfan[i].AddType]) {
        //            var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
        //            fanType.setColor(this.leftColor);
        //            fanType.setAnchorPoint(cc.p(0, 0));
        //            fanType.setPosition(cc.p(x, y + 10));
        //            layer.addChild(fanType);
        //            x += fanType.getContentSize().width + 10;
        //        }
        //    }
        //}

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                //if (AddFanType[addfan[i].AddType]) {
                var fantypenum = AddFanNameArray[AddFanTypeArray.indexOf(addfan[i].AddType)];
                var fanType = new cc.LabelTTF(fantypenum, "Arial", 20);

                fanType.setColor(this.leftColor);
                fanType.setAnchorPoint(cc.p(0, 0));
                fanType.setPosition(cc.p(x, y + 10));
                layer.addChild(fanType);
                x += fanType.getContentSize().width + 10;
            }
            //}
        }


        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "shanxikoudianmj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "shanxikoudianmj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "shanxikoudianmj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "shanxikoudianmj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "shanxikoudianmj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "shanxikoudianmj/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "shanxikoudianmj/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});
