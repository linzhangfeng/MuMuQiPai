/*
 蕲春广东麻将 2018.10.17
 */
loadProtoFile("proto/qichungameproto.proto");
var MJTable_QiChunGuangDong = MJTable.extend({
    tag : "MJTable_QiChunGuangDong",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _curLaizi_bg: null,
    isRecordShow: false,    //总结算界面展示
    _pkg_id: 0,

    ctor: function () {
        this._super();
    },

    initRoom: function () {
        MJModel.mj_suport_fangyan = 0;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;

        MJModel.mj_gps_type = 1;

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2881 || this._pkg_id == 2370) {
                MJModel.mj_roomType = 2;
            } else if (this._pkg_id == 2880 | this._pkg_id == 2329) {
                MJModel.mj_roomType = 1;
            }
        } catch (e) {
            Log(this, e);
        }
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }
        this._init_extend();
        this._super();

    },

    _init_extend : function () {
        var self_table = this;

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        var superSetValue_card = MJCard.prototype.setValue;
        MJCard.prototype.setValue = function (value, pos, type, index) {
            superSetValue_card.call(this, value, pos, type, index);
            var bgsp = this.getChildByName("sprite");

            if (pos == 0 && (type == CardType.Card_Hand) || type == CardType.Card_Out || type == CardType.Card_End) {
                this.GuiPaiIdentify = new cc.Sprite(getResPath("qichunguangdongmj/flag/gui_flag.png"));
                this.GuiPaiIdentify.setAnchorPoint(cc.p(0, 1));
                this.GuiPaiIdentify.setPosition(cc.p(0, this.getContentSize().height));
                if (type != CardType.Card_Hand) {
                    this.GuiPaiIdentify.setScale(0.6);
                }
                this.GuiPaiIdentify.setVisible(false);
                bgsp.addChild(this.GuiPaiIdentify);
                this.showGuiPai();
            }

        };

        MJCard.prototype.showGuiPai = function () {
            if (self_table.isJokerValue(this.value)) {
                if (this.GuiPaiIdentify) {
                    this.GuiPaiIdentify.setVisible(true);
                    this.setStoreColor(cc.color(255, 249, 137));
                }
            }
        };

        MJCards.prototype.setGuipai = function () {
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var fcard = this.hand_card[0][i];
                fcard.showGuiPai();
            }
        };

        var spuer_MJPreTable_ctor = MJPreTable.prototype.ctor;
        MJPreTable.prototype.ctor = function () {
            spuer_MJPreTable_ctor.call(this);
            var self = this;
            var wx_share = this.btns["yaoqing"];
            var xl_share = this.btns["xlshare"];
            var copy = this.btns["copyshare"];
            var ready = this.btns["ready"];
            xl_share.setVisible(false);
            var parent = wx_share.getParent();
            wx_share.removeFromParent();
            copy.removeFromParent();

            wx_share = new ccui.Button();
            wx_share.loadTextures(getResPath("RoomMJ/mj_public/common/pretable/share1.png"),getResPath("RoomMJ/mj_public/common/pretable/share2.png"), "");
            parent.addChild(wx_share);
            wx_share.setName("yaoqing");
            wx_share.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[wx_share.getName()] = wx_share;

            copy = new ccui.Button();
            copy.loadTextures(getResPath("RoomMJ/mj_public/common/pretable/copy1.png"),getResPath("RoomMJ/mj_public/common/pretable/copy2.png"), "");
            parent.addChild(copy);
            copy.setName("copyshare");
            copy.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[copy.getName()] = copy;

            wx_share.setPosition(-310,ready.getPositionY());
            copy.setPosition(310,ready.getPositionY());
        };

        var super_initUI = CommonTotalResult.prototype.initUI;
        CommonTotalResult.prototype.initUI = function (gameType, roomId, time, startTime, countSum, count) {
            super_initUI.call(this, gameType, roomId, time, startTime, countSum, count);
            this.rootNode.getChildByName("jushu").setVisible(false);

            var self = this;
            var wx_share = this.btns["share"];
            var xl_share = this.btns["xlshare"];
            var copy = this.btns["copy"];
            xl_share.setVisible(false);

            var parent = wx_share.getParent();
            wx_share.removeFromParent();
            copy.removeFromParent();

            wx_share = new ccui.Button();
            wx_share.loadTextures(getResPath("RoomMJ/mj_public/common/dialog/bigresult/share1.png"),getResPath("RoomMJ/mj_public/common/dialog/bigresult/share2.png"), "");
            parent.addChild(wx_share);
            wx_share.setName("share");
            wx_share.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[wx_share.getName()] = wx_share;

            copy = new ccui.Button();
            copy.loadTextures(getResPath("RoomMJ/mj_public/common/dialog/bigresult/copy_btn1.png"),getResPath("RoomMJ/mj_public/common/dialog/bigresult/copy_btn2.png"), "");
            parent.addChild(copy);
            copy.setName("copy");
            copy.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[copy.getName()] = copy;

            var size = cc.director.getWinSize();
            wx_share.setPosition(size.width / 2,48);
            copy.setPosition(size.width / 2 + wx_share.getContentSize().width / 2 + copy.getContentSize().width / 2 + 10,wx_share.getPositionY() + 8);

            // var sharelinks = new ccui.Button(getResPath("yangzhou/action/sharelinks1.png"), getResPath("yangzhou/action/sharelinks2.png"), getResPath("yangzhou/action/sharelinks2.png"));
            // sharelinks.setPosition(cc.p(size.width / 2 - wx_share.getContentSize().width / 2 - sharelinks.getContentSize().width / 2 - 10, wx_share.getPositionY()));
            // sharelinks.setName("sharelinks");
            // sharelinks.addClickEventListener(function (sender, evt) {
            //     Utils.shareGameRecordLinks();
            //     sharelinks.setEnabled(false);
            // });
            // parent.addChild(sharelinks);
        };
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

    isJokerValue: function (value) {
        if (this._curLaizi > 0) {
            if (value == this._curLaizi) {
                return true;
            }
        }
        return false;
    },

    getMjTypePath: function () {
        return getResPath("qichunguangdongmj/mj_type_4112.png");
    },

    _setGameType: function () {
        var pkg_id = 1;
        var play_id = [];

        if(MJModel.mj_roomType == 0){
            play_id.push("4人");
        }else if(MJModel.mj_roomType == 1){
            play_id.push("3人");
        }else if(MJModel.mj_roomType == 2){
            play_id.push("2人");
        }

        if (MJModel.RoomConfigID.indexOf(85130001) != -1) {
            play_id.push("抢杠胡（公杠）");
        }
        if (MJModel.RoomConfigID.indexOf(85130002) != -1) {
            play_id.push("杠爆全包(明杠)");
        }
        // if (MJModel.RoomConfigID.indexOf(85130003) != -1) {
        //     play_id.push("买马");
        // }
        if (MJModel.RoomConfigID.indexOf(85130004) != -1) {
            play_id.push("马跟底分");
        }
        if (MJModel.RoomConfigID.indexOf(85130005) != -1) {
            play_id.push("可胡七对");
        }
        if(MJModel.RoomConfigID.indexOf(85130006) != -1){
            play_id.push("七对加倍");
        }
        // if(MJModel.RoomConfigID.indexOf(85130007) != -1){
        //     play_id.push("鬼牌");
        // }
        if(MJModel.RoomConfigID.indexOf(85130008) != -1){
            play_id.push("无鬼加倍");
        }
        if(MJModel.RoomConfigID.indexOf(85130009) != -1){
            play_id.push("抢杠全包");
        }
        if(MJModel.RoomConfigID.indexOf(85130010) != -1){
            play_id.push("不带风");
        }
        if(MJModel.RoomConfigID.indexOf(85140001) != -1){
            play_id.push("翻鬼");
        }
        if(MJModel.RoomConfigID.indexOf(85140002) != -1){
            play_id.push("白板鬼");
        }
        if(MJModel.RoomConfigID.indexOf(85150001) != -1){
            play_id.push("买2马");
        }
        if(MJModel.RoomConfigID.indexOf(85150002) != -1){
            play_id.push("买4马");
        }
        if(MJModel.RoomConfigID.indexOf(85150003) != -1){
            play_id.push("买6马");
        }
        if(MJModel.RoomConfigID.indexOf(85150004) != -1){
            play_id.push("买8马");
        }
        if(MJModel.RoomConfigID.indexOf(85150005) != -1){
            play_id.push("一马全中");
        }
        if(MJModel.RoomConfigID.indexOf(85160001) != -1){
            play_id.push("自摸胡");
        }

        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.qichungdmj.tagQCGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
        } else if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.qichungdmj.AckQCGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
        } else if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }else if(cmd == CMD.SERVER_GET_GUIPAI){
            this.handler_server_gui_pai(jpacket,canDelay);
        }
        else{
            this._super(cmd, jpacket, canDelay, svrid);
        }
    },

    handler_server_gui_pai : function (data,canDelay) {
        var ackguipai = parsePacket("proto.game.qichungdmj.AckLaiziCard", data);
        var opencard = ackguipai.opencard;
        var laizicard = ackguipai.laizicard;
        this._setLaizi(laizicard, laizicard, -1, canDelay ? true : false);
        this.room_Card.setGuipai();
        this.room_Card.reflashHandCard(0, true);
    },

    handler_server_scene_info_uc: function (qichunScene, canDelay) {
        this.reflashSetting(true);
        var ackGameFree = qichunScene.GameSence;
        MJModel.RoomConfigID = ackGameFree.RoomConfigID;
        this._setGameType();
        this._super(ackGameFree, canDelay);

        var ackguipai = qichunScene.laizicard;
        if(ackguipai){
            var opencard = ackguipai.opencard;
            var laizicard = ackguipai.laizicard;
            this._setLaizi(laizicard, laizicard, -1,  false);
        }
        this.room_Card.setGuipai();
        this.room_Card.reflashHandCard(0, true);
    },

    handler_server_game_end_bc: function (qichunScene, canDelay) {
        try {
            var ackGameEnd = qichunScene.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();
            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });
            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var has_niao = false;
            var liangniaocard = [];
            var zhongniaochaird = [];
            liangniaocard = qichunScene.liangniaocard;
            zhongniaochaird = qichunScene.zhongniaochaird;

            if (liangniaocard && liangniaocard.length != 0) {
                has_niao = true;
            }
            if (state == 1)has_niao = false;
            //亮鸟牌
            var showniaocard = cc.callFunc(function () {
                if (has_niao == false)return;
                self.showZhongNiaoBigTips(liangniaocard, zhongniaochaird);
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                var result = new MJResult_QiChunGuangDong();
                result.setName("reset_remove");
                result.updateContentView(qichunScene);
                self.addChild(result, 100000);
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, showniaocard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), showniaocard, cc.delayTime(has_niao ? 2 : 0), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {
        // for (var j = 0; j < scores.length; j++) {
        //     var seadid = j;
        //     var pos = MJModel.getPosBySeatid(j);
        //     var s = scores[seadid];
        //     var myPlayer = MJModel.players[seadid];
        //     if (myPlayer) {
        //         myPlayer.money += s;
        //         this.players[pos].updateInfo();
        //         if (canDelay) this.showScoreEffect(pos, s);
        //     }
        // }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "蕲春广东麻将";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "杠牌次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.GangTimes];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    showZhongNiaoBigTips: function (cards, ZhongChairID) {
        var length = cards.length;
        for (var i = 0; i < length; i++) {
            var zhongSeatId = ZhongChairID[i];
            var zhongLength = 0;
            var zhongIndex = 0;
            for (var m = 0; m < ZhongChairID.length; m++) {
                if (zhongSeatId == ZhongChairID[m]) {
                    zhongLength++;
                    if (m < i) {
                        zhongIndex++;
                    }
                }
            }
            var zhongPos = MJModel.getPosBySeatid(zhongSeatId);
            var cardValue = cards[i];

            var card = new MJCard();
            card.setValue(cardValue, 0, CardType.Card_Hand, 0);
            card.setMyPosition(MJConfig.getNiaoBigCardPos(i, length));

            this.addChild(card,10001);
            var endPos = MJConfig.getNiaoEndCardPos(zhongPos, zhongIndex, zhongLength);
            if (zhongSeatId >= 0 && zhongSeatId <= 3) {
                card.setLocalZOrder(100);
                var callback = cc.callFunc(function () {
                    this.setZhongMaColor(0);
                } , card);
                if(this.isNeedMove(length)){
                    card.runAction(cc.sequence(cc.delayTime(1), callback ,cc.moveTo(0.5, endPos),cc.delayTime(2),cc.removeSelf()));
                }else {
                    card.runAction(cc.sequence(cc.delayTime(1), callback,cc.delayTime(2),cc.removeSelf()));
                }
            }else {
                endPos = MJConfig.getNiaoBigCardPos(zhongIndex , zhongLength);
                var callback = cc.callFunc(function () {
                    this.setBlackVis(true);
                } , card);
                if(this.isNeedMove(length)){
                    card.runAction(cc.sequence(cc.delayTime(1), callback , cc.moveTo(0.5, endPos),cc.delayTime(2),cc.removeSelf()));
                }else {
                    card.runAction(cc.sequence(cc.delayTime(1), callback,cc.delayTime(2),cc.removeSelf()));
                }
            }
        }
    },

    isNeedMove: function (length) {
        if(length > 15){
            return false;
        }
        return true;
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("qichunguangdongmj/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("qichunguangdongmj/sound/laizi.mp3")));
        return armature;
    },
    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;
        this._curLaizipi2 = laizipi2;

        var size = cc.director.getWinSize();
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("qichunguangdongmj/flag/laizi_bg3.png"));
            this._curLaizi_bg.setPosition(cc.p(size.width - 220, size.height - 70));
            this.addChild(this._curLaizi_bg, 200);
        }
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);

        if (this._curLaizipi > 0) {
            var card = new MJCard();
            card.setValue(this._curLaizi, 0, CardType.Card_Out, 0);
            card.setPosition(cc.p(this._curLaizi_bg.getContentSize().width / 2, this._curLaizi_bg.getContentSize().height / 2));
            card.setScale(1);
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);

            if (gamestart) {
                var dl = 0;
                var ppos = card.getPosition();
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect("赖子皮");
                });
                card.setPosition(cc.p(size.width / 2 - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, size.height / 2 - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(1.0), cc.spawn(cc.moveTo(0.17, ppos), cc.scaleTo(0.17, 1))));
            }
        }
    },

    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.actionCallBack("ready");
            } else {
                this.actionCallBack("ready");
            }
        }
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._setLaizi(-1, -1, -1);
    },
});

var MJ_QiChunGuangDong_Type = {
    17: "炮胡",
    18: "自摸",
    22: "抢杠胡",
    24: "杠上花",
    36: "七小对",
    41: "四鬼胡",
    42: "无鬼",
    50: "出鬼",
    51: "跟庄 ",  // + -
    519 : "抢杠全包",
    520 : "杠爆全包"
};

var MJResult_QiChunGuangDong = MJCommonResult.extend({

    updateContentView: function (ackGameEndQC) {
        this.ackGameEnd = ackGameEndQC.gameend;
        this.qichunGameEnd = ackGameEndQC;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 785, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        this.createBottomMaLayer();
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("qichunguangdongmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            var txt = "杠牌分  +";
            if (gangScore < 0) {
                txt = "杠牌分  ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        x += 10;

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                var add_type =addfan[i].AddType;
                var add_value = addfan[i].AddNum;
                if(add_type == 51){
                    if(add_value >= 0){
                        add_value = "+" +add_value;
                    }
                }else{
                    add_value = "x" +add_value;
                }

                if (MJ_QiChunGuangDong_Type[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(MJ_QiChunGuangDong_Type[add_type] + add_value, "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        return layer;
    },

    createMaLayer: function (seatid) {
        var layer = null;
        var zhongmachairID = this.qichunGameEnd.zhongniaochaird;
        var zhongmacards = this.qichunGameEnd.liangniaocard;

        if (zhongmacards) {
            var niaoCards = [];
            for (var i = 0; i < zhongmachairID.length; i++) {
                if (zhongmachairID[i] == seatid) {
                    niaoCards.push(zhongmacards[i]);
                }
            }
            if (niaoCards.length > 0) {
                layer = new cc.Layer();
                var maPic = new cc.Sprite(this.getZhongMaIcon());
                maPic.setName("zhongmaTip");
                maPic.setAnchorPoint(cc.p(0.0, 1));
                maPic.setPosition(cc.p(0 , -20));
                layer.addChild(maPic);

                var length = niaoCards.length;
                for (var i = 0; i < niaoCards.length; i++) {
                    var card = new MJCard();
                    card.setValue(niaoCards[i], 0, CardType.Card_End, 0);
                    card.setAnchorPoint(cc.p(0.0, 1));
                    card.setZhongMaColor(2);
                    card.setScale(0.35);
                    var startX = 5;
                    var startY = -10;
                    var count = 6;
                    if(length > count){
                        startY = length <= 14 ? 5 : 50;
                    }
                    card.setPosition(cc.p(startX + maPic.getPositionX() + maPic.getContentSize().width + parseInt((i % count)) * card.getBoundingBox().width ,startY - parseInt(i/count) * 35));
                    layer.addChild(card);

                }
            }
        }
        return layer;

    },

    getZhongMaIcon: function () {
        return getResPath("RoomMJ/result2/zhong_ma_icon.png");
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "RoomMJ/result2/zi_mo_icon.png";
                    break;
                case 2:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                case 3:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 5:
                    path = "RoomMJ/result2/qiang_gang_icon.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX, startY));
                if(fanInfo.SpecialType == 5){
                    typeSprite.setScale(0.7);
                }
                this.bgSpr.addChild(typeSprite);
            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },

    createBottomMaLayer: function () {
        var zhongniaochaird = this.qichunGameEnd.zhongniaochaird;
        var liangmalist = this.qichunGameEnd.liangniaocard;
        var maLength = 0;
        var marginWidth = 0;
        if (liangmalist.length > 0) {
            maLength = liangmalist.length;
            var label = new cc.LabelTTF("马牌:", "Arial", 25);
            label.setAnchorPoint(cc.p(0.0, 0.5));
            label.setColor(this.leftColor);
            label.setPosition(cc.p(85, 50));
            this.bgSpr.addChild(label);

            for (var i = 0; i < liangmalist.length; i++) {
                var card = new MJCard();
                card.setValue(liangmalist[i], 0, CardType.Card_End, 0);
                card.setAnchorPoint(cc.p(0.0, 0.5));
                card.setScale(0.5);
                card.setPosition(cc.p(150 + (card.getBoundingBox().width) * i, 50));
                if (zhongniaochaird[i] == -1) {
                    card.setBlackVis(true);
                } else {
                    card.setZhongMaColor(1);
                }
                this.bgSpr.addChild(card);

                if(marginWidth == 0){
                    marginWidth = card.getBoundingBox().width * maLength;
                }
            }

            this.configLayout = new ccui.Layout();
            this.configLayout.setPosition(150 + marginWidth , 50);
            this.bgSpr.addChild(this.configLayout);

            // var mafen = this.huainanGameEnd.zhongmashu;
            // var mafen_txt = new cc.LabelTTF(__String.createWithFormat("马分: +%1",mafen), "Arial", 25);
            // mafen_txt.setAnchorPoint(cc.p(0.0, 0.5));
            // mafen_txt.setColor(this.leftColor);
            // mafen_txt.setPosition(cc.p(marginWidth + 200, 50));
            // this.bgSpr.addChild(mafen_txt);
        }
    },
});