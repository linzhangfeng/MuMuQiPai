loadProtoFile("proto/nankangbaohuproto.proto");

var PackgName = {
    tianmen_san: 149,//202  149，线上157
    tianmen_si: 150,//202  150，线上158
};

var LaiZiGangType = {
    TYPE_LAIZI_GANG: 0x10000,
    TYPE_LAIZIPI_GANG: 0x80000
};

var selCMD = {
    SERVER_UPDATE_BEISHU: 5071,
    SERVER_START_JIA: 5072,
    SERVER_BROAD_JIA: 5073,
    CLIENT_MJ_CHOOSE_JIA: 1112,
    CLIENT_MJ_CHOOSE_PIAO: 1108,
    SERVER_BROAD_PIAO: 5022,//广播玩家选择的飘
    SERVER_START_PIAO: 5024,//开始选择飘
};

var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
    HU_SHUA_HOU_HU: 10,
    HU_QIANG_ZHI_GANG:11,	//抢直杠




};

var AddFanType = {
    MJ_FAN_TYPE_QINGYISE : 14,				//清一色
    MJ_FAN_TYPE_PENGPENGHU:16,              //碰碰胡
    MJ_FAN_TYPE_PINGHU : 17,				//平胡
    MJ_FAN_TYPE_LONGQIDUI: 27,					//大七对
    MJ_FAN_TYPE_FENGYISE: 31,					//风一色
    MJ_FAN_TYPE_QIDUI: 36,						//七对
    MJ_FAN_TYPE_NOJOKER : 42,					//无鬼
    MJ_FAN_TYPE_GANGSHANGHUA : 24,				//杠上开花
    MJ_FAN_TYPE_QIANGGANGHU : 22,				//抢杠胡

};

var AddFanTypeArray = [
    AddFanType.MJ_FAN_TYPE_QINGYISE ,
    AddFanType.MJ_FAN_TYPE_PENGPENGHU ,
    AddFanType.MJ_FAN_TYPE_PINGHU ,
    AddFanType.MJ_FAN_TYPE_LONGQIDUI,
    AddFanType.MJ_FAN_TYPE_FENGYISE ,
    AddFanType.MJ_FAN_TYPE_QIDUI,
    AddFanType.MJ_FAN_TYPE_NOJOKER,
    AddFanType.MJ_FAN_TYPE_GANGSHANGHUA ,
    AddFanType.MJ_FAN_TYPE_QIANGGANGHU ,
];

var AddFanNameArray = [
    "清一色",
    "碰碰胡",
    "平胡",
    "大七对",
    "风一色",
    "七对",
    "无鬼",
    "杠上开花",
    "抢杠胡",

];
var MJTable_nankangBH = MJTable.extend({
    tag: "MJTable_nankangBH",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizi_bg: null,
    isRecordShow: false,
    _pkg_id: 0,
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        MJModel.mj_suport_fangyan = 1;
        MJModel.otherOutCardEffect = true;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_style = 1;
        MJModel.mj_bg_use = 1;
        MJModel.mj_bg_color = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_gps_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.has_hu_layout = 1;
        MJModel.mj_font = "jianjie";
        MJModel.mj_fontSize = "dahao";
        MJModel.mj_style = "shishang";
        MJModel.yinyue = "jingdian";
        MJModel.shareType = 1;
        MJModel.mj_roominfo_type = 1;
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2239 || this._pkg_id == 2162) {
                MJModel.mj_roomType = 2;
            }
            else if (this._pkg_id == 2238|| this._pkg_id == 2163 ) {
                MJModel.mj_roomType = 1;
            }

        } catch (e) {
            Log(this, e);
        }


        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }

        this._init_extend();
        this._super();
        //this.schedule(this.test, 1.0);
    },
    //
    loadCardConfig: function (path) {
        this._super(MJModel.mj_bg_use == 0 ? "nankang/config/card_config.json" : "RoomMJ/config/card_config2d.json");
    },

    //设置背景
    getBgStr: function () {
        if ( MJModel.mj_style != "shishang" && MJModel.mj_style != "huaijiu" && MJModel.mj_style != "jingdian"){
            MJModel.mj_style = "shishang";
        }
        return __String.createWithFormat("RoomMJ/bgs/%1_%2.png", MJModel.mj_style, MJModel.mj_table_view);
    },
    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 2) pkg_id = 2;
        if (MJModel.mj_roomType == 1) pkg_id = 3;
        return __String.createWithFormat(getResPath("nankang/flag/pkgid%1.png"), pkg_id);
    },
    //getBgStr:function(){
    //    if (MJModel.mj_bg_color == 0){
    //        return MJModel.mj_bg_use == 0 ? "nankang/bgs/bg0.png" :  "nankang/bgs/bg1.png";
    //    }else{
    //        return MJModel.mj_bg_use == 0 ? "nankang/bgs/bg25d_lv.png" : "nankang/bgs/bg2d_lv.png";
    //    }
    //},
    //updateBg: function (isInit) {
    //    if (isInit == undefined)isInit = false;
    //
    //    var size = cc.director.getWinSize();
    //    if (this.bg == null) {
    //        this.bg = new cc.Sprite(getResPath(this.getBgStr()));
    //        this.bg.setAnchorPoint(cc.p(0.5, 0.5));
    //        this.bg.setPosition(size.width / 2, size.height / 2);
    //        this.addChild(this.bg, -100);
    //    } else {
    //        this.bg.setTexture(getResPath(this.getBgStr()));
    //    }
    //
    //    if (isInit)return;
    //    this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config.json" : "RoomMJ/config/card_config2d.json");
    //    this.room_Card.reflashAllCardUI();
    //    if (this.room_Info)this.room_Info.reflash();
    //    for (var i = 0; i < 4; i++) {
    //        var player = this.players[i];
    //        player.setPosition(MJConfig.getPlayerPos(i));
    //    }
    //},

    _init_extend: function () {
        var self_table = this;

        //MJInfo.prototype.reflash = function () {
        //    this.info25D.setVisible(MJModel.mj_bg_use == 0);
        //    this.info2D.setVisible(MJModel.mj_bg_use == 1);
        //    if (this.rootNode25D)this.rootNode25D.setPosition(MJConfig.getInfoPos());
        //    if (this.rootNode2D)this.rootNode2D.setPosition(MJConfig.getInfoPos());
        //    if (this.card_left_bg) {
        //        var card = this.card_left_bg.getChildByName("card");
        //        card.reflashUI();
        //    }
        //};

        //MJInfo.prototype.init2D = function () {
        //    var uiJson = null;
        //    uiJson = ccs.load(getResPath("nankang/info/info_wuxue_2d.json"));
        //    this.rootNode2D = uiJson.node;
        //    this.rootNode2D.setPosition(MJConfig.getInfoPos());
        //    this.info2D.addChild(this.rootNode2D);
        //
        //    this.card_left_nums_2d = this.rootNode2D.getChildByName("num");
        //    this.card_left_nums_2d.ignoreContentAdaptWithSize(true);
        //
        //    this.daojishi2D = this.rootNode2D.getChildByName("time");
        //    this.daojishi2D.ignoreContentAdaptWithSize(true);
        //};
        //
        //MJInfo.prototype.init25D = function () {
        //    this.info25D.removeChildByName("directionSp");
        //    var uiJson = ccs.load(getResPath("nankang/info/info_wuxue_25d.json"));
        //    this.rootNode25D = uiJson.node;
        //    this.rootNode25D.setName("directionSp");
        //    this.rootNode25D.setPosition(MJConfig.getInfoPos());
        //    this.info25D.addChild(this.rootNode25D);
        //
        //    this.daojishi25D = this.rootNode25D.getChildByName("time");
        //    this.daojishi25D.ignoreContentAdaptWithSize(true);
        //
        //    var size = cc.director.getWinSize();
        //    this.card_left_bg = new cc.Sprite(getResPath("RoomMJ/card_left/bg.png"));
        //    this.card_left_bg.setPosition(48, size.height - 120);
        //    this.info25D.addChild(this.card_left_bg);
        //
        //    var icon = new MJCard();
        //    icon.setName("card");
        //    icon.setValue(0, 2, CardType.Card_Hand, 0);
        //    icon.setScale(0.7);
        //    icon.setPosition(icon.getContentSize().width / 2, this.card_left_bg.getContentSize().height / 2);
        //    this.card_left_bg.addChild(icon);
        //
        //    this.card_left_nums_25d = new cc.LabelTTF("0", "Thonburi", 22);
        //    this.card_left_nums_25d.setAnchorPoint(cc.p(0.5, 0.5));
        //    this.card_left_nums_25d.setColor(cc.color(204, 211, 115));
        //    this.card_left_nums_25d.setPosition(57, this.card_left_bg.getContentSize().height / 2);
        //    this.card_left_bg.addChild(this.card_left_nums_25d);
        //};
        //
        //MJInfo.prototype.showDiretion25D = function (pos) {
        //    try {
        //        var ds = null;
        //        for (var i = 0; i < 4; i++) {
        //            var sp = this.rootNode25D.getChildByName("dir" + i);
        //            sp.setVisible(false);
        //            sp.stopAllActions();
        //            if (i == pos) {
        //                ds = sp;
        //            }
        //        }
        //        if (ds) {
        //            ds.setVisible(true);
        //            ds.runAction(this.getDirAction(1));
        //        }
        //    } catch (e) {
        //        Log(this, e);
        //    }
        //};

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat,operat2) {
            if (operat2 == HuType.HU_QIANG_GANG || operat2 == HuType.HU_QIANG_ZHI_GANG){
                this.actions["hu"].loadTextures(getResPath("nankang/action/qianggang1.png"), getResPath("nankang/action/qianggang2.png"), "");
            }else{
                this.actions["hu"].loadTextures(getResPath("RoomMJ/action/hu1.png"), "", "");
            }
            super_setOperator.call(this,operat,operat2);
        };

        var super_getPlayerPos = MJConfig.getPlayerPos;
        MJConfig.getPlayerPos = function (pos) {
            var p = super_getPlayerPos.call(this, pos);
            if (pos == 3 && MJModel.mj_bg_use == 1)p.y -= 50;
            if (pos == 2)p.x += 15;
            return p;
        };

        MJInfo.prototype.getDirAction = function (type) {
            return cc.RepeatForever.create(cc.Sequence.create(new cc.FadeIn(1), new cc.FadeOut(1)));
        };

        MJInfo.prototype.getPublicCardEffectRes = function (res) {
            if (MJModel.mj_bg_color == 0) {
                return getResPath("RoomMJ/publiccardeffect/" + res);
            }
            if (MJModel.mj_bg_color == 1) {
                return getResPath("nankang/bgs/publiceffect/" + res);
            }
        };

        //SettingNew.prototype.createZhuoBu = function(){
        //    this.createZhuoBu2();
        //};

        //var super_updateZhuoBu = SettingNew.prototype.updateZhuoBu;
        //SettingNew.prototype.updateZhuoBu = function(name, text1,text2, num){
        //    if (MJModel.mj_bg_color == 1){
        //        if (num == 0){
        //            text1 = "nankang/action/25d_lv1.png";
        //            text2 = "nankang/action/25d_lv2.png";
        //        }
        //        if (num == 1){
        //            text1 = "nankang/action/2d_lv1.png";
        //            text2 = "nankang/action/2d_lv2.png";
        //        }
        //    }else{
        //        if (num == 0){
        //            text1 = "nankang/action/25d_1.png";
        //            text2 = "nankang/action/25d_2.png";
        //        }
        //        if (num == 1){
        //            text1 = "nankang/action/2d_1.png";
        //            text2 = "nankang/action/2d_2.png";
        //        }
        //    }
        //    super_updateZhuoBu.call(this,name, text1,text2, num);
        //};

        //var super_createCheckBoxItem2 = SettingNew.prototype.createCheckBoxItem2;
        //SettingNew.prototype.createCheckBoxItem2 = function(name, text1, text2, ison, num){
        //    if (MJModel.mj_bg_color == 1){
        //        if (num == 0){
        //            text1 = "nankang/action/25d_lv1.png";
        //            text2 = "nankang/action/25d_lv2.png";
        //        }
        //        if (num == 1){
        //            text1 = "nankang/action/2d_lv1.png";
        //            text2 = "nankang/action/2d_lv2.png";
        //        }
        //    }
        //
        //    return super_createCheckBoxItem2.call(this,name, text1, text2, ison);
        //};

        MJCards.prototype.outHandCardEffct = function (pos, value, out_card_pos) {
            this.outHandCardEffct2(pos, value);
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        var superTipCtor = MJTips.prototype.ctor;
        MJTips.prototype.ctor = function () {
            superTipCtor.call(this);
            var size = cc.director.getWinSize();
            this.my_tip.setPosition(cc.p(size.width / 2, size.height / 2 - 190));
            this.tip.setPosition(cc.p(size.width / 2, size.height / 2 - 190));
        };

        MJCard.prototype.check_addFlag = function () {
            self_table._checkAddCardFlag(this);
        };
        MJCards.prototype.createEndHandcardLayer = function (handcards, hucard) {
            var layer = new cc.Layer();
            var cardList = [];
            var changeable_Size = handcards.ChangeableCards.length;
            for (var j = 0; j < changeable_Size; j++) {
                var cardDataNum = handcards.ChangeableCards[j];
                cardList.push(cardDataNum);
            }

            try {
                cardList.sort(this.sortCard);
            } catch (e) {
                Log(this, e);
            }

            try {
                var is_remove = 0;
                var real_index = 0;
                var _vec;
                var hasHuCard = false;
                var hasMoreCard = parseInt(cardList.length % 3) == 2;
                if (hucard != 0 && hucard != null && hucard != undefined) {
                    hasHuCard = true;
                }
                for (var i = 0; i < cardList.length; i++) {
                    if (is_remove == 0 && hasMoreCard && hasHuCard) {
                        if (cardList[i] == hucard) {
                            is_remove = 1;
                            continue;
                        }
                    }
                    var card = new MJCard();
                    card.setValue(cardList[i], 0, CardType.Card_End, real_index);
                    _vec = MJConfig.getEndCardPos(0, real_index, cardList.length, hasMoreCard && !hasHuCard);
                    card.setPosition(_vec);
                    layer.addChild(card, MJConfig.getHandCardOrder(0, real_index));
                    real_index++;
                }

                if (hasHuCard) {
                    var card = new MJCard();
                    card.setValue(hucard, 0, CardType.Card_End, 0);
                    card.setPosition(MJConfig.getEndCardMoPos(0));
                    layer.addChild(card, MJConfig.getMoCardOrder(0));

                    var tip = new cc.Sprite(getResPath("lipu/flag/jiesuan_hu.png"));
                    tip.setName("jiesuan_hu_tip");
                    tip.setScale(2.5);
                    tip.setPosition(card.tingpai_flag.getPosition());
                    card.addChild(tip, 11);
                }
            } catch (e) {

            }

            if (handcards.stFixedCards) {
                var groupcard_size = handcards.stFixedCards.length;
                var allpenggangcards = handcards.stFixedCards;
                for (var j = 0; j < groupcard_size; j++) {
                    var cardData = allpenggangcards[j].CardData;
                    var state = allpenggangcards[j].state;
                    var LaiziNum = allpenggangcards[j].LaiziNum;
                    var OpCards = allpenggangcards[j].OpCards;
                    var type = PengType.Peng_Peng;
                    if ((state & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                        type = PengType.Peng_Peng;
                    }
                    else if ((state & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                        type = PengType.Peng_AnKang;
                    }
                    else if ((state & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI) {
                        type = PengType.Chi_L;
                    }
                    else if ((state & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI) {
                        type = PengType.Chi_M;
                    }
                    else if ((state & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                        type = PengType.Chi_R;
                    }
                    else {
                        type = PengType.Peng_Kang;
                    }

                    var card = new MJPeng();
                    card.setValue(type, 0, cardData, j, 0, false, state, OpCards);
                    card.setPosition(MJConfig.getPengKangCardPos(0, j));
                    card.setScale(MJConfig.getScale_new(0, CardType.Card_Peng, j, false));
                    layer.addChild(card, MJConfig.getPengKangCardOrder(0, j));
                }
            }
            return layer;
        },
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };
        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };

        MJConfig.getOutCardOrder = function (pos, index) {

            if (MJModel.mj_bg_use == 1) {
                if(pos == 0 || pos == 2){
                    index = index%26;
                }else {
                    if(MJModel.mj_paiban == "vertical"){
                        index = index%28;
                    }else {
                        index = index%30;
                    }
                }
                var order = null;
                if((pos == 1 || pos == 3) && MJModel.mj_paiban == "vertical"){
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                        ],
                    ];
                }else {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                        ],
                    ];
                }
                return order[pos][index];
            }else{
                if(MJModel.has_hu_layout == 1){
                    index = index%22;
                }else {
                    index = index%24;

                }
                var order = [
                    [
                        0,  1,  2,  3,  4,  5,
                        6,  7,  8,  9,  10, 11, 12, 13,
                        14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                    ],
                    [
                        23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        18, 19,20, 21, 22, 23,
                        10,11,12 , 13, 14, 15, 16, 17,
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                    ],
                ];
                return order[pos][index];
            }
        };

        MJConfig.getOutCardPos =function (pos, index) {
            if (MJModel.mj_bg_use == 1) {
                if(pos == 0 || pos == 2){
                    index = index%26;
                }else {
                    if(MJModel.mj_paiban == "vertical"){
                        index = index%28;
                    }else {
                        index = index%30;
                    }
                }
            } else {
                if(MJModel.has_hu_layout == 1){
                    index = index%22;
                }else {
                    index = index%24;
                }
            }
            if((pos == 1 || pos == 3) && MJModel.mj_bg_use == 1 && MJModel.mj_paiban == "vertical"){
                return this.getWorldPosition("out_v_" + pos, "o_" + index);
            }else {
                return this.getWorldPosition("out_" + pos, "o_" + index);
            }
        };

        MJConfig. getHuCardOrder = function (pos, index) {
            index = index%12;
            if(MJModel.mj_bg_use == 0){
                var order = [
                    [
                        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
                    ],
                    [
                        1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
                    ],
                    [
                        1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
                    ],
                    [
                        11, 10, 9, 8, 15, 14, 13, 12, 19, 18, 17, 16,
                    ],
                ];
                return order[pos][index];
            }else {
                var order = [
                    [
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    ],
                    [
                        1011, 1010, 1009, 1008, 1007, 1006, 1005, 1004, 1003, 1002, 1001, 1000,
                    ],
                    [
                        1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
                    ],
                    [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                    ],
                ];
                return order[pos][index];
            }

        };

        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
    },

    playBgSound: function () {
        Sound.getInstance().PlayBgSound(getResPath("nankang/sound/music_hall.mp3"));
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();

            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边

            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && false) {
            var packet = {"gameend":{"UserCard":[{"ChangeableCardsLen":13,"ChangeableCards":[1,1,2,2,3,4,4,5,5,6,6,7,17],"FixedCardsLen":0,"stFixedCards":[]},{"ChangeableCardsLen":10,"ChangeableCards":[17,18,18,19,19,20,21,21,33,34],"FixedCardsLen":1,"stFixedCards":[{"CardData":22,"state":1,"chairID":0,"OpCards":[]}]},{"ChangeableCardsLen":13,"ChangeableCards":[21,23,23,24,25,35,35,35,36,36,36,37,37],"FixedCardsLen":0,"stFixedCards":[]},{"ChangeableCardsLen":13,"ChangeableCards":[21,23,24,25,34,35,35,35,36,36,36,37,37],"FixedCardsLen":0,"stFixedCards":[]}],"Score":[0,-15,15,0],"EndState":0,"EndGangInfo":[{"Gang":[],"TotalGangScore":0},{"Gang":[],"TotalGangScore":0},{"Gang":[],"TotalGangScore":0},{"Gang":[],"TotalGangScore":0}],"faninfo":[{"chairid":0,"SpecialType":0,"FanNum":0,"addfan":[],"hucard":0,"DianPao":[]},{"chairid":1,"SpecialType":6,"FanNum":0,"addfan":[],"hucard":0,"DianPao":[]},{"chairid":2,"SpecialType":5,"FanNum":0,"addfan":[],"hucard":22,"DianPao":[]},{"chairid":3,"SpecialType":0,"FanNum":0,"addfan":[],"hucard":0,"DianPao":[]}],"money":[100000,99985,100015,100000]},"niao_card":[{"card":[]},{"card":[]},{"card":[41,37,38,39,38,36]},{"card":[]}]};
            this.handler_server_game_end_bc(packet);
        }

        if (tempCount == 5 && true) {
            //MJModel.seatid = 0;
            //MJModel.mj_style = 1;
            //MJModel.mj_card_lib_type = 1;
            //this._pkg_id = PackgName.xiantao;
            this._curLaizi = 0x41;

            //摊开手牌
            if (true) {
                var cardlist = [];
                for (var k = 1; k <= 14; k++) {
                    var v = 0x41;//Utils.Random(0, 2) * 16 + Utils.Random(1, 9);
                    cardlist.push(v);
                }
                this.room_Card.showEndCard(0, cardlist, cardlist[0], true);
                this.room_Card.showEndCard(1, cardlist, cardlist[0], false);
                this.room_Card.showEndCard(2, cardlist, cardlist[0], false);
                this.room_Card.showEndCard(3, cardlist, cardlist[0], false);
                return;
            }
            JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
            this.room_Info.setVisible(true);
            this.room_Info.showDirectionTip(0);
            this.room_Info.showTime(99);
            MJModel.canTouchCard = true;
            MJModel.seatid = 0;
            var cardlist = [];
            for (var k = 1; k <= 13; k++) {
                var v = 0x41;//Utils.Random(0, 2) * 16 + Utils.Random(1, 9);
                cardlist.push(v);
            }

            this.room_Card.initHandCard(0, [0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41]);
            this.room_Card.reflashHandCard(0, true);

            cardlist = [];
            for (var k = 1; k <= 1; k++) {
                var v = Utils.Random(0, 2) * 16 + Utils.Random(1, 9);
                cardlist.push(0);
            }

            this.room_Card.initHandCard(1, cardlist);
            this.room_Card.reflashHandCard(1, true);

            this.room_Card.initHandCard(2, cardlist);
            this.room_Card.reflashHandCard(2, true);

            this.room_Card.initHandCard(3, cardlist);
            this.room_Card.reflashHandCard(3, true);

            //this.room_Card.initMoCard(0, 1, false);
            //this.room_Card.initMoCard(1, 0, false);
            //this.room_Card.initMoCard(2, 0, false);
            //this.room_Card.initMoCard(3, 0, false);

            for (var i = 1; i < 4; i++) {
                this.room_Card.addPengCard(i, PengType.Peng_Peng, 1, 0, 0);
                this.room_Card.addPengCard(i, PengType.Peng_AnKang, 1, 0, 0);
                this.room_Card.addPengCard(i, PengType.Peng_Kang, 1, 0, 0);
                this.room_Card.addPengCard(i, PengType.Peng_Peng, 1, 0, 0);
            }

            for (var j = 0; j < 4; j++) {
                for (var i = 0; i < 14; i++) {
                    var v = 0x41;//Utils.Random(0, 2) * 16 + Utils.Random(1, 9);
                    this.room_Card.addOutCard(j, v);
                }
            }

            //for (var i = 0; i < 4; i++) {
            //    for (var j = 0; j < 12; j++) {
            //        var v = Utils.Random(0, 2) * 16 + Utils.Random(1, 9);
            //        this._addGangCard(i, v);
            //    }
            //}

            //this._initZhongMaCard([0, 0, 0, 0], [1, 2, 3, 4], true);
            //this._initZhongMaCard([1, 1, 1, 1], [1, 2, 3, 4], true);
            //this._initZhongMaCard([2, 2, 2, 2], [1, 2, 3, 4], true);
            //this._initZhongMaCard([3, 3, 3, 3], [1, 2, 3, 4], true);
            //
            //this._show_game_end_detail("");
        }

        if (tempCount == 5 && false) {
            var allPreCars = [];
            var allLaiZi = [];
            for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                var card = this.room_Card.hand_card[0][i];
                if (card.getValue() == 9) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }
            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, i, 12);
                    var allL = Math.abs(end_pos.x - begin_pos.x);
                    var time = allL / 1800;
                    card.runAction(cc.sequence(cc.delayTime(allDelay), cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                }
            }
        }

        if (tempCount % 5 == 0 && false) {
            var str = PlatformHelper.getGPSInfo();
            var json = JSON.parse(str);
            PlatformHelper.showToast("GPS:" + json.city);
        }

        if (tempCount % 5 == 0 && false) {
            var d = parseInt(tempCount / 5);
            var pos = 2;
            this.room_Tip.reset();
            if (d == 1) {
                this.room_Tip.showEffect(2, ActionType.TYPE_PENG, true);
            } else if (d == 2) {
                this.room_Tip.showEffect(2, ActionType.TYPE_ANGANG, true);
            } else if (d == 3) {
                this.room_Tip.showEffect(2, ActionType.TYPE_HU, false);
            } else if (d == 4) {
                //this.room_Tip.showEffect(2, ActionType.TYPE_HU, true);
                this._show_hu_effect(2, "zimo");
            } else if (d == 5) {
                this._show_xiao_effect(2, "piao");
            } else if (d == 6) {
                this._show_xiao_effect(2, "xiaochaotian");
            } else if (d == 7) {
                this._show_xiao_effect(2, "huitouxiao");
            } else if (d == 8) {
                this._show_xiao_effect(2, "mengxiao");
            } else if (d == 9) {
                this._show_xiao_effect(2, "dianxiao");
            } else if (d == 10) {
                this._show_xiao_effect(2, "dachaotian");
            } else if (d == 11) {
                this._show_hu_effect(2, "ruanmo");
            } else if (d == 12) {
                this._show_hu_effect(2, "heimo");
            } else if (d == 13) {
                this._show_hu_effect(2, "rechong");
            } else if (d == 14) {
                this._show_hu_effect(2, "zhuarechong");
            } else if (d == 15) {
                this._show_hu_effect(2, "gangshanghu");
            } else if (d == 16) {
                this._show_hu_effect(2, "qianggang");
            }
        }
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.nankangbaohu.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.nankangbaohu.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }

        this._super(cmd, jpacket, canDelay, svrid);

        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }

        if (cmd == CMD.SERVER_LAIZI_BC) {
            this._handler_server_laizi_bc(jpacket, canDelay);
        }
        //跟庄
        if (cmd == CMD.SERVER_GET_CHAOZHUANG) {
            this._handler_server_copyBanker_bc(jpacket, canDelay);
        }

    },

    handler_server_update_info_uc: function (data, canDelay) {
    },

    _show_hu_effect: function (pos, name) {
        var effect_name = "";
        if (name == "gangshanghu") {
            effect_name = "effects_mjxgskh";
            ccs.armatureDataManager.addArmatureFileInfo(getResPath("nankang/effect/gangshanghu/effects_mjxgskh.ExportJson"));
        } else if (name == "qianggang") {
            effect_name = "effects_mjxqianggang";
            ccs.armatureDataManager.addArmatureFileInfo(getResPath("nankang/effect/qianggang/effects_mjxqianggang.ExportJson"));
        }
        try {
            if (effect_name != "") {
                var armature = new ccs.Armature(effect_name);
                if (armature != null) {
                    animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0, -1, 0);

                            var begin = MJConfig.getOperatorTipPos(pos);
                            armature.setPosition(begin);
                            armature.setName("hu_effect");
                            this.room_Tip.addChild(armature, 10000);
                        }
                    }
                    //armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            }
        } catch (e) {

        }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "南康爆胡";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["胡牌次数", "坐庄次数", "点炮次数"];
            arrcount = [recoreInfo.hu_num, recoreInfo.banker_num, recoreInfo.Ex1];

            if (player && player.uid != -1 && player.uid != 0) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    _showNiaoEffect: function (poss, cardList, canDelay) {
        if (canDelay == false) {
            for (var i = 0; i < poss.length; i++) {
                this._initZhongNiaoCard(poss[i], cardList);
            }
            return;
        }
        this.room_Tip.reset();
        var self = this;
        //结束亮马牌动画
        var size = cc.director.getWinSize();
        var dx = 100;
        var bg = new cc.Sprite(getResPath("nankang/flag/niao_bg2.png"));
        bg.setPosition(size.width / 2, size.height / 2);
        bg.setScaleY(0.7);
        this.room_Card.addChild(bg, 10000);
        bg.runAction(cc.sequence(cc.delayTime(1.1 + 0), cc.removeSelf()));

        var bg = new cc.Sprite(getResPath("nankang/flag/niao_effect.png"));
        bg.setPosition(size.width / 2, size.height / 2 + 100);
        this.room_Card.addChild(bg, 10000);
        bg.runAction(cc.sequence(cc.delayTime(1.1 + 0), cc.removeSelf()));

        var bx = size.width / 2 - dx * (cardList.length - 1) / 2;
        for (var i = 0; i < poss.length; i++) {
            var pos = poss[i];
            for (var j = 0; j < cardList.length; j++) {
                var card = new MJCard();
                card.setValue(cardList[j], 0, CardType.Card_Hand, 0);
                card.setPosition(bx + dx * j, size.height / 2);
                self.room_Card.addChild(card, 10000 + cardList.length);
                var p = MJConfig.getHuCardPos(pos, j);
                var s = MJConfig.getScale_new(pos, CardType.Card_Hu, j);
                card.runAction(cc.sequence(cc.delayTime(1 + 0), cc.spawn(cc.moveTo(0.17, p), cc.scaleTo(0.17, s)), cc.removeSelf()));

                if (parseInt(cardList[j] % 16) == 1 || parseInt(cardList[j] % 16) == 5 || parseInt(cardList[j] % 16) == 9 || cardList[j] == 0x41) {
                    card.setStoreColor(cc.color(255, 249, 137));
                }
            }
        }

        var callBack2 = cc.callFunc(function () {
            for (var i = 0; i < poss.length; i++) {
                self._initZhongNiaoCard(poss[i], cardList);
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1.17), callBack2));
    },
    _initZhongNiaoCard: function (pos, cardList) {
        for (var i = 0; i < cardList.length; i++) {
            var card = this.room_Card.addHuCard(pos,cardList[i]);
            if (parseInt(cardList[i] % 16) == 1 || parseInt(cardList[i] % 16) == 5 || parseInt(cardList[i] % 16) == 9 || cardList[i] == 0x41){
                card.setStoreColor(cc.color(255, 249, 137));
            }
        }
    },
    handler_server_game_start_bc: function (data, canDelay) {
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._super(data, canDelay);
    },

    gameending: false,
    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this.gameending = true;
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            var state = ackGameEnd.EndState;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();


            var poss = [];
            for (var i = 0; i < ackGameEnd.faninfo.length; i++) {
                var specialType = ackGameEnd.faninfo[i].SpecialType;
                switch (specialType) {
                    case HuType.HU_ZIMO:
                    case HuType.HU_PAOHU:
                    case HuType.HU_QIANG_GANG:
                    case HuType.HU_GANG_SHANG_HUA:
                        poss.push(MJModel.getPosBySeatid(i));//转化位置
                        break;
                }
            }

            var niaos = [];//使用一维数组
            var has_niao = false;
            if (state != 1) {
                for (var i = 0; i < shanxiGameEnd.stLastFourCard.Card.length; i++) {
                    niaos.push(shanxiGameEnd.stLastFourCard.Card[i]);
                    has_niao = true;
                }
            }
            if (state == 1)has_niao = false;
            var showniaocard = cc.callFunc(function () {
                if (has_niao == false)return;
                Log(this, "lin=" + poss);
                self.room_Info.showCardNums(self.room_Info.curCardNums - niaos.length);
                for (var i = 0; i < niaos.length; i++) {
                    self.room_Card.removePublicCardByNums(1, false);
                }
                self._showNiaoEffect(poss, niaos, canDelay);
                //self._showNiaoEffect([0, 1], [0x01, 0x02, 0x03, 0x04, 0x05], canDelay);
            });


            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_NaKang();
                    result.updateContentView(shanxiGameEnd,niaos);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.gameending = false;
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(cc.delayTime(0.5), showniaocard,callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }
            this.runAction(cc.sequence(cc.delayTime(0), callback0,cc.delayTime(0.5), showniaocard, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(1.5), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    _removeAllScoreEffect: function () {
        try {
            while (this.getChildByName("hubeimj_score_effect")) {
                this.removeChildByName("hubeimj_score_effect");
            }
        } catch (e) {

        }
    },
    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.nankangbaohu.AckLaiziCard", data);
        var self = this;
        var curLaizi = packet.laizicard;
        var curLaizipi = packet.card;
        this._setLaizi(curLaizi,curLaizipi, canDelay ? true : false);
        try {
            var publiccard = this.room_Card.getNextPublicCard(false);
            publiccard.setVisible(false);
        } catch (e) {

        }
        if (canDelay == false || true) {
            this._showHandcardFlag(false);
            var mo_card = null;
            if (this.room_Card.isDuoPai(0)) {
                mo_card = this.room_Card.hand_card[0][this.room_Card.hand_card[0].length - 1];
                this.room_Card.hand_card[0].splice(this.room_Card.hand_card[0].length - 1, 1);
            }
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            if (mo_card) {
                mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                self.room_Card.hand_card[0].push(mo_card);
            }
            return;
        }
        MJModel.isEnterWait = true;

        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);
            var allPreCars = [];
            var allLaiZi = [];
            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - 1 - i, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);

                    //if (MJModel.outCardEffect_style == 0 || true) {
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    //    card.runAction(cc.sequence(cc.delayTime(allDelay), cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    //} else {
                    //    card.runAction(cc.sequence(cc.moveTo(0.0, cc.p(end_pos.x + 0, end_pos.y + 100)), cc.moveTo(0.3, end_pos)));
                    //}
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    //card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    if (mo_card) {
                        mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                        self.room_Card.hand_card[0].push(mo_card);
                    }
                });
                self.runAction(cc.sequence(cc.delayTime(allLaiZi.length * 1), callback));
            } else {
                MJModel.isEnterWait = false;
            }
        });
        this.runAction(cc.sequence(cc.delayTime(2.5), move_end));
    },
    _handler_server_copyBanker_bc:function(data, canDelay){
        var ackGameEnd = parsePacket("proto.game.nankangbaohu.AckCopyBankerReack", data);
        var scores = ackGameEnd.fen_shu;
        for (var j = 0; j < scores.length; j++) {
            var seadid = j;
            var pos = MJModel.getPosBySeatid(j);
            var s = scores[seadid];
            var myPlayer = MJModel.players[seadid];
            if (myPlayer) {
                myPlayer.money += s;
                this.players[pos].updateInfo();
                if (canDelay) this.showScoreEffect(pos, s);
            }
        }

    },
    _setGameScore: function () {
        this.removeChildByName("numberScore");
        this.removeChildByName("qizhuangScore");

        var size = cc.director.getWinSize();

        var p = this._gameType_sp.getPosition();
        var buf = "" + Math.abs(MJModel.base_money);
        var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ/difen/number.png"), 192/12, 21, '.');
        //var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ2/info2/time_num_2.png"), 20 , 30, '0');
        numberScore.setName("numberScore");
        numberScore.setAnchorPoint(cc.p(0.0, 0.0));
        this.addChild(numberScore);

        var qizhuangScore = new cc.Sprite(getResPath("RoomMJ/difen/icon.png"));
        qizhuangScore.setAnchorPoint(cc.p(0.0, 0.0));
        qizhuangScore.setName("qizhuangScore");
        this.addChild(qizhuangScore);

        //pos at icon right
        p.x += this._gameType_sp.getContentSize().width / 2;
        //p.y -= this._gameType_sp.getContentSize().height;
        numberScore.setPosition(cc.p(p.x, p.y + 2-40));
        qizhuangScore.setPosition(cc.p(numberScore.getPositionX() + numberScore.getContentSize().width, p.y - 2 -40));
    },

    _setGameType: function () {
        if (this._gameType_sp == null) {
            var pkg_id = 1;
            if (this._pkg_id == 2239 || this._pkg_id == 2162 ) {
                pkg_id = 2;
            }
            else if (this._pkg_id == 2238 || this._pkg_id == 2163 ) {
                pkg_id = 3;
            }
            var play_id = [];

            if (MJModel.RoomConfigID.indexOf(1146001) != -1) {
                play_id.push("爆胡2倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146002) != -1) {
                play_id.push("七对2倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146003) != -1) {
                play_id.push("可胡抢胡");
            }
            if (MJModel.RoomConfigID.indexOf(1146004) != -1) {
                play_id.push("清一色2倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146005) != -1) {
                play_id.push("豪七对4倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146006) != -1) {
                play_id.push("清色爆胡4倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146007) != -1) {
                play_id.push("字一色8倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146008) != -1) {
                play_id.push("杠爆全包");
            }
            if (MJModel.RoomConfigID.indexOf(1146009) != -1) {
                play_id.push("跟庄");
            }
            if (MJModel.RoomConfigID.indexOf(1146010) != -1) {
                play_id.push("<10张不能碰");
            }
            if (MJModel.RoomConfigID.indexOf(1146011) != -1) {
                play_id.push("无鬼加倍");
            }
            if (MJModel.RoomConfigID.indexOf(1146013) != -1) {
                play_id.push("抢杠胡加倍");
            }
            if (MJModel.RoomConfigID.indexOf(1147001) != -1) {
                play_id.push("无鬼");
            }else if(MJModel.RoomConfigID.indexOf(1147002) != -1){
                play_id.push("翻鬼");
            }else if(MJModel.RoomConfigID.indexOf(1147003) != -1){
                play_id.push("白板当鬼");
            }
            if (MJModel.RoomConfigID.indexOf(1148001) != -1) {
                play_id.push("2马");
            }else if(MJModel.RoomConfigID.indexOf(1148002) != -1){
                play_id.push("4马");
            }
            else if(MJModel.RoomConfigID.indexOf(1148003) != -1){
                play_id.push("6马");
            }
            else if(MJModel.RoomConfigID.indexOf(1148004) != -1) {
                play_id.push("8马");
            } else{
                play_id.push("10马");
            }


            var size = cc.director.getWinSize();
            //this._gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("nankang/flag/pkgid%1.png"), pkg_id));
            //this._gameType_sp.setAnchorPoint(cc.p(0.5, 0));
            //this._gameType_sp.setPosition(cc.p(size.width / 2, 490));
            //this.addChild(this._gameType_sp);
            this._gameType_sp = MJModel.mj_table.mjType;

            var allL = 0;
            var allPlayId = [];
            for (var i = 0; i < play_id.length; i++) {
                var str = play_id[i];
                var _gameType_sp = new cc.LabelTTF(str, "Thonburi", 18);//new cc.Sprite(__String.createWithFormat(getResPath("baoxing/flag/playid%1.png"), play_id[i]));
                _gameType_sp.setColor(cc.color(15, 40, 42));
                _gameType_sp.setAnchorPoint(cc.p(0.5, 0));
                this.addChild(_gameType_sp);
                allL += _gameType_sp.getContentSize().width + 5;
                allPlayId.push(_gameType_sp);
            }

            var curP = 0;
            var curY = this._gameType_sp.getPositionY() + this._gameType_sp.getContentSize().height+5;
            for (var i = 0; i < play_id.length; i++) {
                var _gameType_sp = allPlayId[i];
                var curL = allL;
                if (curL > 550)curL = 550;
                _gameType_sp.setPosition(cc.p(size.width / 2 - curL / 2 + curP + _gameType_sp.getContentSize().width / 2, curY));
                curP += _gameType_sp.getContentSize().width + 4;
                if (curP >= 550){
                    curP = 0;
                    curY -= 20;
                    allL = allL - 550;
                }
            }
        }
        this._setFastChat();
    },
    fastChat3: ["不好意思打错了牌", "快点，吃饭了","我要离开一下", "你的牌打的太好了", "朋友，我尽力了","作为失败的典型，你成功了"],
    _setFastChat: function () {
        var chatList = [];
        chatList = this.fastChat3;
        MJModel.mj_fastChat = this.fastChat3;
        var self = this;
        Utils.getFastChatSound = function (chat, sex) {
            for (var i = 0; i < chatList.length; i++) {
                if (chatList[i] == chat) {
                    return getResPath(__String.createWithFormat("nankang/sound/fast/%1/%2.mp3", sex == SEX_ID.SEX_MAN ? "m" : "w", i));
                }
            }
            return "";
        };
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("nankang/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }
    },
    updateLaiziPos: function () {
        if (this._curLaizi_bg != null) {
            var card = this._curLaizi_bg.getChildByName("card");
            if (MJModel.mj_bg_use == 0) {
                this._curLaizi_bg.setPosition(cc.p(70, 380+180));
                if (card)card.setScale(1);
            } else {
                this._curLaizi_bg.setPosition(cc.p(70, 380 + 180));
                if (card)card.setScale(0.9);
            }
        }
    },
    _setLaizi: function (laizi, laizipi,gamestart) {
        if((MJModel.RoomConfigID.indexOf(1147003) != -1) ){
            //白板当鬼特殊处理
            this._curLaizi = laizi;
        }
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255 ||
            laizipi == null || laizipi == undefined || laizipi == -1 || laizipi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("nankang/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(70, 380+180));
            this.addChild(this._curLaizi_bg, 200);

            this.updateLaiziPos();
        }
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;
        var size = cc.director.getWinSize();
        if (this._curLaizipi > 0 && this._curLaizipi != 255) {
            var dy = 43;
            laizi_tip = new cc.LabelTTF("赖子皮", "Arial", 20);
            laizi_tip.setColor(cc.color(87, 207, 93));
            if (laizi_tip) {
                laizi_tip.setPosition(cc.p(40, dy));
                this._curLaizi_bg.addChild(laizi_tip);
            }

            var card = new MJCard();
            card.setValue(laizipi, 0, CardType.Card_Out, 0);
            card.setPosition(cc.p(100, dy));
            card.setScale(MJModel.mj_bg_use == 0 ? 1 : 0.9);
            card.setName("card");
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
            if (gamestart) {
                var dl = 0;
                laizi_tip.setVisible(false);
                laizi_tip.runAction(cc.sequence(cc.delayTime(1.3 + dl), cc.show()));
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect("赖子皮");
                });
                card.setPosition(cc.p(size.width / 2 - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, size.height / 2 - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(1.0), cc.spawn(cc.moveTo(0.17, cc.p(100, dy)), cc.scaleTo(0.17, MJModel.mj_bg_use == 0 ? 1 : 0.9))));
            }
        }
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },
    _checkAddCardFlag: function (card) {
        try {
            if (card.type == CardType.Card_Public) {
                return;
            }

            if (card.getValue() == this._curLaizi) {

                card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");

                var m_size = p.getContentSize();
                if (MJModel.mj_bg_use == 1){
                    var flag = null;
                    flag = new cc.Sprite(getResPath("nankang/flag/lai_flag2.png"));
                    if (flag) {
                        flag.setPosition(cc.p(0, m_size.height));
                        flag.setAnchorPoint(cc.p(0, 1));
                        flag.setName("laizi_flag");
                        p.addChild(flag);
                        this._flagDirection(card.pos, flag, m_size);
                        if (card.type == CardType.Card_End) {
                            if (card.pos == 1 || card.pos == 3) {
                                flag.setScale(0.5);
                            } else {
                                flag.setScale(0.8);
                            }
                        }

                        if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                            flag.setScale(0.6);
                            if (card.pos == 0) {
                                flag.setScale(0.7);
                            } else {
                                flag.setScale(0.6);
                            }
                        }
                        if (card.type == CardType.Card_Peng) {
                            flag.setScale(0.6);
                            if (card.pos == 0) {
                                flag.setScale(0.7);
                            } else {
                                flag.setScale(0.6);
                            }
                        }
                    }
                }else{
                    var flagName = this._getFlagName(card.pos, card.type);
                    if (flagName == "") {
                        return;
                    }
                    var uiJson = ccs.load(getResPath("nankang/cardFlag/mjFlag.json"));
                    var flag = uiJson.node;
                    flag.setName("laizi_flag");
                    var dy = 0;
                    if (card.pos == 0 && card.type == CardType.Card_End)dy = 5;
                    flag.setPosition(cc.p(m_size.width / 2, m_size.height / 2 + dy));
                    p.addChild(flag);
                    flag.getChildByName("laizi").getChildByName(flagName).setVisible(true);
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },
    //每个方向角标对应
    _getFlagName: function (pos, type) {
        if (type == CardType.Card_Out || type == CardType.Card_Hu) {
            return "out" + pos;
        }
        if (type == CardType.Card_Hand) {
            return "h" + pos;
        }
        if (type == CardType.Card_End) {
            return "end" + pos;
        }
        return "";
    },
    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (pos == 1) {
            flag.setPosition(cc.p(0, 17));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 17));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },
    resetGame: function (allClean) {
        this._super(allClean);
        this._setLaizi(-1, -1, -1);
        this._removeAllScoreEffect();

    },
    handler_server_scene_info_uc: function (Nankangscene, canDelay) {
        var ackGameFree = Nankangscene.GameSence;
        if(!ackGameFree)return;
        var sceneStatus = ackGameFree.SceneStatus;
        MJModel.base_money =ackGameFree.basescore;
        MJModel.RoomConfigID = ackGameFree.RoomConfigID;

        if (ackGameFree.RoomConfigID.indexOf(2000001) != -1)MJModel.changMode = 1;
        if (ackGameFree.RoomConfigID.indexOf(2000003) != -1)MJModel.changMode = 3;

        var laizipi = Nankangscene.card;
        var laizicard = Nankangscene.laizicard;
        if (Nankangscene) {
            if (sceneStatus != 0) {
                this._setLaizi(laizicard,laizipi);//还原赖子
            }
        }

        //if (sceneStatus != 0) {
        //    this._setLaizi(Nankangscene.laizicard, Nankangscene.laizipicard, -1);//还原赖子
        //    if (Nankangscene.beishu) {
        //        var scores = [0, 0, 0, 0];
        //        for (var i = 0; i < Nankangscene.beishu.length; i++) {
        //            scores[i] = Nankangscene.beishu[i];
        //        }
        //
        //        this._setAllBeiShu(scores);
        //    }
        //    if (Nankangscene.ChiNoOutCards)this._self_cannot_out_cards = Nankangscene.ChiNoOutCards;
        //}
        this._setGameType();
        this._super(ackGameFree, canDelay);
        this._setGameScore();
    },
    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("nankang/sound/chupai/%1/%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", Utils.toHex2(card)));
        } else {
            this._super(sex, card);
        }
    },

    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua"){
            var needcheck = false;
            if ((OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                effect = "angang";
            }
            else if ((OpType & ActionType.TYPE_ZHIGANG) == ActionType.TYPE_ZHIGANG) {
                effect = "gang";
                needcheck = true;
            }
            else if ((OpType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG) {
                effect = "gang";
            }
            else if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                var zimo = this.room_Card.isDuoPai(pos);
                effect = "hu";
                if (zimo) {
                    effect = "zimo";
                }
            } else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                effect = "peng";
                needcheck = true;
            } else if ((OpType & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI || (OpType & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI || (OpType & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                effect = "chi";
                needcheck = true;
            }
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("nankang/sound/operator/%1/%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", effect));
        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },

    handler_server_up_table_bc: function (data, canDelay) {
        this._super(data, canDelay);
        if (MJModel.waitUpdate == false) Sound.getInstance().playEffect(getResPath("RoomMJ/sound/enter.mp3"));
    },
    //自动准备
    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.actionCallBack("ready");
            } else {
                this.actionCallBack("ready");
            }
        }
    },
});
//var Nankang_jiesuan = cc.Layer.extend({
//    rootNode: null,
//    continueClick: function () {
//        if (MJModel.isOnVideo)return;
//        sendReady();
//
//        this.removeFromParent();
//        MJModel.state = MJ_STATUS.MJ_GAME_FREE;
//    },
//    addBtnCallback: function (btn) {
//        try {
//            btn.addClickEventListener(function (sender, evt) {
//                this.btnCallback(btn);
//            }.bind(this));
//        } catch (e) {
//
//        }
//    },
//    btnCallback: function (btn) {
//        var name = btn.getName();
//        if (name == "xiangqing") {
//            setNodeVis(GetChild(this.rootNode, "jiesuan2"), true);
//            setNodeVis(GetChild(this.rootNode, "jiesuan1"), false);
//        }
//        if (name == "continue") {
//            this.continueClick();
//        }
//        if (name == "close") {
//            setNodeVis(GetChild(this.rootNode, "jiesuan2"), false);
//            setNodeVis(GetChild(this.rootNode, "jiesuan1"), true);
//        }
//    },
//
//    init: function (ackGameEnd,niaos) {
//        this._isJieSuan = true;
//        var state = ackGameEnd.gameend.EndState;
//        var size = cc.director.getWinSize();
//        var uiJson = ccs.load(getResPath("nankang/jiesuan.json"));
//        var uiNode = uiJson.node;
//        uiNode.setPosition(size.width / 2, size.height / 2)
//        this.addChild(uiNode);
//        this.rootNode = uiNode;
//        var myWin = 0;
//        var maxScore = 0;
//        var finalScore = [0, 0, 0, 0];
//        for (var i = 0; i < ackGameEnd.gameend.Score.length; i++) {
//            finalScore[i] = ackGameEnd.gameend.Score[i];
//            if (MJModel.isMyPlayer(i))myWin = finalScore[i];
//            if (finalScore[i] > maxScore) {
//                maxScore = finalScore[i];
//            }
//        }
//
//        //计算鸟牌个数
//        //var zhongNiaoNum = 0;
//        //for (var i = 0; i < niaos.length; i++) {
//        //    if (parseInt(niaos[i] % 16) == 1 || parseInt(niaos[i] % 16) == 5 || parseInt(niaos[i] % 16) == 9 || niaos[i] == 0x41) {
//        //        zhongNiaoNum++;
//        //    }
//        //}
//
//        var huType = ["", "", "", ""];
//        var zongfan = [0, 0, 0, 0];
//        var huCards = [0, 0, 0, 0];
//        var jiesuaTips = ["", "", "", ""];
//        var poss = [];
//        var isZimo = false;
//        for (var i = 0; i < ackGameEnd.gameend.faninfo.length; i++) {
//            var specialType = ackGameEnd.gameend.faninfo[i].SpecialType;
//            huCards[i] = ackGameEnd.gameend.faninfo[i].hucard;
//            switch (specialType) {
//                case HuType.HU_ZIMO:
//                case HuType.HU_PAOHU:
//                case HuType.HU_QIANG_GANG:
//                case HuType.HU_GANG_SHANG_HUA:
//                case HuType.HU_DIANPAO:
//                    for (var j = 0; j < ackGameEnd.gameend.faninfo[i].addfan.length; j++) {
//                        var add_fan = ackGameEnd.gameend.faninfo[i].addfan[j];
//                        var add_type = add_fan.AddType;
//                        var add_value = add_fan.AddNum;
//                        if (AddFanTypeArray.indexOf(add_type) != -1) {
//                            huType[i] += AddFanNameArray[AddFanTypeArray.indexOf(add_type)] + " ";
//                            zongfan[i] += add_value;
//                        }
//                    }
//                    //if (specialType == HuType.HU_ZIMO) {
//                    //    jiesuaTips[i] = "zimo";
//                    //    isZimo = true;
//                    //} else if (specialType == HuType.HU_PAOHU) {
//                    //    jiesuaTips[i] = "jiepao";
//                    //} else if (specialType == HuType.HU_DIANPAO) {
//                    //    jiesuaTips[i] = "fangpao";
//                    //}
//
//                    //if (huType[i] != "") {
//                    //    huType[i] += "中马" + zhongNiaoNum + "个 "
//                    //}
//                    //if (huType[i] != "" && jiesuaTips[i] == "") {
//                    //    huType[i] += "hupai"
//                    //}
//                    poss.push(MJModel.getPosBySeatid(i));//转化位置
//                    break;
//            }
//
//            //var peisha = ackGameEnd.peisha;
//            //if (peisha[i] != 0) {
//            //    huType[i] += "陪杀";
//            //}
//        }
//
//        //if (isZimo) {
//        //    for (var i = 0; i < huType.length; i++) {
//        //        if (huType[i] == "陪杀") {
//        //            huType[i] = "全包";
//        //        }
//        //    }
//        //}
//        if (state == 1) {
//            //huType = ["流局", "流局", "流局", "流局"];
//        }
//        var count = 0;
//        for (var i = 0; i < 4; i++) {
//            uiNode.getChildByName("jiesuan2").getChildByName("item" + i).removeAllChildren();
//        }
//        for (var i = 0; i < ackGameEnd.gameend.Score.length; i++) {
//            var seatid = i;
//            var player = MJModel.players[seatid];
//            var item_node = uiNode.getChildByName("jiesuan2").getChildByName("item" + count);
//            var item = this.addItem(player.name, player.avatar, ackGameEnd.gameend.UserCard, huType, zongfan, finalScore, seatid, maxScore, huCards,niaos, jiesuaTips);
//            item_node.addChild(item, -10);
//            count++;
//        }
//
//        setNodeVis(GetChild(uiNode, "jiesuan1", "win"), myWin > 0);
//        setNodeVis(GetChild(uiNode, "jiesuan1", "lose"), myWin < 0);
//
//        setNodeVis(GetChild(uiNode, "jiesuan2", "win"), myWin > 0);
//        setNodeVis(GetChild(uiNode, "jiesuan2", "ping"), myWin == 0);
//        setNodeVis(GetChild(uiNode, "jiesuan2", "lose"), myWin < 0);
//
//
//        if (MJModel.isOnVideo) {
//            setNodeVis(GetChild(uiNode, "jiesuan2"), true);
//            setNodeVis(GetChild(uiNode, "jiesuan1"), false);
//        } else {
//            setNodeVis(GetChild(uiNode, "jiesuan2"), true);
//            setNodeVis(GetChild(uiNode, "jiesuan1"), false);
//        }
//        this.addBtnCallback(GetChild(uiNode, "jiesuan1", "xiangqing"));
//        this.addBtnCallback(GetChild(uiNode, "jiesuan1", "continue"));
//        this.addBtnCallback(GetChild(uiNode, "jiesuan2", "continue"));
//        this.addBtnCallback(GetChild(uiNode, "jiesuan2", "close"));
//        GetChild(uiNode, "jiesuan2", "close").setVisible(false);
//
//        var difen = "底分：" + MJModel.base_money;
//        uiNode.getChildByName("jiesuan2").getChildByName("difen").ignoreContentAdaptWithSize(true);
//        uiNode.getChildByName("jiesuan2").getChildByName("difen").setString(difen);
//
//        uiNode.getChildByName("jiesuan2").getChildByName("piaofen").ignoreContentAdaptWithSize(true);
//        uiNode.getChildByName("jiesuan2").getChildByName("piaofen").setString("");
//    },
//
//    addItem: function (name, avatar, handcards, huType, zongfan, finalScore, seatid, maxScore, huCards,niaos,jiesuaTips) {
//        var uiJson = ccs.load(getResPath("nankang/jiesuan_item.json"));
//        var uiNode = uiJson.node;
//        uiNode.getChildByName("name").setString(Utils.parseName(4, name));
//        uiNode.getChildByName("name").ignoreContentAdaptWithSize(true);
//
//        var m_pAvatar = Utils.createCircleAvatar(avatar, "Avatars/user4_unlogin.png", getResPath("nankang/jiesuan/headBg.png"), cc.size(70, 70));
//        uiNode.getChildByName("avatar").addChild(m_pAvatar);
//
//        uiNode.getChildByName("banker").setVisible(MJModel.banker_seatid == seatid);
//
//        uiNode.getChildByName("lose").setString(":" + finalScore[seatid]);
//        uiNode.getChildByName("lose").setVisible(finalScore[seatid] < 0);
//        uiNode.getChildByName("lose").ignoreContentAdaptWithSize(true);
//
//        uiNode.getChildByName("win").setString(":" + finalScore[seatid]);
//        uiNode.getChildByName("win").setVisible(finalScore[seatid] > 0);
//        uiNode.getChildByName("win").ignoreContentAdaptWithSize(true);
//
//        uiNode.getChildByName("hu").ignoreContentAdaptWithSize(true);
//        uiNode.getChildByName("hu").setString(huType[seatid]);
//
//        if (huCards[seatid] != 0) {
//            uiNode.getChildByName("hupai_tip").setVisible(true);
//        } else {
//            uiNode.getChildByName("hupai_tip").setVisible(false);
//        }
//
//        //添加提示
//        //var jiesuan_tip = cc.sprite("");
//        var jiesuan_tip_node = uiNode.getChildByName("jiesuan_tip");
//        jiesuan_tip_node.setVisible(false);
//
//        if (jiesuaTips[seatid] == "hupai") {
//            name = "nankang/flag/jiesuan_hupai.png";
//        } else if (jiesuaTips[seatid] == "jiepao") {
//            name = "nankang/flag/jiesuan_jiepao.png";
//        } else if (jiesuaTips[seatid] == "fangpao") {
//            name = "nankang/flag/jiesuan_fangpao.png";
//        } else if (jiesuaTips[seatid] == "zimo") {
//            name = "nankang/flag/jiesuan_zimo.png";
//        }
//
//        var jiesuan_tip = new cc.Sprite(getResPath(name));
//        jiesuan_tip.setPosition(jiesuan_tip_node.getPosition());
//        jiesuan_tip.setScale(jiesuan_tip_node.getScale());
//        jiesuan_tip_node.getParent().addChild(jiesuan_tip, 0);
//
//
//        uiNode.getChildByName("zongfan").setVisible(false);
//        //uiNode.getChildByName("zongfan").setVisible(zongfan[seatid] > 0);
//        //uiNode.getChildByName("zongfan").ignoreContentAdaptWithSize(true);
//        //uiNode.getChildByName("zongfan").setString("合计：" + zongfan[seatid] + "炮");
//
//        var facaiLayer = uiNode.getChildByName("facai");
//        facaiLayer.removeAllChildren();
//
//        var curX = 10;
//
//        var handcard = MJModel.mj_table.room_Card.createEndHandcardLayer(handcards[seatid], huCards[seatid],MJModel.getPosBySeatid(seatid));
//        handcard.setScale(0.6);
//        handcard.setAnchorPoint(cc.p(0, 0));
//        handcard.setPosition(curX, 0);
//        uiNode.getChildByName("handcard").addChild(handcard);
//
//        if (huType[seatid] != "" ) {
//            this.initNiao(uiNode, niaos);
//        }
//        return uiNode;
//    },
//    initNiao: function (node, niaos) {
//        var mapaiNode = node.getChildByName("mapai_1");
//        var pos = mapaiNode.getPosition();
//        for (var i = 0; i < niaos.length; i++) {
//            var nodePos = mapaiNode.getChildByName("m_0" + i);
//            var card = new MJCard();
//            card.setValue(niaos[i], 0, CardType.Card_End, 0);
//            card.setPosition(nodePos.getPosition());
//            card.setScale(nodePos.getScale() * 0.9);
//            mapaiNode.addChild(card, niaos.length - i);
//
//            //添加 中马标签
//            if (parseInt(niaos[i] % 16) == 1 || parseInt(niaos[i] % 16) == 5 || parseInt(niaos[i] % 16) == 9 || niaos[i] == 0x41) {
//                var tip = new cc.Sprite(getResPath("nankang/flag/jiesuan_ma.png"));
//                tip.setName("jiesuan_ma_tip");
//                tip.setScale(2.5);
//                tip.setPosition(card.tingpai_flag.getPosition());
//                card.addChild(tip, i);
//            }
//        }
//    }
//});

var MJResult_NaKang = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS,niaos) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        var self =this;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);
        this.niaos =[];
        this.niaos = niaos;
        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        //LayerBg.setContentSize(cc.size(size.width, size.height));
        //LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        self.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        //庄家加倍
        //if (MJModel.banker_seatid == seatid) {
        //    var str = "[庄家加倍]";
        //    if (MJModel.RoomConfigID.indexOf(1327005) != -1)str = "[庄家不加倍]";
        //    var banker = new cc.LabelTTF(str, "Arial", 20);
        //    banker.setColor(this.leftColor);
        //    banker.setAnchorPoint(cc.p(0, 0));
        //    banker.setPosition(cc.p(x, y + 10));
        //    layer.addChild(banker);
        //
        //    x += banker.getContentSize().width + 5;
        //}

        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("nankang/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20-10;
                    }
                }
            }
        }

        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            x += 5;
            var txt = "杠牌分+";
            if (gangScore < 0) {
                txt = "杠牌分";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 5;
        }
        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            x += 5;
            for (var i = 0; i < addfan.length; i++) {
                //if (AddFanType[addfan[i].AddType]) {
                    var fantypenum = AddFanNameArray[AddFanTypeArray.indexOf(addfan[i].AddType)];
                    var fanType = new cc.LabelTTF(fantypenum, "Arial", 20);

                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 5;
                }
            //}
        }
        //中马的牌
        var ma_x = 660;
        var fanInfo = this.ackGameEnd.faninfo[seatid];
        if (fanInfo.SpecialType == 1 || fanInfo.SpecialType == 2 || fanInfo.SpecialType == 5 ||fanInfo.SpecialType == 7) {
            ma_x += 10;
            var cards = this.niaos;
            var typeLabel = new cc.LabelTTF("马牌", "Arial", 20);
            typeLabel.setColor(this.leftColor);
            typeLabel.setAnchorPoint(cc.p(0, 0));
            typeLabel.setPosition(cc.p(ma_x, y + 10));
            typeLabel.setVisible(false);
            layer.addChild(typeLabel);
            ma_x += typeLabel.getContentSize().width;

            for (var k = 0; k < cards.length; k++) {
                var smallCard = null;
                var c = Utils.toHex2(cards[k]);
                smallCard = new cc.Sprite(__String.createWithFormat(getResPath("nankang/smallCard/%1.png"), c));
                if (smallCard != undefined) {
                    typeLabel.setVisible(true);
                    smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                    if(k ==5){
                        y = -40;
                        ma_x =710;
                    }
                    smallCard.setPosition(cc.p(ma_x, y));
                    layer.addChild(smallCard);
                }
                //添加 中马标签
                if (parseInt(cards[k] % 16) == 1 || parseInt(cards[k] % 16) == 5 || parseInt(cards[k] % 16) == 9 || cards[k] == 0x41) {
                    var tip = new cc.Sprite(getResPath("nankang/flag/jiesuan_ma.png"));
                    tip.setName("jiesuan_ma_tip");
                    tip.setScale(0.7);
                    tip.setAnchorPoint(cc.p(-1, -1.4));
                    smallCard.addChild(tip, i);
                }
                ma_x += 28;
            }
        }

        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "nankang/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "nankang/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "nankang/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "nankang/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "nankang/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "nankang/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "nankang/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setScale(0.6);
                typeSprite.setPosition(cc.p(startX -90, startY ));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "明杠";
                break;
            case 4:
                str = "明杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被明杠";
                break;
            case 32:
                str = "被明杠";
                break;
            case 64:
                str = "点杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});