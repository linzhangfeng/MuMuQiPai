loadProtoFile("proto/zhumadiangameproto.proto");
var PackgName = {
    linfen_er: 148,
    linfen_san: 149,//202  149，线上157
    linfen_si: 150,//202  150，线上158
};
var setSpriteFrame = function (label, fname) {
    if (label) {
        var sp_frame = cc.spriteFrameCache.getSpriteFrame(fname);
        if (sp_frame)label.setSpriteFrame(sp_frame);
    }
};

var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
};
var AddFanType = {
    LIN_FEN_FAN_TYPE_QUEYIMEN: 0,           //缺一门
    LIN_FEN_FAN_TYPE_QUELIANGMEN: 1,            //缺两门
    LIN_FEN_FAN_TYPE_CHENGYIZHANG: 2,           //成一张
    LIN_FEN_FAN_TYPE_GUJIANG: 3,                //孤将
    LIN_FEN_FAN_TYPE_ZHONGFABAI_1: 4,           //中发白(一副)
    LIN_FEN_FAN_TYPE_ZHONGFABAI_2: 5,           //中发白(二副)
    LIN_FEN_FAN_TYPE_ZHONGFABAI_3: 6,           //中发白(三副)
    LIN_FEN_FAN_TYPE_ZHONGFABAI_4: 7,           //中发白(四副)
    LIN_FEN_FAN_TYPE_SANFENG_1: 8,              //三风(一副)
    LIN_FEN_FAN_TYPE_SANFENG_2: 9,              //三风(二副)
    LIN_FEN_FAN_TYPE_SANFENG_3: 10,              //三风(三副)
    LIN_FEN_FAN_TYPE_SANFENG_4: 11,              //三风(四副)
    LIN_FEN_FAN_TYPE_MENQING: 12,                //门清

    LIN_FEN_FAN_TYPE_PINGHU: 13,                //平胡
    LIN_FEN_FAN_TYPE_QINGYISE: 14,              //清一色
    LIN_FEN_FAN_TYPE_HUNYISE: 15,               //混一色
    LIN_FEN_FAN_TYPE_YITIAOLONG: 16,            //一条龙
    LIN_FEN_FAN_TYPE_QIDUI: 17,                 //七对
    LIN_FEN_FAN_TYPE_HAOHUAQIDUI: 18,           //豪华七对
    LIN_FEN_FAN_TYPE_CHAOHAOHUAQIDUI: 19,       //超豪华七对
    LIN_FEN_FAN_TYPE_FEIFANQIDUI: 20,           //非凡七对
    LIN_FEN_FAN_TYPE_QINGLONG: 21,              //清龙
    LIN_FEN_FAN_TYPE_QINGQIDUI: 22,             //清七对
    LIN_FEN_FAN_TYPE_QINGHAOHUAQIDUI: 23,       //清豪华七对
    LIN_FEN_FAN_TYPE_QINGCHAOHAOHUAQIDUI: 24,   //清豪华七对
    LIN_FEN_FAN_TYPE_QINGFEIFANQIDUI: 25,       //清非凡七对
    LIN_FEN_FAN_TYPE_HUNQIDUI: 26,              //混七对
    LIN_FEN_FAN_TYPE_HUNHAOHUAQIDUI: 27,        //混豪华七对
    LIN_FEN_FAN_TYPE_HUNCHAOHAOHUAQIDUI: 28,    //混超豪华七对
    LIN_FEN_FAN_TYPE_HUNFEIFANQIDUI: 29,        //混非凡七对
};

var AddFanTypeArray = [
    AddFanType.LIN_FEN_FAN_TYPE_QUEYIMEN,           //缺一门
    AddFanType.LIN_FEN_FAN_TYPE_QUELIANGMEN,            //缺两门
    AddFanType.LIN_FEN_FAN_TYPE_CHENGYIZHANG,           //成一张
    AddFanType.LIN_FEN_FAN_TYPE_GUJIANG,                //孤将
    AddFanType.LIN_FEN_FAN_TYPE_ZHONGFABAI_1,           //中发白(一副)
    AddFanType.LIN_FEN_FAN_TYPE_ZHONGFABAI_2,           //中发白(二副)
    AddFanType.LIN_FEN_FAN_TYPE_ZHONGFABAI_3,           //中发白(三副)
    AddFanType.LIN_FEN_FAN_TYPE_ZHONGFABAI_4,           //中发白(四副)
    AddFanType.LIN_FEN_FAN_TYPE_SANFENG_1,              //三风(一副)
    AddFanType.LIN_FEN_FAN_TYPE_SANFENG_2,              //三风(二副)
    AddFanType.LIN_FEN_FAN_TYPE_SANFENG_3,              //三风(三副)
    AddFanType.LIN_FEN_FAN_TYPE_SANFENG_4,              //三风(四副)
    AddFanType.LIN_FEN_FAN_TYPE_MENQING,                //门清

    AddFanType.LIN_FEN_FAN_TYPE_PINGHU,                //平胡
    AddFanType.LIN_FEN_FAN_TYPE_QINGYISE,              //清一色
    AddFanType.LIN_FEN_FAN_TYPE_HUNYISE,               //混一色
    AddFanType.LIN_FEN_FAN_TYPE_YITIAOLONG,            //一条龙
    AddFanType.LIN_FEN_FAN_TYPE_QIDUI,                 //七对
    AddFanType.LIN_FEN_FAN_TYPE_HAOHUAQIDUI,           //豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_CHAOHAOHUAQIDUI,       //超豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_FEIFANQIDUI,           //非凡七对
    AddFanType.LIN_FEN_FAN_TYPE_QINGLONG,              //清龙
    AddFanType.LIN_FEN_FAN_TYPE_QINGQIDUI,             //清七对
    AddFanType.LIN_FEN_FAN_TYPE_QINGHAOHUAQIDUI,       //清豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_QINGCHAOHAOHUAQIDUI,   //清豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_QINGFEIFANQIDUI,       //清非凡七对
    AddFanType.LIN_FEN_FAN_TYPE_HUNQIDUI,              //混七对
    AddFanType.LIN_FEN_FAN_TYPE_HUNHAOHUAQIDUI,        //混豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_HUNCHAOHAOHUAQIDUI,    //混超豪华七对
    AddFanType.LIN_FEN_FAN_TYPE_HUNFEIFANQIDUI,        //混非凡七对
];

var AddFanNameArray = [
    "缺一门",
    "缺两门",
    "成一张",
    "孤将",
    "中发白(一副)",
    "中发白(二副)",
    "中发白(三副)",
    "中发白(四副)",
    "三风(一副)",
    "三风(二副)",
    "三风(三副)",
    "三风(四副)",
    "门清",
    "平胡",
    "清一色",
    "混一色",
    "一条龙",
    "七对",
    "豪华七对",
    "超豪华七对",
    "非凡七对",
    "清龙",
    "清七对",
    "清豪华七对",
    "清超豪华七对",
    "清非凡七对",
    "混七对",
    "混豪华七对",
    "混超豪华七对",
    "混非凡七对",
];
var PZHActionType =
{
    TYPE_BAOTING: 0x80000,//报听
};

var selfCMD = {
    SERVER_XIAPAO_END: 5086,   //
};

var MJTable_ZhuMaDian = MJTable.extend({
    tag: "MJTable_ZhuMaDian",
    isRecordShow: false,
    _pkg_id: 0,
    _curLaizi_bg: null,
    _curLaizi: -1,
    _fangZuoBi: false,
    ctor: function () {
        this._super();

        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }
    },
    initRoom: function () {
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 1440 || this._pkg_id == 1435) {
                MJModel.mj_roomType = 1;
            }

        } catch (e) {
            Log(this, e);
        }
        MJModel.mj_suport_fangyan = 1;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_gps_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.choiceMoreGang_stlye = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_table_view = "2d";
        MJModel.shareType = 1;
        var size = cc.director.getWinSize();
        this._init_extend();
        this._super();
        this._init_ui();
        var self = this;
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }

        //this.schedule(this.test, 1.0);
    },
    fastChat_m: ["白喷了，先赢了再说吧", "别耽误事了，赶紧出吧", "赶紧吧，别墨迹了", "你看这个人又断线了", "我有事不玩了哈", "我再输了裤衩都没了", "想不胡都难", "这啥牌呀，真差"],
    fastChat_w: ["白喷了，先赢了再说吧", "赶紧吧你，别耽误事了", "快点出牌吧", "你看这个人怎么又断线了", "我现在有点事，下次再玩吧", "再输我就不玩了", "你看这牌，想不胡都难", "今天这手气真臭"],
    _setFastChat: function () {
        var self = this;
        var player = MJModel.players[MJModel.seatid];
        if (player.sex == SEX_ID.SEX_MAN) {
            MJModel.mj_fastChat = this.fastChat_m;
        } else {
            MJModel.mj_fastChat = this.fastChat_w;
        }
    },
    _init_ui: function () {
        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("zhumadian/action/liang1.png"), getResPath("zhumadian/action/liang2.png"), "");
            this.room_Action.actions["ting"] = btn;
            btn.setName("ting");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.zhumadianmj.AckGameScene", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.zhumadianmj.AckGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_LAIZI_BC) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }

        if (cmd == CMD.SERVER_START_PIAO) {
            this._handler_server_start_piao(jpacket, canDelay);
            return;
        }

        if (cmd == CMD.SERVER_BROAD_PIAO) {
            this._handler_server_xiapao_ok_bc(jpacket, canDelay);
            return;
        }

        if (cmd == selfCMD.SERVER_XIAPAO_END) {
            this._handler_server_xiapao_end_bc(jpacket, canDelay);
            return;
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._setLaizi(-1, -1, -1);
        this._removeAllScoreEffect();
        if (allClean) {
            for (var i = 0; i < 4; i++) {
                this.players[i].removeChildByName("piao_tip");
            }
        }
        this.room_Tip.resetSelectMode();
    },

    _removeAllScoreEffect: function () {
        try {
            while (this.getChildByName("hubeimj_score_effect")) {
                this.removeChildByName("hubeimj_score_effect");
            }
        } catch (e) {

        }
    },

    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;
        var size = cc.director.getWinSize();

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("zhumadian/flag/laizi_bg3.png"));

            this._curLaizi_bg.setPosition(cc.p(size.width - 245, size.height - 70));
            this.addChild(this._curLaizi_bg, 200);
        }

        this.updateButtonPostion();

        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);
        this._curLaizi = laizi;
        if (this._curLaizi > 0) {
            var card = new MJCard();
            card.setValue(laizi, 0, CardType.Card_Out, 0);
            card.setPosition(cc.p(this._curLaizi_bg.getContentSize().width / 2, this._curLaizi_bg.getContentSize().height / 2));
            card.setScale(1);
            card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);

            if (gamestart) {
                var dl = 1;
                card.setVisible(false);
                var ppos = card.getPosition();
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect("赖子");
                });
                card.setPosition(cc.p(size.width / 2 - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, size.height / 2 - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(0.5), cc.spawn(cc.moveTo(0.17, ppos), cc.scaleTo(0.17, 1))));
            }
        }
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("zhumadian/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        var armature = new ccs.Armature("effects_mjhunancx");
        var animation = armature.getAnimation();
        if (animation) {
            if (typeof animation.playWithIndex === "function") {
                if (name == "赖子") {
                    animation.playWithIndex(1, -1, 0);
                }
                if (name == "赖根") {
                    animation.playWithIndex(2, -1, 0);
                }
                if (name == "朝天") {
                    animation.playWithIndex(3, -1, 0);
                }
                armature.setPosition(cc.p(size.width / 2, size.height / 2 + 150));
                this.addChild(armature, 100);
                armature.runAction(cc.sequence(cc.delayTime(0.5), cc.removeSelf()));
            }
        }
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("zhumadian/sound/laizi.mp3")));
        return armature;
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.zhumadianmj.AckLaizi", data);
        var self = this;
        var curLaizi = packet.laizi;
        this._setLaizi(curLaizi, -1, -1, canDelay ? true : false);

        if (canDelay == false) {
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }
        MJModel.isEnterWait = true;

        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);

            var mo_card = null;
            if (self.room_Card.isDuoPai(0)) {
                mo_card = self.room_Card.hand_card[0][self.room_Card.hand_card[0].length - 1];
                self.room_Card.hand_card[0].splice(self.room_Card.hand_card[0].length - 1, 1);
            }

            var allPreCars = [];
            var allLaiZi = [];
            var dd = 0;

            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - 1 - i, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);

                    //if (MJModel.outCardEffect_style == 0 || true) {
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    //    card.runAction(cc.sequence(cc.delayTime(allDelay), cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    //} else {
                    //    card.runAction(cc.sequence(cc.moveTo(0.0, cc.p(end_pos.x + 0, end_pos.y + 100)), cc.moveTo(0.3, end_pos)));
                    //}
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    //card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    if (mo_card) {
                        mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                        self.room_Card.hand_card[0].push(mo_card);
                    }
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
                self.room_Card.reflashHandCard(0, true);
                if (mo_card) {
                    mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                    self.room_Card.hand_card[0].push(mo_card);
                }
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1), move_end));
    },

    _setPiaoNum: function (piao, pos, useEffect) {
        var player = this.players[pos];
        player.removeChildByName("piao_tip");
        cc.log("lin=_setPiaoNum=" + piao + "   pos=" + pos);
        if (piao != -1) {
            var p = MJConfig.getPlayerPos(pos);
            var tip = new cc.Sprite(getResPath("zhumadian/chuzhen/chu" + piao + ".png"));
            tip.setName("piao_tip");
            tip.setPosition(pos == 2 ? player.m_size.width + tip.getContentSize().width / 2 - 5 : player.m_size.width / 2, pos == 2 ? 0 + 3 : player.m_size.height * 1.15);
            player.addChild(tip, -100);
        }

        if (pos == 0 && useEffect) {
            if (this._piaoLayer) {
                this._piaoLayer.removeFromParent();
                this._piaoLayer = null;
            }

            var size = cc.director.getWinSize();
            var piaoSpr = new cc.Sprite(getResPath("zhumadian/chuzhen/chuzhen_wait.png"));
            piaoSpr.setPosition(size.width / 2, 200);
            piaoSpr.setName("hubeimj_score_effect");
            this.addChild(piaoSpr, 100);
        }
    },

    _showPiaoLayer: function () {
        if (this._piaoLayer) {
            this._piaoLayer.removeFromParent();
            this._piaoLayer = null;
        }
        this._piaoLayer = new JingShanPiaoLayer();
        this._piaoLayer.initPiao();
        this.addChild(this._piaoLayer, 10);
    },

    _handler_server_start_piao: function (data, canDelay) {
        MJModel.roomState = 1;
        this.resetGame(false);

        for (var i = 0; i < 4; i++) {
            this.players[i].removeChildByName("piao_tip");
        }

        this.room_Info.setVisible(true);
        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }
        if (this.room_Action.getChildByName("yaoqing")) {
            this.room_Action.getChildByName("yaoqing").setVisible(false);
        }

        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }

        var jpacket = parsePacket("proto.game.zhumadianmj.AckStartPiao", data);
        this._showPiaoLayer();
    },
    _handler_server_xiapao_ok_bc: function (data, canDelay) {
        var jpacket = parsePacket("proto.game.zhumadianmj.AckBroadPiao", data);
        var chairid = jpacket.chairid;
        if (MJModel.isMyPlayer(chairid)) {
            this._setPiaoNum(-1, 0, true);
        }
    },
    _handler_server_xiapao_end_bc: function (data, canDelay) {
        var jpacket = parsePacket("proto.game.zhumadianmj.AckXiaPaoRes", data);
        var xiapao = jpacket.xiapao;
        for (var i = 0; i < xiapao.length; i++) {
            var pos = MJModel.getPosBySeatid(i);
            this._setPiaoNum(xiapao[i], pos, false);
        }
    },
    updateBg: function (isInit) {
        if (isInit == undefined)isInit = false;
        var size = cc.director.getWinSize();
        if (this.bg == null) {
            this.bg = new ccui.ImageView(getResPath(this.getBgStr()));
            this.bg.setAnchorPoint(cc.p(0.5, 0.5));
            this.bg.setContentSize(size);
            this.bg.setScale9Enabled(true);
            this.bg.setPosition(size.width / 2, size.height / 2);
            this.addChild(this.bg, -100);
        } else {
            this.bg.loadTexture(getResPath(this.getBgStr()));
        }

        if (MJModel.mj_fontSize == "dahao" && MJModel.mj_font == "jianjie") {
            Utils.addCardSprites(__String.createWithFormat("zhumadian/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        } else {
            Utils.addCardSprites(__String.createWithFormat("RoomMJ/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        }

        if (MJModel.mj_fontSize == "dahao" && MJModel.mj_font == "jianjie") {
            this.loadCardConfig(MJModel.mj_bg_use == 0 ? "zhumadian/card_Config/card_config.json" : "zhumadian/card_Config/card_config2d.json");
        } else {
            if (MJModel.mj_roomType == 2) {
                this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config_2ren.json" : "RoomMJ/config/card_config2d_2ren.json");
            } else {
                this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config.json" : "RoomMJ/config/card_config2d.json");
            }
        }


        if (isInit)return;

        this.room_Card.reflashAllCardUI();
        for (var i = 0; i < 4; i++) {
            this.players[i].setPosition(MJConfig.getPlayerPos(i));
            this.players[i].reflashNameMoneyPosition();
        }
        if (this.room_Info)this.room_Info.reflash();
        if (MJModel.mj_table && MJModel.mj_table.roomPublic) {
            MJModel.mj_table.roomPublic.reflashPublic();
        }
    },
    _gameType_sp: null,
    _setGameType: function () {
        if (this._gameType_sp == null) {
            var pkg_id = "1";
            MJModel.play_id_str = [];
            //甩字胡不可炮胡
            if (MJModel.mj_roomType == 1) {
                MJModel.play_id_str.push("3人玩法");
            } else {
                MJModel.play_id_str.push("4人玩法");
            }
            if (MJModel.RoomConfigID.indexOf(1369001) != -1) {
                MJModel.play_id_str.push("自摸胡");
            }

            if (MJModel.RoomConfigID.indexOf(1369002) != -1) {
                MJModel.play_id_str.push("点炮胡");
            }

            if (MJModel.RoomConfigID.indexOf(1370001) != -1) {
                MJModel.play_id_str.push("断门");
            }

            if (MJModel.RoomConfigID.indexOf(1370002) != -1) {
                MJModel.play_id_str.push("带风牌");
            }

            if (MJModel.RoomConfigID.indexOf(1370003) != -1) {
                MJModel.play_id_str.push("带跑");
            }

            if (MJModel.RoomConfigID.indexOf(1370004) != -1) {
                MJModel.play_id_str.push("杠跑");
            }

            if (MJModel.RoomConfigID.indexOf(1370005) != -1) {
                MJModel.play_id_str.push("清一色加倍");
            }

            if (MJModel.RoomConfigID.indexOf(1370006) != -1) {
                MJModel.play_id_str.push("杠上花加倍");
            }

            if (MJModel.RoomConfigID.indexOf(1370007) != -1) {
                MJModel.play_id_str.push("七对加倍");
            }

            if (MJModel.RoomConfigID.indexOf(1370008) != -1) {
                MJModel.play_id_str.push("一炮多响");
            }

            if (MJModel.RoomConfigID.indexOf(1370009) != -1) {
                MJModel.play_id_str.push("报听");
            } else if (MJModel.RoomConfigID.indexOf(1370010) != -1) {
                MJModel.play_id_str.push("风听");
            } else {
                MJModel.play_id_str.push("自由听");
            }

            if (MJModel.RoomConfigID.indexOf(1370011) != -1) {
                MJModel.play_id_str.push("可吃");
            }

            if (MJModel.RoomConfigID.indexOf(1371001) != -1) {
                MJModel.play_id_str.push("258做将");
            }

            if (MJModel.RoomConfigID.indexOf(1371002) != -1) {
                MJModel.play_id_str.push("带混");
            }

            if (MJModel.RoomConfigID.indexOf(1491001) != -1) {
                MJModel.play_id_str.push("庄家加倍");
            }

            if (MJModel.RoomConfigID.indexOf(1491002) != -1) {
                MJModel.play_id_str.push("庄家加底");
            }

            if (MJModel.RoomConfigID.indexOf(1491003) != -1) {
                MJModel.play_id_str.push("庄闲相同");
            }

            if (MJModel.RoomConfigID.indexOf(2000001) != -1) {
                MJModel.play_id_str.push("可少人开局");
            }
            if (MJModel.RoomConfigID.indexOf(2000002) != -1) {
                MJModel.play_id_str.push("可少人开局");
            }
            if (MJModel.RoomConfigID.indexOf(2000003) != -1) {
                MJModel.play_id_str.push("可少人开局");
            }

            cc.log("lin=MJModel.RoomConfigID=" + JSON.stringify(MJModel.RoomConfigID));
            if (MJModel.RoomConfigID.indexOf(1498001) != -1) {
                MJModel.play_id_str.push("防作弊");
                this._fangZuoBi = true;
            }

            //MJModel.play_id_str.push(MJModel.base_money + "分底");
            var bgUse = "2d";
            if (MJModel.mj_bg_use == 0) {
                bgUse = "25d";
            }

            if (MJModel.mj_roomType == 1) {
                pkg_id = 3;
            }
            else if (MJModel.mj_roomType == 2) {
                pkg_id = 2;
            } else {
                pkg_id = 4;
            }
            var size = cc.director.getWinSize();
            this._gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("zhumadian/flag/zmd_%1_%2.png"), bgUse, pkg_id));
            this._gameType_sp.setAnchorPoint(cc.p(0.5, 1));
            this._gameType_sp.setPosition(cc.p(size.width / 2, size.height / 2 + (MJModel.play_id_str.length > 0 ? 215 - 0 : 240)));
            this.addChild(this._gameType_sp);
            this._gameType_sp.setVisible(false);
            var gameDes = "";
            for (var i = 0; i < MJModel.play_id_str.length; i++) {
                gameDes += MJModel.play_id_str[i];
                if (i != MJModel.play_id_str.length - 1) {
                    gameDes += " ";
                }
            }

            cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);

            this.hideChatAndSoundBtn();
            this.reflashPlayUI();
        }
    },
    getMjTypePath: function () {
        var bgUse = "2d";
        var pkg_id = 4;
        if (MJModel.mj_bg_use == 0) {
            bgUse = "25d";
        }

        if (MJModel.mj_roomType == 1) {
            pkg_id = 3;
        }
        else if (MJModel.mj_roomType == 2) {
            pkg_id = 2;
        } else {
            pkg_id = 4;
        }
        var str = "zhumadian/flag/zmd_" + bgUse + "_" + pkg_id + ".png"
        return getResPath(str);
    },

    handler_server_scene_info_uc: function (hubei_scene, canDelay) {
        var ackGameFree = hubei_scene.gamescene;
        var sceneStatus = ackGameFree.SceneStatus;

        MJModel.RoomConfigID = ackGameFree.RoomConfigID;

        if (ackGameFree.RoomConfigID.indexOf(2000001) != -1)MJModel.changMode = 2;
        if (ackGameFree.RoomConfigID.indexOf(2000002) != -1)MJModel.changMode = 2;
        if (ackGameFree.RoomConfigID.indexOf(2000003) != -1)MJModel.changMode = 3;

        this._setGameType();

        if (sceneStatus != 0 && !hubei_scene.is_piao) {
            this._setLaizi(hubei_scene.laizi_card, -1, -1);//还原赖子

            var bao_ting_status = hubei_scene.bao_ting_status;
            for (var i = 0; i < bao_ting_status.length; i++) {
                var bao_ting = bao_ting_status[i];
                if (MJModel.isMyPlayer(i)) {
                    if (bao_ting == 1) {
                        MJModel.mj_lockcard_type = 1;
                    } else if (bao_ting == 2) {
                        MJModel.mj_lockcard_type = 2;
                    }
                }
            }
        }

        //恢复各个玩家的票数
        if (sceneStatus != MJ_STATUS.MJ_GAME_FREE) {
            //正在跑
            if (hubei_scene.is_piao) {
                cc.log("lin=handler_server_scene_info_uc=1");
                for (var i = 0; i < hubei_scene.is_operate_piao.length; i++) {
                    var ok = hubei_scene.is_operate_piao[i];
                    if (MJModel.isMyPlayer(i)) {
                        if (ok == 0) {
                            this._showPiaoLayer();
                        } else {
                            this._setPiaoNum(-1, 0, true);
                        }
                    }
                }
            } else {
                cc.log("lin=handler_server_scene_info_uc=2");
                for (var i = 0; i < hubei_scene.choose_piao.length; i++) {
                    var piao = hubei_scene.choose_piao[i];
                    var pos = MJModel.getPosBySeatid(i);
                    this._setPiaoNum(piao, pos, false);
                }
            }
        }

        if (MJModel.isOnVideo) {
            for (var i = 0; i < hubei_scene.choose_piao.length; i++) {
                var piao = hubei_scene.choose_piao[i];
                var pos = MJModel.getPosBySeatid(i);
                this._setPiaoNum(piao, pos, false);
            }
        }

        this.updateButtonPostion();
        // if (ackGameFree.SceneStatus == 4) {
        //     ackGameFree.SceneStatus = 0;
        // }

        this._super(ackGameFree, canDelay);


        //恢复各个玩家的票数
        if (sceneStatus != MJ_STATUS.MJ_GAME_FREE) {
            //正在跑
            if (hubei_scene.is_piao) {
                this.room_Card.reset();
                this.room_Info.gdmj_showFengQuan(-1);
                this.room_Info.showDirectionTip(-1);
                this.room_Info.showCardNums(0);
                this.room_Info.stopTime();
            }
        }

        if (sceneStatus != 0) {
            var baoting = hubei_scene.bao_ting_status;
            for (var i = 0; i < baoting.length; i++) {
                var pos = MJModel.getPosBySeatid(i);
                var isbaoting = baoting[i];
                if (isbaoting == 1 || isbaoting == 2) {
                    this.players[pos].setLiangPaiVisible(true);
                }
            }
        }
        this._setFastChat();
    },
    initUtil: function () {
        var self_table = this;
        var super_parseName = Utils.parseName;
        Utils.parseName = function (max, name) {
            if (max <= 8 && self_table._fangZuoBi && !MJModel.isOnVideo && !self_table.isRecordShow) {
                return "******"
            } else {
                return super_parseName.call(this, max, name);
            }
        };

        var super_createCircleAvatar = Utils.createCircleAvatar;
        Utils.createCircleAvatar = function (url, defualtFile, clipfile, size) {
            if (self_table.isRecordShow) {
                self_table._fangZuoBi = false;
            }
            cc.log("lin=createCircleAvatar=" + self_table._fangZuoBi);
            try {
                var savePath = Utils.getImageSavePath(url);

                if (Utils.hasImageFile(url)) {
                    var avatar = new cc.Sprite(savePath);
                    if (avatar == null) {
                        avatar = new cc.Sprite(defualtFile);
                    }
                    if (self_table._fangZuoBi && !MJModel.isOnVideo) {
                        Utils.makeCircleSprite(avatar, getResPath("zhumadian/avatars/user4.png"), clipfile, size);
                    } else {
                        Utils.makeCircleSprite(avatar, savePath, clipfile, size);
                    }
                    return avatar;
                }
                else {
                    var avatar = new cc.Sprite(defualtFile);
                    if (self_table._fangZuoBi && !MJModel.isOnVideo) {
                        Utils.makeCircleSprite(avatar, getResPath("zhumadian/avatars/user4.png"), clipfile, size);
                    } else {
                        Utils.makeCircleSprite(avatar, defualtFile, clipfile, size);
                    }
                    var tag = savePath + time(null);
                    CCHttpAgent.getInstance().sendHttpImage(url, savePath, tag, function (tag) {
                        if (Utils.hasImageFile(url)) {
                            if (self_table._fangZuoBi) {
                                Utils.makeCircleSprite(avatar, getResPath("zhumadian/avatars/user4.png"), clipfile, size);
                            } else {
                                Utils.makeCircleSprite(avatar, defualtFile, clipfile, size);
                            }
                        }
                        CCHttpAgent.getInstance().popPackets(tag);
                    }, 15);

                    return avatar;
                }
            } catch (e) {
                var avatar = new cc.Sprite(defualtFile);
                var s_izex = size.width / avatar.getContentSize().width;
                var s_izey = size.height / avatar.getContentSize().height;
                avatar.setScale(s_izex, s_izey);
                return avatar;
            }
        };
    },
    initMJAction: function () {
        var super_mjaction_ctor = MJAction.prototype.ctor;
        MJAction.prototype.ctor = function () {
            super_mjaction_ctor.call(this);
            var size = cc.director.getWinSize();
            var self = this;
            this.actions["yaoqing"].setLocalZOrder(1);
            {
                this.mode_btn = new ccui.Button();
                this.mode_btn.loadTextures(getResPath("RoomMJ/shaorenmoshi/mode_btn.png"), getResPath("RoomMJ/shaorenmoshi/mode_btn.png"), "");
                this.mode_btn.setPosition(cc.p(size.width / 2, 450));
                this.mode_btn.setName("shaorenmoshi");
                this.mode_btn.setVisible(false);
                this.mode_btn.addClickEventListener(function (sender, evt) {
                    self.modeCallback(sender);
                });
                this.addChild(this.mode_btn);

                var no = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_no.png"));
                no.setPosition(45, this.mode_btn.getContentSize().height / 2 + 5);
                no.setName("no");
                no.setVisible(false);
                this.mode_btn.addChild(no);

                var ok = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_ok.png"));
                ok.setPosition(45, this.mode_btn.getContentSize().height / 2 + 5);
                ok.setName("ok");
                ok.setVisible(false);
                this.mode_btn.addChild(ok);

                var mode_2 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_2.png"));
                mode_2.setPosition(203, this.mode_btn.getContentSize().height / 2 + 5);
                mode_2.setName("mode_2");
                mode_2.setVisible(false);
                this.mode_btn.addChild(mode_2);

                var mode_3 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/mode_3.png"));
                mode_3.setPosition(203, this.mode_btn.getContentSize().height / 2 + 5);
                mode_3.setName("mode_3");
                mode_3.setVisible(false);
                this.mode_btn.addChild(mode_3);
            }
        };
        MJAction.prototype.modeCallback =function(ref){
            var ok = ref.getChildByName("ok");
            var no = ref.getChildByName("no");
            ok.setVisible(!ok.isVisible());
            no.setVisible(!no.isVisible());

            var cur_p = 0;
            for (var i = 0; i < MJModel.Play_num; i ++){
                if (MJModel.players[i].uid > 0)cur_p ++;
            }

            sendSelectMode(ok.isVisible() ? cur_p : 0);
        };

        MJAction.prototype.resetMode = function(isOK,gameReset){
            if (MJModel.changMode == 0 || MJModel.isOnVideo)return;
            if (gameReset == undefined)gameReset = false;
            if (gameReset){
                this.mode_btn.setVisible(false);
                return;
            }
            var ok = this.mode_btn.getChildByName("ok");
            var no = this.mode_btn.getChildByName("no");
            if (isOK == undefined){
                ok.setVisible(false);
                no.setVisible(true);
            }else{
                ok.setVisible(isOK);
                no.setVisible(!isOK);
            }

            var cur_p = 0;
            for (var i = 0; i < MJModel.Play_num; i ++){
                if (MJModel.players[i].uid > 0)cur_p ++;
            }
            this.mode_btn.setVisible(false);
            cc.log("lin=resetMode=1")
            if (MJModel.changMode == 1 && cur_p != 2)return;
            if (MJModel.changMode == 2 && cur_p != 3)return;
            if (MJModel.changMode == 3 && cur_p != 2 && cur_p != 3)return;
            cc.log("lin=resetMode=2")
            this.mode_btn.setVisible((cur_p == 2 && MJModel.mj_roomType != 2) || (cur_p == 3 && MJModel.mj_roomType != 1));
            this.mode_btn.getChildByName("mode_2").setVisible(cur_p == 2 && MJModel.mj_roomType != 2);
            this.mode_btn.getChildByName("mode_3").setVisible(cur_p == 3 && MJModel.mj_roomType != 1);
        };
    },
    initMJPublic: function () {
        var self_table = this;
        MJPublic.prototype.showJuShuTip = function () {
            this.jushu.setString("牌局:" + MJModel.currentCount + "/" + MJModel.RoomCountSum);
            if (!this.jushu2dbg) {
                var size = cc.director.getWinSize();
                this.jushu2dbg = new cc.Sprite(getResPath("zhumadian/bg/cardnums_bg.png"));
                this.jushu2dbg.setOpacity(0);
                this.jushu2dbg.setAnchorPoint(cc.p(0, 0.5));
                this.jushu2dbg.setVisible(false);
                this.jushu2dbg.setPosition(cc.p(size.width / 2 + 52, size.height / 2 + 20));
                self_table.addChild(this.jushu2dbg, 0);
                var ext2dbgsize = this.jushu2dbg.getContentSize();
                var typeLabel = new cc.LabelTTF("剩      局", "Arial", 22);
                typeLabel.setColor(cc.color(3, 40, 34));
                typeLabel.setAnchorPoint(cc.p(0, 0.5));
                typeLabel.setPosition(cc.p(20, ext2dbgsize.height / 2 - 2));
                this.jushu2dbg.addChild(typeLabel);
                this.jushuText2d = new cc.LabelTTF("", "Arial", 22);
                this.jushuText2d.setColor(cc.color(0xff, 0xf7, 0x21));
                this.jushuText2d.setAnchorPoint(cc.p(0.5, 0.5));
                this.jushuText2d.setPosition(cc.p(ext2dbgsize.width / 2 - 1, ext2dbgsize.height / 2 - 2));
                this.jushu2dbg.addChild(this.jushuText2d);
            }
            var shenyuJuShu = MJModel.RoomCountSum - MJModel.currentCount;
            this.jushuText2d.setString(shenyuJuShu);


        };
        MJPublic.prototype.showCardNum = function (num) {
            if (num >= 0) {
                this.cardNumView.setVisible(true);
                this.cardNumText.setString(num);
            } else {
                this.cardNumText.setString(0);
                this.cardNumView.setVisible(false);
            }
            if (!this.cardNumText2d) {
                var size = cc.director.getWinSize();
                this.cardNumText2dbg = new cc.Sprite(getResPath("zhumadian/bg/cardnums_bg.png"));
                this.cardNumText2dbg.setOpacity(0);
                this.cardNumText2dbg.setAnchorPoint(cc.p(1, 0.5));
                this.cardNumText2dbg.setPosition(cc.p(size.width / 2 - 52, size.height / 2 + 20));
                self_table.addChild(this.cardNumText2dbg, 0);
                var ext2dbgsize = this.cardNumText2dbg.getContentSize();
                var typeLabel = new cc.LabelTTF("剩      张", "Arial", 22);
                typeLabel.setColor(cc.color(3, 40, 34));
                typeLabel.setAnchorPoint(cc.p(0.5, 0.5));
                typeLabel.setPosition(cc.p(ext2dbgsize.width / 2, ext2dbgsize.height / 2 - 2));
                this.cardNumText2dbg.addChild(typeLabel);
                this.cardNumText2d = new cc.LabelTTF(num + "", "Arial", 22);
                this.cardNumText2d.setColor(cc.color(0xff, 0xf7, 0x21));
                this.cardNumText2d.setAnchorPoint(cc.p(0.5, 0.5));
                this.cardNumText2d.setPosition(cc.p(ext2dbgsize.width / 2 + 1, ext2dbgsize.height / 2 - 2));
                this.cardNumText2dbg.addChild(this.cardNumText2d);
            }
            this.cardNumText2d.setString(num + "");
            if (MJModel.mj_bg_use == 1) {
                //2d
                this.cardNumView.setVisible(false);
                if (num < 0) {
                    this.cardNumText2dbg.setVisible(false);
                }
                else {
                    this.cardNumText2dbg.setVisible(true);
                }
            }
            else {
                if (this.cardNumText2dbg) {
                    this.cardNumText2dbg.setVisible(false);
                }
            }

            if (MJModel.mj_bg_use == 1) {
                if (this.jushu2dbg && !MJModel.mj_table.pre_scene) {
                    if (num < 0) {
                        this.jushu2dbg.setVisible(false);
                    } else {
                        this.jushu2dbg.setVisible(true);
                    }
                }
            }

        };
        MJPublic.prototype.reflashPublic = function () {
            cc.log("lin=reflashPublic=" + this.jushu2dbg);
            if (this.jushu2dbg) {
                if (MJModel.mj_bg_use == 1) {
                    if (this.jushu2dbg && !MJModel.mj_table.pre_scene)this.jushu2dbg.setVisible(true);
                    if (this.cardNumText2dbg)this.cardNumText2dbg.setVisible(true);
                    if (this.cardNumView)this.cardNumView.setVisible(false);

                } else {
                    if (this.jushu2dbg)this.jushu2dbg.setVisible(false);
                    if (this.cardNumText2dbg)this.cardNumText2dbg.setVisible(false);
                    if (this.cardNumView)this.cardNumView.setVisible(true);

                }

            }
        };
    },
    initMJDialogs: function () {
        CommonTotalResult.prototype.refresh = function () {
            var allL = this.items.length;
            var useLayer = null;
            var pos = [];

            if (allL % 2 != 0) {
                useLayer = this.rootNode.getChildByName("player3");
                if (allL == 1) {
                    pos.push(1);
                } else if (allL == 3) {
                    pos.push(0);
                    pos.push(1);
                    pos.push(2);
                }
            } else {
                useLayer = this.rootNode.getChildByName("player4");
                if (allL == 2) {
                    pos.push(1);
                    pos.push(2);
                } else if (allL == 4) {
                    pos.push(0);
                    pos.push(1);
                    pos.push(2);
                    pos.push(3);
                }
            }
            var offx = 10;
            for (var i = 0; i < allL; i++) {
                var item = useLayer.getChildByName("player" + pos[i]);
                item.addChild(this.items[i]);
            }
        };
        CommonTotalResult.prototype.addItem = function (avatars, names, ids, isWin, isPao, arrStr, count, score, Ishouse, state) {
            var uiJson = ccs.load(getResPath("RoomMJ/mj_public/gameRecord_Item.json"));
            var node = uiJson.node;
            this.items.push(node);
            if (score > 0) {
                node.getChildByName("bg").setVisible(true);
            }

            if (isWin) {
                node.getChildByName("dayingjia").setVisible(true);
            }

            if (isPao) {
                node.getChildByName("dianpaowang").setVisible(true);
            }

            if (Ishouse) {
                node.getChildByName("fangzhu").setVisible(true);
            }

            var avatar = node.getChildByName("avatar");
            var name = node.getChildByName("name");
            var id = node.getChildByName("id");

            var m_pAvatar = Utils.createCircleAvatar(avatars, getResPath("RoomMJ/mj_public/common/dialog/zhanji/head_default.png"), "Avatars/user4_unlogin.png", cc.size(100, 100));
            avatar.removeAllChildren();
            avatar.addChild(m_pAvatar);
            name.setString(names);
            name.ignoreContentAdaptWithSize(true);

            id.setString("ID:" + ids);
            id.ignoreContentAdaptWithSize(true);

            if (state && state != 0) {
                var bg = new cc.Sprite(getResPath("RoomMJ/mj_public/common/dialog/bigresult/jiesan_state/state_bg.png"));
                bg.setPosition(cc.p(avatar.getContentSize().width / 2, avatar.getContentSize().height / 2));
                avatar.addChild(bg);

                var fg = new cc.Sprite(getResPath("RoomMJ/mj_public/common/dialog/bigresult/jiesan_state/state_" + state + ".png"));
                fg.setPosition(cc.p(avatar.getContentSize().width / 2, avatar.getContentSize().height / 2));
                avatar.addChild(fg);
            }

            var offx = 10;
            for (var i = 0; i < arrStr.length; i++) {
                var title = node.getChildByName("title" + (i + 1));
                var num = node.getChildByName("num" + (i + 1));
                var post = title.getPosition();
                var posn = num.getPosition();

                title.setVisible(true);
                num.setVisible(true);

                title.setString(arrStr[i]);
                title.ignoreContentAdaptWithSize(true);

                num.setString(count[i]);
                num.ignoreContentAdaptWithSize(true);

                post.y = post.y - offx * i;
                posn.y = posn.y - offx * i;

                post.x = post.x - 20;
                posn.x = posn.x + 20;

                title.setPosition(post);
                num.setPosition(posn);

                title.setScale(1.3);
                num.setScale(1.3);

                //title.setColor(score > 0 ? cc.color(222, 182, 120) : cc.color(148, 191, 207));
                //num.setColor(score > 0 ? cc.color(255, 206, 85) : cc.color(222, 222, 222));
            }

            if (score > 0) {
                node.getChildByName("zongfen_win").setVisible(true);
                node.getChildByName("zongfen_win").ignoreContentAdaptWithSize(true);
                node.getChildByName("zongfen_win").setString(":" + Math.abs(score));
            } else {
                node.getChildByName("zongfen_lose").setVisible(true);
                node.getChildByName("zongfen_lose").ignoreContentAdaptWithSize(true);
                node.getChildByName("zongfen_lose").setString(score == 0 ? score : (":" + Math.abs(score)));
            }
            return node;
        };
    },
    initMJConfig: function () {
        MJConfig.getPlayerPos = function (index) {
            var point = this.getWorldPosition("player", "player" + index);
            if (index == 3 && MJModel.mj_bg_use == 1 && MJModel.mj_paiban == "vertical") {
                point.y -= 75;
            }
            if (index == 0 && MJModel.mj_bg_use == 0) {
                point.y = 170;
            }
            return point;
        };

        MJConfig.getOutCardPos = function (pos, index) {

            if (MJModel.mj_roomType == 2 && !(MJModel.mj_font == "jianjie" && MJModel.mj_fontSize == "dahao")) {
                index = index % 58;
                return this.getWorldPosition("out_" + pos, "o_" + index);
            }

            if (MJModel.mj_bg_use == 1) {
                if (pos == 0 || pos == 2) {
                    index = index % 26;
                } else {
                    if (MJModel.mj_paiban == "vertical") {
                        index = index % 28;
                    } else {
                        index = index % 30;
                    }
                }
            } else {
                if (MJModel.mj_font == "jianjie" && MJModel.mj_fontSize == "dahao") {
                    if (pos == 0 || pos == 2) {
                        index = index % 18;
                    } else {
                        index = index % 16;
                    }
                } else {
                    index = index % 26;
                }

            }
            if ((pos == 1 || pos == 3) && MJModel.mj_bg_use == 1 && MJModel.mj_paiban == "vertical") {
                return this.getWorldPosition("out_v_" + pos, "o_" + index);
            } else {
                return this.getWorldPosition("out_" + pos, "o_" + index);
            }
        };

        MJConfig.getOutCardOrder = function (pos, index) {
            if (MJModel.mj_roomType == 2 && !(MJModel.mj_font == "jianjie" && MJModel.mj_fontSize == "dahao")) {
                index = index % 58;
                var order = null;
                if (MJModel.mj_bg_use == 1) {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        ],
                    ];
                    return order[pos][index];
                } else {
                    if (pos == 0) {
                        return index % 58;
                    } else if (pos == 2) {
                        return 57 - index % 58;
                    }
                    return 0;
                }
            }

            if (MJModel.mj_bg_use == 1) {
                if (pos == 0 || pos == 2) {
                    index = index % 26;
                } else {
                    if (MJModel.mj_paiban == "vertical") {
                        index = index % 28;
                    } else {
                        index = index % 30;
                    }
                }
                var order = null;
                if ((pos == 1 || pos == 3) && MJModel.mj_paiban == "vertical") {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                        ],
                    ];
                } else {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                        ],
                    ];
                }
                return order[pos][index];
            }
            else {
                cc.log("lin=getOutCardOrder=1");
                var order = [
                    [
                        0, 1, 2, 3, 4, 5,
                        6, 7, 8, 9, 10, 11, 12, 13,
                        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
                    ],
                    [
                        25, 24, 23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        25, 24, 23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        20, 21, 22, 23, 24, 25,
                        12, 13, 14, 15, 16, 17, 18, 19,
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                    ],
                ];

                var order1 = [
                    [
                        50, 49, 48, 47, 46, 45,
                        44, 43, 42, 41, 40, 39, 38, 37,
                        36, 35, 34, 33, 32, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        21, 20, 19, 18, 17, 16, 15, 14, 13,
                        29, 28, 27, 26, 25, 24, 23, 22,

                    ],
                    [
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                        12, 13, 14, 15, 16, 17, 18, 19,
                    ],
                    [
                        13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
                        25, 26, 27, 28, 29, 30, 31, 32,
                        //20, 21, 22, 23, 24, 25,
                    ],
                ];

                if (MJModel.mj_font == "jianjie" && MJModel.mj_fontSize == "dahao") {
                    cc.log("lin=getOutCardOrder=2");
                    if (pos == 0 || pos == 2) {
                        index = index % 18;
                    } else {
                        index = index % 16;
                    }
                    return order1[pos][index];
                } else {
                    index = index % 26;
                    return order[pos][index];
                }
            }
        };
    },
    initMJTips: function () {
        MJTips.prototype.showSelectMode = function (pos, mode) {
            try {
                this.removeChildByName("select_mode_" + pos);
                if (mode != 2 && mode != 3)return;
                var cur_p = 0;
                for (var i = 0; i < MJModel.Play_num; i ++){
                    if (MJModel.players[i].uid > 0)cur_p ++;
                }
                if (mode != cur_p)return;
                var p_pos = MJConfig.getPlayerPos(pos);
                var sx = 1;
                var sy = 1;
                if (pos == 2){
                    p_pos.y -= 70;
                    p_pos.x += 100;
                }
                if (pos == 1){
                    p_pos.y -= 70;
                    p_pos.x -= 100;
                }
                if (pos == 0 || pos == 3){
                    p_pos.y -= 50;
                    p_pos.x += 100;
                }
                var tip = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/tip_bg.png"));
                tip.setScaleX(pos == 1 ? -1 : 1);
                tip.setName("select_mode_" + pos);
                if (pos == 1)p_pos.x -= tip.getContentSize().width;
                tip.setPosition(p_pos);
                tip.setAnchorPoint(cc.p(pos == 1 ? 1 : 0,0));
                this.addChild(tip,10000);

                var mode_2 = new cc.Sprite(getResPath("RoomMJ/shaorenmoshi/tip_" + mode + ".png"));
                mode_2.setPosition(tip.getContentSize().width / 2, tip.getContentSize().height / 2);
                mode_2.setName("mode");
                mode_2.setScaleX(pos == 1 ? -1 : 1);
                tip.addChild(mode_2);
            } catch (e) {
                Log(this, e);
            }
        };
        MJTips.prototype.resetSelectMode = function(){
            for (var i = 0; i < MJModel.Play_num; i ++){
                this.removeChildByName("select_mode_" + i);
            }
        };
    },
    _init_extend: function () {
        var self_table = this;
        this.initUtil();
        this.initMJAction();
        this.initMJPublic();
        this.initMJDialogs();
        this.initMJConfig();
        this.initMJTips();
        Utils.getFastChatSound = function (chat, sex) {
            // if (sex == SEX_ID.SEX_MAN) {
            //     var fastChat_map = [];
            //     fastChat_map["白喷了，先赢了再说吧"] = getResPath("zhumadian/sound/fast/m_1.mp3");
            //     fastChat_map["别耽误事了，赶紧出吧"] = getResPath("zhumadian/sound/fast/m_2.mp3");
            //     fastChat_map["赶紧吧，别墨迹了"] = getResPath("zhumadian/sound/fast/m_3.mp3");
            //     fastChat_map["你看这个人又断线了"] = getResPath("zhumadian/sound/fast/m_4.mp3");
            //     fastChat_map["我有事不玩了哈"] = getResPath("zhumadian/sound/fast/m_5.mp3");
            //     fastChat_map["我再输了裤衩都没了"] = getResPath("zhumadian/sound/fast/m_6.mp3");
            //     fastChat_map["想不胡都难"] = getResPath("zhumadian/sound/fast/m_7.mp3");
            //     fastChat_map["这啥牌呀，真差"] = getResPath("zhumadian/sound/fast/m_8.mp3");
            //
            //     if (fastChat_map.hasOwnProperty(chat)) {
            //         return fastChat_map[chat];
            //     }
            // } else {
            //     var fastChat_map = [];
            //     fastChat_map["白喷了，先赢了再说吧"] = getResPath("zhumadian/sound/fast/w_1.mp3");
            //     fastChat_map["赶紧吧你，别耽误事了"] = getResPath("zhumadian/sound/fast/w_2.mp3");
            //     fastChat_map["快点出牌吧"] = getResPath("zhumadian/sound/fast/w_3.mp3");
            //     fastChat_map["你看这个人怎么又断线了"] = getResPath("zhumadian/sound/fast/w_4.mp3");
            //     fastChat_map["我现在有点事，下次再玩吧"] = getResPath("zhumadian/sound/fast/w_5.mp3");
            //     fastChat_map["再输我就不玩了"] = getResPath("zhumadian/sound/fast/w_6.mp3");
            //     fastChat_map["你看这牌，想不胡都难"] = getResPath("zhumadian/sound/fast/w_7.mp3");
            //     fastChat_map["今天这手气真臭"] = getResPath("zhumadian/sound/fast/w_8.mp3");
            //
            //     if (fastChat_map.hasOwnProperty(chat)) {
            //         return fastChat_map[chat];
            //     }
            // }
            // return "";

            var chatList = [];
            if (sex == SEX_ID.SEX_MAN) {
                chatList = self_table.fastChat_m;
            } else {
                chatList = self_table.fastChat_w;
            }
            for (var i = 0; i < chatList.length; i++) {
                if (chatList[i] == chat) {
                    return getResPath(__String.createWithFormat("zhumadian/sound/fast/%1_%2.mp3", sex == SEX_ID.SEX_MAN ? "m" : "w", i + 1));
                }
            }
            return "";
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };
        //不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        MJCard.prototype.check_addFlag = function () {
            self_table._checkAddCardFlag(this);
        };

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            this.removeChildByName("ChooseGang_selectLayer");
            if (operat != -1 && (operat & PZHActionType.TYPE_BAOTING) == PZHActionType.TYPE_BAOTING) {
                if (this.actions["ting"]) {
                    this.actions["ting"].setVisible(true);
                }
            }

            super_setOperator.call(this, operat);
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);
            if (name == "ting") {
                var type = PZHActionType.TYPE_BAOTING;
                sendOperateCard(type, MJModel.curOperateCard);
                this.setOperator(-1);
                return;
            }
            super_btnCallback.call(this, ref);
        };

        MJPlayer.prototype.setLiangPaiVisible = function (v) {
            if (!this.liangpai_flag) {
                this.liangpai_flag = new cc.Sprite(getResPath("zhumadian/flag/ting.png"));
                this.liangpai_flag.setVisible(false);
                if (this.pid == 1) {
                    this.liangpai_flag.setPosition(cc.p(0, 30));
                }
                else {
                    this.liangpai_flag.setPosition(cc.p(this.m_size.width, 30));
                }
                this.addChild(this.liangpai_flag, 1);
            }
            if (this.liangpai_flag) {
                this.liangpai_flag.setVisible(v);
            }
        };
        var superreset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function (allClean, isGameStart) {
            superreset.call(this);
            this.setLiangPaiVisible(false);
        };

        var super_showui = MJPeng.prototype.showUI;
        MJPeng.prototype.showUI = function (type, pos, values, index, out_pos, isEnd, OpType, value, value1) {
            super_showui.call(this, type, pos, values, index, out_pos, isEnd, OpType, value, value1);
            if (isEnd) return;
            if (MJModel.chi_layout == 3 && (OpType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG) {
                if (pos == 0) {
                    var cardIndex = 3;
                    if (cardIndex != -1) {
                        var card = this.cardList[cardIndex];
                    }

                    if (card) {
                        var black_bg = new cc.Sprite(getResPath("RoomMJ/point/peng_gang_point" + out_pos + ".png"));
                        black_bg.setPosition(this.getPointPos(pos));
                        black_bg.setAnchorPoint(cc.p(0.5, 0.5));
                        black_bg.setScale(0.6);
                        this.addChild(black_bg, 10);
                        this.pointSp = black_bg;
                    }
                } else {
                    if (this.pointSp) {
                        this.pointSp.setVisible(true);
                    }
                }
            }

        };
        MJCards.prototype.createEndHandcardLayer = function (handcards, hucard, pos) {
            var layer = new cc.Layer();
            var cardList = [];
            var changeable_Size = handcards.ChangeableCards.length;
            for (var j = 0; j < changeable_Size; j++) {
                var cardDataNum = handcards.ChangeableCards[j];
                cardList.push(cardDataNum);
            }

            try {
                cardList.sort(this.sortCard);
            } catch (e) {
                Log(this, e);
            }

            try {
                var is_remove = 0;
                var real_index = 0;
                var _vec;
                var hasHuCard = false;
                var hasMoreCard = parseInt(cardList.length % 3) == 2;
                if (hucard != 0 && hucard != null && hucard != undefined) {
                    hasHuCard = true;
                }
                for (var i = 0; i < cardList.length; i++) {
                    if (is_remove == 0 && hasMoreCard && hasHuCard) {
                        if (cardList[i] == hucard) {
                            is_remove = 1;
                            continue;
                        }
                    }
                    var card = new MJCard();
                    card.setValue(cardList[i], 0, CardType.Card_End, real_index);
                    _vec = MJConfig.getEndCardPos(0, real_index, cardList.length, hasMoreCard && !hasHuCard);
                    card.setPosition(_vec);
                    layer.addChild(card, MJConfig.getHandCardOrder(0, real_index));
                    real_index++;
                }

                if (hasHuCard) {
                    var card = new MJCard();
                    card.setValue(hucard, 0, CardType.Card_End, 0);
                    card.setPosition(MJConfig.getEndCardMoPos(0));
                    layer.addChild(card, MJConfig.getMoCardOrder(0));
                }
            } catch (e) {

            }

            if (handcards.stFixedCards) {
                var groupcard_size = handcards.stFixedCards.length;
                var allpenggangcards = handcards.stFixedCards;
                for (var j = 0; j < groupcard_size; j++) {
                    var cardData = allpenggangcards[j].CardData;
                    var state = allpenggangcards[j].state;
                    var LaiziNum = allpenggangcards[j].LaiziNum;

                    var type = PengType.Peng_Peng;
                    if ((state & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                        type = PengType.Peng_Peng;
                    }
                    else if ((state & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                        type = PengType.Peng_AnKang;
                    }
                    else if ((state & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI) {
                        type = PengType.Chi_L;
                    }
                    else if ((state & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI) {
                        type = PengType.Chi_M;
                    }
                    else if ((state & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                        type = PengType.Chi_R;
                    }
                    else {
                        type = PengType.Peng_Kang;
                    }

                    var card = new MJPeng();

                    //card.setValue(type, 0, cardData, j, 0, false, state, LaiziNum);
                    //重写bengin-----------
                    var tempPos = pos;
                    var OpCards = allpenggangcards[j].OpCards;
                    var out_seatid = allpenggangcards[j].chairID;
                    var out_pos = MJModel.getPosBySeatid(out_seatid);
                    cc.log("lin=createEndHandcardLayer=" + out_seatid);
                    card.setValue(type, 0, cardData, j, out_pos, true, state, OpCards);
                    //重写end-----------

                    card.setPosition(MJConfig.getPengKangCardPos(0, j));
                    card.setScale(MJConfig.getScale_new(0, CardType.Card_Peng, j, false));
                    layer.addChild(card, MJConfig.getPengKangCardOrder(0, j));
                }
            }
            return layer;
        };
    },
    handler_change_mode_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.AckChangeMode", data);
        var seatid = packet.chairid;
        var pos = MJModel.getPosBySeatid(seatid);
        var v = packet.num;
        this.room_Tip.showSelectMode(pos, v);
    },
    handler_shaoren_mode: function (ackGameFree) {
        if ((!MJModel.isOnVideo && MJModel.roomState != 0) || !ackGameFree.userchangemode)return;
        cc.log("handler_shaoren_mode");
        for (var i = 0; i < ackGameFree.userchangemode.length; i++) {
            var select_mode = ackGameFree.userchangemode[i];
            var pos = MJModel.getPosBySeatid(i);
            this.room_Tip.showSelectMode(pos, select_mode);
            if (MJModel.isMyPlayer(i)) {
                this.room_Action.resetMode(select_mode != 0);
            }
        }
    },
    handler_server_up_table_bc: function (data, canDelay) {
        if (MJModel.waitUpdate == false) Sound.getInstance().playEffect(getResPath("RoomMJ/sound/enter.mp3"));
        var ackUpTableSuccess = parsePacket("proto.login.AckUpTableSuccess", data);
        var seatid = ackUpTableSuccess.seatid;

        var player = MJModel.players[seatid];
        player.reset();

        player.seatid = seatid;
        player.uid = ackUpTableSuccess.uid;
        player.name = ackUpTableSuccess.name;
        player.money = ackUpTableSuccess.money;
        player.ready = ackUpTableSuccess.ready;
        player.sex = ackUpTableSuccess.sex;
        player.avatar = ackUpTableSuccess.avatar;
        player.start_money = player.money * 2;//乘2 做简单的加密

        if (player.uid == ZJHModel.getInstance().uid) {
            MJModel.waitUpdate = true;
            CCTcpClient.getInstance(MJModel.curRoomID).reset_response_queue();
            sendTableInfoReq();
        }
        else {
            var pos = MJModel.getPosBySeatid(seatid);
            var rPlayer = this.players[pos];
            rPlayer.login(player.seatid);

            if (MJModel.mj_public_style == 0) {
                JsUtils.postNotifi("notify_room_check_ip");
            } else {
                this.checkIpAndDistance();
                this.checkGPSWarning();
            }
            if (this.pre_scene) {
                this.pre_scene.resetMode();
            }else{
                cc.log("lin=handler_server_up_table_bc=1");
                this.room_Action.resetMode();
            }

            if (this.pre_scene) {
                this.pre_scene.resetSelectMode();
            }else{
                this.room_Tip.resetSelectMode();
            }
        }

        if (this.pre_scene) this.pre_scene.handler_server_up_table_bc(data, canDelay);
    },
    handler_server_down_table_bc: function (data, canDelay) {
        var ackDownTableSuccess = parsePacket("proto.login.AckDownTableSuccess", data);
        var uid = ackDownTableSuccess.uid;
        var seatid = ackDownTableSuccess.seatid;

        var player = MJModel.players[seatid];
        player.uid = 0;
        var pos = MJModel.getPosBySeatid(seatid);
        var roomPlayer = this.players[pos];
        roomPlayer.reset();
        roomPlayer.logout();
        if (this.pre_scene) {
            this.pre_scene.resetMode();
        }else{
            this.room_Action.resetMode();
        }
        if (this.pre_scene) {
            this.pre_scene.resetSelectMode();
        }else{
            this.room_Tip.resetSelectMode();
        }
        if (MJModel.isMyPlayer(seatid)) {
            MJModel.tempSeatid = MJModel.seatid;
            MJModel.seatid = -1;
            ZJHModel.getInstance().mySeatid = MJModel.seatid;
            if (this.room_Action) {
                this.room_Action.setReadyVisible(false);
            }
            MJModel.mj_table.release();
            ZJHModel.getInstance().roomToHall();
            return;
        }

        if (MJModel.gpsInfo) {
            MJModel.gpsInfo.updateInfo();
        }

        if (this.pre_scene) this.pre_scene.handler_server_down_table_bc(data, canDelay);
    },
    _checkAddCardFlag: function (card) {
        try {
            if (card.getValue() == this._curLaizi) {
                card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath("zhumadian/flag/lai_flag2.png"));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    if (card.type == CardType.Card_End) {
                        if (card.pos == 1 || card.pos == 3 || card.pos == 2) {
                            flag.setScale(0.5);
                        } else {
                            flag.setScale(0.8);
                        }
                    }

                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flag.setScale(0.47);
                    }
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },
    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }

        if (pos == 1) {
            flag.setPosition(cc.p(0, 17));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 17));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    updateButtonPostion: function () {
        var size = cc.director.getWinSize();

        //2d场景
        if (this.room_Action && this.room_Action.btns["gps"]) {
            var p = this.room_Action.btns["gps"].getPosition();
            this.room_Action.btns["gps"].setPosition(cc.p(size.width - 245, p.y));
        }

        if (this._curLaizi_bg) {
            this._curLaizi_bg.setPosition(cc.p(55, size.height - 80));
            this._curLaizi_bg.setScale(1.2);
        }

        if (this.roomPublic && this.roomPublic.cardNumView) {
            var p = this.roomPublic.cardNumView.getPosition();
            var pp = cc.p(this.roomPublic.cardNumView.getParent().convertToNodeSpace(cc.p(130,0)).x, p.y);
            this.roomPublic.cardNumView.setPosition(pp);
        }
    },
    handler_server_game_end_bc: function (ackGameEndJS, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var self = this;
            var ackGameEnd = ackGameEndJS.gameend;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();

            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.gameend_showFinalGameEnd(ackGameEndJS);
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), show_liuju, show_end_score, update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    gameend_showFinalGameEnd: function (ackGameEnd) {
        this.room_Action.setReady2Visible(true);
        var result = new JieSuan();
        result.setName("reset_remove");
        result.init(ackGameEnd);
        this.addChild(result, 100000);
    },

    timeEnd: function (dt) {
        if (MJModel.isEnd)return;
        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    //隐藏聊天和声音按钮
    hideChatAndSoundBtn: function () {
        cc.log("lin=hideChatAndSoundBtn=1");
        if (this._fangZuoBi && this.room_Action) {
            cc.log("lin=hideChatAndSoundBtn=2");
            this.room_Action.btns["sound"].setVisible(false);
            this.room_Action.btns["chat"].setVisible(false);
            if (this.pre_scene) {
                cc.log("lin=hideChatAndSoundBtn=3");
                this.pre_scene.btns["sound"].setVisible(false);
                this.pre_scene.btns["chat"].setVisible(false);
            }
        }
    },

    //刷新第一个进入房间的的头像和名字
    reflashPlayUI: function () {
        if (this.pre_scene) {
            this.pre_scene.handler_server_table_info_uc();
        }
    },

    isRecordShow: false,
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "中原麻将 · 4人";
        if (MJModel.mj_roomType == 1) {
            gameType = "中原麻将 · 3人";
        }

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        cc.director.getRunningScene().addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        //gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "超时次数"];
            //次数
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    //杠分不立即结算
    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {

    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        this.room_Tip.showTextTip("");
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setOperator(-1);
        }

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);

        if ((OpType & PZHActionType.TYPE_BAOTING) == PZHActionType.TYPE_BAOTING) {
            var player = MJModel.players[seatid];
            if (player && canDelay) {
                this.room_Tip.showSimpleEffect(pos, out_pos, PZHActionType.TYPE_BAOTING, "baoting");
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("zhumadian/sound/operator/%1_%2.mp3"), player.sex == SEX_ID.SEX_FEMALE ? "w" : "m", "ting"));

            }
            this.players[pos].setLiangPaiVisible(true);
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 1;
                this.myselfOpenOutCard(false);
            }
            return;
        }
        this._super(data, canDelay);
    },

    handler_server_out_card_bc: function (data, canDelay) {
        this._super(data, canDelay);
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        if (MJModel.isMyPlayer(seatId) && MJModel.mj_lockcard_type == 1) {
            MJModel.mj_lockcard_type = 2;
        }
    },
    handler_server_game_start_bc: function (data, canDelay) {
        this._curLaizi = -1;
        this._super(data, canDelay);
    },
    myselfOpenOutCard: function (IsMoCard, showTip) {
        this._super(IsMoCard, showTip);
        this.checkAutoOutCard();
    },
    checkAutoOutCard: function () {
        if (MJModel.isMyPlayer(MJModel.cur_seat) && this.room_Card.isDuoPai(0) && MJModel.mj_lockcard_type == 2) {
            this.autoOutCard();
        }
    },
    autoOutCard: function () {
        this.schedule(this.autoOutCardTimeOut, 0.5);
    },
    autoOutCardTimeOut: function (dt) {
        if (MJModel.TouPiaoING == true) return;//投票期间 该功能不起作用
        this.unschedule(this.autoOutCardTimeOut);
        var operate = MJModel.curOperate;
        if (( operate & ActionType.TYPE_LISTEN) == ActionType.TYPE_LISTEN) {
            operate = operate - ActionType.TYPE_LISTEN;
        }

        if (operate > 0) {
            return;
        }
        sendOutCard(MJModel.curOperateCard);
    },
    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("zhumadian/sound/chupai/%1_%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", Utils.toHex2(card)));
        } else {
            this._super(sex, card);
        }
    }
    ,
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            effect = "gang";
            if ((OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                effect = "angang";
            } else if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                var zimo = this.room_Card.isDuoPai(pos);
                effect = "hu";
                if (zimo) {
                    effect = "zimo";
                }
            } else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                effect = "peng";
            } else if ((OpType & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI || (OpType & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI || (OpType & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                effect = "chi";
            }
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("zhumadian/sound/operator/%1_%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", effect));
        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },
    startTimeEnd1: function () {
        // PlatformHelper.showToast("有人通知房间结束！");
        this.schedule(this.timeEnd, 0.2);
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            var packet = {
                "gameend": {
                    "UserCard": [{
                        "ChangeableCardsLen": 1,
                        "ChangeableCards": [4],
                        "FixedCardsLen": 4,
                        "stFixedCards": [{"CardData": 22, "state": 1, "chairID": 2, "LaiziNum": null}, {
                            "CardData": 17,
                            "state": 1,
                            "chairID": 2,
                            "LaiziNum": null
                        }, {"CardData": 25, "state": 1, "chairID": 1, "LaiziNum": null}, {
                            "CardData": 35,
                            "state": 1,
                            "chairID": 3,
                            "LaiziNum": null
                        }]
                    }, {
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [2, 2, 19, 19, 20, 22, 23],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 6, "state": 1, "chairID": 2, "LaiziNum": null}, {
                            "CardData": 36,
                            "state": 1,
                            "chairID": 2,
                            "LaiziNum": null
                        }]
                    }, {
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [20, 20, 23, 23, 23, 40, 40],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 39, "state": 1, "chairID": 3, "LaiziNum": null}, {
                            "CardData": 3,
                            "state": 1,
                            "chairID": 1,
                            "LaiziNum": null
                        }]
                    }, {
                        "ChangeableCardsLen": 8,
                        "ChangeableCards": [5, 5, 5, 18, 19, 20, 21, 21],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 8, "state": 1, "chairID": 2, "LaiziNum": null}, {
                            "CardData": 34,
                            "state": 1,
                            "chairID": 1,
                            "LaiziNum": null
                        }]
                    }],
                    "Score": [-12, -7, -7, 26],
                    "EndState": 0,
                    "EndGangInfo": [{"Gang": [], "TotalGangScore": 0}, {"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [],
                        "TotalGangScore": 0
                    }, {"Gang": [], "TotalGangScore": 0}],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 4,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 1,
                        "SpecialType": 4,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 2,
                        "SpecialType": 4,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {"chairid": 3, "SpecialType": 1, "FanNum": 1, "addfan": [], "hucard": 18, "DianPao": []}],
                    "money": [99988, 99993, 99993, 100026]
                }, "xiapao": [2, 3, 3, 3], "hufen": [-12, -7, -7, 26]
            };
            this.handler_server_game_end_bc(packet, true);
        } else if (tempCount == 5 && false) {
            this._showPiaoLayer();
        }
    },
});

var sendTianMenPaoNums = function (v) {
    var packet = createPacket("proto.game.zhumadianmj.ReqChoosePiao");
    packet.choose = v;
    sendPacket(packet, CMD.CLIENT_MJ_CHOOSE_PIAO);
};
var resetSize = function (bg) {
    var s
};
var JingShanPiaoLayer = cc.Layer.extend({
    ctor: function () {
        this._super();
    },
    initPiao: function () {
        var self = this;
        var size = cc.director.getWinSize();
        var by = 150;
        var strs = ["zhumadian/chuzhen/buchu", "zhumadian/chuzhen/chu1", "zhumadian/chuzhen/chu2", "zhumadian/chuzhen/chu3"];
        var dx = 200;
        var bx = size.width / 2 - dx * (strs.length - 1) * 0.5;
        for (var i = 0; i < strs.length; i++) {
            var submitBtn = new ccui.Button(getResPath(strs[i] + "1.png"), getResPath(strs[i] + "2.png"));
            submitBtn.setTag(i);
            submitBtn.setPosition(bx + i * dx, by);
            submitBtn.addClickEventListener(function (sender, evt) {
                sendTianMenPaoNums(sender.getTag());
            });
            this.addChild(submitBtn);
        }
    },
});

var JieSuan = cc.Layer.extend({
    continueClick: function (ref) {
        if (MJModel.isOnVideo)return;

        if (MJModel.currentCount >= MJModel.RoomCountSum) {
            MJModel.mj_table.startTimeEnd1();
        } else {
            this.removeFromParent();
        }
        sendReady();
        MJModel.state = MJ_STATUS.MJ_GAME_FREE;
    },
    init: function (ackGameEnd) {
        var size = cc.director.getWinSize();


        var layout = new ccui.Layout();
        layout.setTouchEnabled(true);
        layout.setContentSize(size);
        layout.setAnchorPoint(0.0, 0.0);
        layout.setSwallowTouches(false);
        this.addChild(layout, 400);

        var uiJson = ccs.load(getResPath("zhumadian/result/jiesuan.json"));
        var uiNode = uiJson.node;
        uiNode.setPosition(size.width / 2, size.height / 2);
        this.addChild(uiNode);
        var bg = uiNode;

        //继续游戏
        var continueBtn = bg.getChildByName("continue");
        continueBtn.addClickEventListener(this.continueClick.bind(this));

        var huType = [0, 0, 0, 0];
        var huCards = [0, 0, 0, 0];
        var addFanType = [[], [], [], []];
        for (var i = 0; i < ackGameEnd.gameend.faninfo.length; i++) {
            var specialType = ackGameEnd.gameend.faninfo[i].SpecialType;
            huType[i] = specialType;
            huCards[i] = ackGameEnd.gameend.faninfo[i].hucard;
            // for (var j = 0; j < ackGameEnd.gameend.faninfo[i].addfan.length; j++) {
            //     var add_fan = ackGameEnd.gameend.faninfo[i].addfan[j];
            //     var add_type = add_fan.AddType;
            //     var add_value = add_fan.AddNum;
            //     if (HuType[add_type] && add_value > 0) {
            //         addFanType[i].push(HuType[add_type] + " x" + add_value);
            //     }
            // }
        }
        var gangScore = [0, 0, 0, 0];
        for (var i = 0; i < ackGameEnd.gameend.EndGangInfo.length; i++) {
            var gang_score = ackGameEnd.gameend.EndGangInfo[i].TotalGangScore;
            gangScore[i] = gang_score;
        }


        var count = 0;
        var itemNode = bg.getChildByName("players");
        for (var i = 0; i < MJModel.Play_num; i++) {
            var seatid = i;
            var player = MJModel.players[seatid];
            var item_node = itemNode.getChildByName("item" + count);
            item_node.removeAllChildren();
            if (MJModel.mj_roomType == 1 && i == 3)continue;
            var item = this.addItem(player.name, player.avatar, ackGameEnd.gameend.UserCard, huType, ackGameEnd.xiapao, gangScore, ackGameEnd.hufen, ackGameEnd.gameend.Score, seatid, huCards, addFanType);
            item_node.addChild(item, -10);
            count++;
        }


        var layout2 = new ccui.Layout();
        layout2.setTouchEnabled(true);
        layout2.setContentSize(size);
        layout2.setAnchorPoint(0.0, 0.0);
        layout2.setSwallowTouches(true);
        layout2.addClickEventListener(function (sender, evt) {
        });
        this.addChild(layout2, -400);
    },

    getXiaPao: function (v) {
        if (v == 0)return "不跑";
        if (v == 1)return "跑一";
        if (v == 2)return "跑二";
        if (v == 3)return "跑三";
    },
    getYaHu: function (v) {
        if (v == 0)return "不压胡";
        if (v == 1)return "压胡边张";
        if (v == 2)return "压胡窟窿";
        if (v == 3)return "压胡单吊";
    },
    getScore: function (v) {
        if (v == 0)return 0;
        if (v < 0)return ";" + Math.abs(v);
        if (v > 0)return ":" + Math.abs(v);
    },
    isValidHu: function (huType) {
        if (huType == 1)return 1;
        if (huType == 2)return 2;
        if (huType == 3)return 3;
        if (huType == 5)return 2;
        if (huType == 6)return 3;
        if (huType == 8)return 1;
        return 0;
    },
    addItem: function (name, avatar, handcards, huType, xiapao, gangfen, hufen, finalScore, seatid, huCards, addFanType) {
        var size = cc.director.getWinSize();
        var uiJson = ccs.load(getResPath("zhumadian/result/jiesuanItem.json"));
        var uiNode = uiJson.node;
        uiNode.getChildByName("name").setString(Utils.parseName(7, name));
        uiNode.getChildByName("name").ignoreContentAdaptWithSize(true);

        var m_pAvatar = Utils.createCircleAvatar(avatar, "Avatars/user4_unlogin.png", getResPath("zhumadian/result/head_bg.png"), cc.size(92, 92));
        uiNode.getChildByName("avatar").addChild(m_pAvatar);

        uiNode.getChildByName("banker").setVisible(MJModel.banker_seatid == seatid);
        uiNode.getChildByName("avatar_fg").setVisible(MJModel.seatid == seatid);

        uiNode.getChildByName("gangfen").ignoreContentAdaptWithSize(true);
        uiNode.getChildByName("gangfen").setString(this.getScore(gangfen[seatid]));

        uiNode.getChildByName("hufen").ignoreContentAdaptWithSize(true);
        uiNode.getChildByName("hufen").setString(this.getScore(hufen[seatid]));

        uiNode.getChildByName("zongfen").ignoreContentAdaptWithSize(true);
        uiNode.getChildByName("zongfen").setString(this.getScore(finalScore[seatid]));

        var huT = this.isValidHu(huType[seatid]);
        uiNode.getChildByName("huType").setVisible(huT != 0);
        if (huT != 0) {
            setSpriteFrame(uiNode.getChildByName("huType"), ("game/jiesuan/huType/" + huT + ".png"));
        }

        var handcard = MJModel.mj_table.room_Card.createEndHandcardLayer(handcards[seatid], huCards[seatid]);
        handcard.setScale(0.45);
        handcard.setAnchorPoint(cc.p(0, 0));
        handcard.setPosition(0, 0);
        var x = (1280 - size.width) / 2 * handcard.getScale();
        handcard.setPosition(x, 0);

        uiNode.getChildByName("handcard").addChild(handcard);

        var addFanLayer = uiNode.getChildByName("addFan");
        addFanLayer.removeAllChildren();
        var curX = 0;
        var curY = 0;
        var dx = 10;
        if (xiapao[seatid] != -1) {
            var label = this.createLable(this.getXiaPao(xiapao[seatid]), curX);
            curX += label.getContentSize().width + dx;
            addFanLayer.addChild(label);
        }

        if (addFanType[seatid].length != 0) {
            for (var i = 0; i < addFanType[seatid].length; i++) {
                var label = this.createLable(addFanType[seatid][i] + " ", curX);
                curX += label.getContentSize().width + 0;
                addFanLayer.addChild(label);
            }
        }
        return uiNode;
    },
    createLable: function (str, x) {
        var label = new cc.LabelTTF(str, "Thonburi", 24);
        label.setColor(cc.color(0x4a, 0x54, 0x50));
        label.setAnchorPoint(cc.p(0, 0.5));
        label.setPosition(x, 0);
        return label;
    },
});