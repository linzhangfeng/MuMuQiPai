loadProtoFile("proto/shuangyashangameproto.proto");

var GameActionType =
{
    TYPE_BAOTING: 0x4000,//报听
};

var selfCMD = {
    SERVER_FOURCARD_HUANGHUANG: 5036, //海底捞月协议
    SERVER_JUSHUQUANSHU: 5083, //刷新当前局数和圈数
    SERVER_REFRESFIXEDCARD_BC: 5089, //刷新碰杠牌
};

var AddFanType = {
    SYS_FAN_TYPE_PINGHU: 0,				//平胡
    SYS_FAN_TYPE_JIAHU: 1,				//夹胡
    SYS_FAN_TYPE_QIDUI: 2,				//七小对
    SYS_FAN_TYPE_HAOHUAQIDUI: 3,		//豪华七小对
    SYS_FAN_TYPE_QINGQIDUI: 4,		    //清一色七小对
    SYS_FAN_TYPE_QINGHAOHUAQIDUI: 5,    //清一色豪华七小对
    SYS_FAN_TYPE_PIAOHU: 6,		        //飘胡
    SYS_FAN_TYPE_QINGPIAOHU: 7,		    //清一色飘胡
    SYS_FAN_TYPE_TEHU: 8,			    //特胡
    SYS_FAN_TYPE_GANGSHANGHUA: 9,		//杠上开花
    SYS_FAN_TYPE_GANGHOUPAO: 10,		//杠后流泪
    SYS_FAN_TYPE_QUEYAOHUYAO: 11,       //缺幺胡幺
    SYS_FAN_TYPE_QINGYISE: 12,			//清一色
    SYS_FAN_TYPE_SHOUBAYI: 13,			//手把一
    SYS_FAN_TYPE_BAOTING: 14,			//报听
    SYS_FAN_TYPE_ZHANLITING: 15,		//站立听
    SYS_FAN_TYPE_HAIDILAOYUE: 16,		//海底捞月
};

var AddFanTypeArray = {
    0: "平胡",
    1: "夹胡",
    2: "七小对",
    3: "豪华七小对",
    4: "清一色七小对",
    5: "清一色豪华七小对",
    6: "飘胡",
    7: "清一色飘胡",
    8: "特胡",
    9: "杠上开花",
    10: "杠后流泪",
    11: "缺幺胡幺",
    12: "清一色",
    13: "手把一",
    14: "报听",
    15: "站立听",
    16: "海底捞月",
};

var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
    HU_HeiMo: 10, //自摸且硬胡
    Hu_RuanMo: 11, //自摸且软胡
};

var PackgName = {
    shuangyashan: 1, //双鸭山玩法
    fulimajiang: 2, //福利麻将玩法
};


var MJTable_ShuangYaShan = MJTable.extend({
    tag: "MJTable_ShuangYaShan",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _curLaizi_bg: null,
    isRecordShow: false,
    _pkg_id: 0,
    maxQuan: 1,
    _curQuan: 1, //当前圈数
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2766 || this._pkg_id == 2690) {
                this._pkg_id = PackgName.shuangyashan;
                MJModel.isDaQuan = true;
                MJModel.mj_roomType = 0;
            } else if (this._pkg_id == 2767 || this._pkg_id == 2691) {
                this._pkg_id = PackgName.shuangyashan;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 0;
            } else if (this._pkg_id == 2768 || this._pkg_id == 2692) {
                this._pkg_id = PackgName.shuangyashan;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 1;
            } else if (this._pkg_id == 2770 || this._pkg_id == 2693) {
                this._pkg_id = PackgName.shuangyashan;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 2;
            } else if (this._pkg_id == 2771 || this._pkg_id == 2694) {
                this._pkg_id = PackgName.fulimajiang;
                MJModel.isDaQuan = true;
                MJModel.mj_roomType = 0;
            } else if (this._pkg_id == 2773 || this._pkg_id == 2695) {
                this._pkg_id = PackgName.fulimajiang;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 0;
            } else if (this._pkg_id == 2774 || this._pkg_id == 2696) {
                this._pkg_id = PackgName.fulimajiang;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 1;
            } else if (this._pkg_id == 2776 || this._pkg_id == 2697) {
                this._pkg_id = PackgName.fulimajiang;
                MJModel.isDaQuan = false;
                MJModel.mj_roomType = 2;
            }
        } catch (e) {
            Log(this, e);
        }
        MJModel.mj_suport_fangyan = 0;
        MJModel.mj_sound_use = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_gps_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.choiceMoreGang_stlye = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.shareType = 1;

        //1.默认2d界面，简洁，绿色桌布 背景音乐默认舒缓
        MJModel.mj_bg_use = 1;
        MJModel.mj_table_view = "2d";
        MJModel.mj_font = "jianjie";
        MJModel.mj_style = "jingdian";
        MJModel.yinyue = "suhuan";

        var size = cc.director.getWinSize();
        this._init_extend();
        this._super();
        this._init_ui();
        var self = this;
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }
        this._setNewJuShu();
        // this.schedule(this.test, 1.0);
    },
    updateBg: function (isInit) {
        this._super(isInit);
        var size = cc.director.getWinSize();
        if (this.getChildByName("jushubg")) {
            this.getChildByName("jushubg").setVisible(MJModel.mj_bg_use == 1);
        }
        if (this.getChildByName("quanshubg")) {
            this.getChildByName("quanshubg").setVisible(MJModel.mj_bg_use == 1);
        }
        if (this.getChildByName("shengyubg")) {
            this.getChildByName("shengyubg").setVisible(MJModel.mj_bg_use == 1);
        }

        if (this.room_Info) this.room_Info.showCardNums(this.room_Info.curCardNums);
    },
    _setNewJuShu: function () {
        var size = cc.director.getWinSize();

        var bgwidth = 120;
        var bgheight = 35;
        if (!MJModel.isDaQuan) {
            var bg = new ccui.ImageView(getResPath("RoomMJ/bg.9.png"));
            bg.setScale9Enabled(true);
            bg.setContentSize(cc.size(bgwidth, bgheight));
            bg.setPosition(size.width / 2 - 150, size.height / 2 + 15);
            this.addChild(bg, 99);
            bg.setName("jushubg");
            bg.setVisible(MJModel.mj_bg_use == 1);

            var label = new cc.LabelTTF("局数:", "Arial", 24);
            label.setColor(cc.color(108, 168, 236));
            label.setPosition(cc.p(8, bg.getContentSize().height / 2));
            label.setAnchorPoint(0, 0.5);
            bg.addChild(label);

            this.jushu = new cc.LabelTTF("1/1", "Arial", 24);
            this.jushu.setColor(cc.color(230, 219, 116));
            this.jushu.setPosition(cc.p(bg.getContentSize().width / 2 + 30, bg.getContentSize().height / 2));
            bg.addChild(this.jushu);
        }

        if (MJModel.isDaQuan) {
            var bg = new ccui.ImageView(getResPath("RoomMJ/bg.9.png"));
            bg.setScale9Enabled(true);
            bg.setContentSize(cc.size(bgwidth, bgheight));
            // bg.setVisible(false);
            bg.setPosition(size.width / 2 - 150, size.height / 2 + 15);
            this.addChild(bg, 99);
            bg.setName("quanshubg");
            bg.setVisible(MJModel.mj_bg_use == 1);

            var label = new cc.LabelTTF("圈数:", "Arial", 24);
            label.setColor(cc.color(108, 168, 236));
            label.setPosition(cc.p(8, bg.getContentSize().height / 2));
            label.setAnchorPoint(0, 0.5);
            bg.addChild(label);

            this.quanshu = new cc.LabelTTF("1/8", "Arial", 24);
            this.quanshu.setColor(cc.color(230, 219, 116));
            this.quanshu.setPosition(cc.p(bg.getContentSize().width / 2 + 30, bg.getContentSize().height / 2));
            bg.addChild(this.quanshu);
        }

        {
            var bg = new ccui.ImageView(getResPath("RoomMJ/bg.9.png"));
            bg.setScale9Enabled(true);
            bg.setContentSize(cc.size(bgwidth, bgheight));
            // bg.setVisible(false);
            bg.setPosition(size.width / 2 + 150, size.height / 2 + 15);
            this.addChild(bg, 99);
            bg.setName("shengyubg");
            bg.setVisible(MJModel.mj_bg_use == 1);

            var label = new cc.LabelTTF("剩:", "Arial", 24);
            label.setColor(cc.color(108, 168, 236));
            label.setPosition(cc.p(8, bg.getContentSize().height / 2));
            label.setAnchorPoint(0, 0.5);
            bg.addChild(label);

            var label = new cc.LabelTTF("张", "Arial", 24);
            label.setColor(cc.color(108, 168, 236));
            label.setPosition(cc.p(bg.getContentSize().width - 8, bg.getContentSize().height / 2));
            label.setAnchorPoint(1, 0.5);
            bg.addChild(label);

            this.shengyu = new cc.LabelTTF("30", "Arial", 24);
            this.shengyu.setColor(cc.color(230, 219, 116));
            this.shengyu.setPosition(cc.p(bg.getContentSize().width / 2 + 5, bg.getContentSize().height / 2));
            bg.addChild(this.shengyu);
        }

    },
    _init_ui: function () {
        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting1.png"), "");
            this.room_Action.actions["ting"] = btn;
            btn.setName("ting");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }

        if (MJModel.isOnVideo && this.isSupportVideoAction()) {
            for (var i = 0; i < 4; i++) {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath("RoomMJ/action/baoting1.png"), getResPath("RoomMJ/action/baoting1.png"), "");
                this.room_Action.actions["ting"] = btn;
                btn.setName("ting");
                btn.setVisible(false);
                btn.setTag(0);
                this.room_Action_video.addChild(btn);

                this.room_Action_video.actions[i]["ting"] = btn;
                this.room_Action_video.opBtns[i].push(btn);
            }
        }
    },
    getMjTypePath: function () {
        return getResPath("shuangyashan/name.png");
    },
    _init_extend: function () {
        var self_table = this;

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            this.removeChildByName("ChooseGang_selectLayer");
            if (operat != -1 && (operat & GameActionType.TYPE_BAOTING) == GameActionType.TYPE_BAOTING) {
                if (this.actions["ting"]) {
                    this.actions["ting"].setVisible(true);
                }
            }

            super_setOperator.call(this, operat);
        };

        var super_setOperator_v = MJActionVideo.prototype.setOperator;
        MJActionVideo.prototype.setOperator = function (pos , operat, operat2) {
            super_setOperator_v.call(this, pos, operat);

            if (operat != -1 && (operat & GameActionType.TYPE_BAOTING) == GameActionType.TYPE_BAOTING) {
                if (this.actions[pos]["ting"]) {
                    this.actions[pos]["ting"].setVisible(true);
                }
            }
            this.reflashOpBtns(pos);
            return true;
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);
            if (name == "ting") {
                this.setOperator(-1);
                MJModel.isLiangPai = 1;
                MJModel.mj_lockcard_type = 1;
                self_table.myselfOpenOutCard();
                self_table.room_Card.setSomeCardClickState();
                return;
            }
            super_btnCallback.call(this, ref);
        };

        MJPlayer.prototype.setLiangPaiVisible = function (v) {
            if (!this.liangpai_flag) {
                this.liangpai_flag = new cc.Sprite(getResPath("shuangyashan/flag/ting.png"));
                this.liangpai_flag.setVisible(false);
                if (this.pid == 1) {
                    this.liangpai_flag.setPosition(cc.p(0, 30));
                }
                else {
                    this.liangpai_flag.setPosition(cc.p(this.m_size.width, 30));
                }
                this.addChild(this.liangpai_flag, 1);
            }
            if (this.liangpai_flag) {
                this.liangpai_flag.setVisible(v);
            }
        };
        var superreset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function (allClean, isGameStart) {
            superreset.call(this);
            this.setLiangPaiVisible(false);
        };

        var super_initPublic = MJPublic.prototype.initPublic;
        MJPublic.prototype.initPublic = function () {
            super_initPublic.call(this);
            if (MJModel.isDaQuan) {
                this.code.setPositionX(this.code.getPositionX() + 100);
            }
        };

        var super_updateJuShu = MJPublic.prototype.updateJuShu;
        MJPublic.prototype.updateJuShu = function () {
            if (MJModel.isDaQuan) {
                return;
            }
            super_updateJuShu.call(this);
        };

        var super_showJuShuTip = MJPublic.prototype.showJuShuTip;
        MJPublic.prototype.showJuShuTip = function () {
            if (MJModel.isDaQuan) {
                return;
            }
            super_showJuShuTip.call(this);
            if (self_table.jushu) {
                self_table.jushu.setString(MJModel.currentCount + "/" + MJModel.RoomCountSum);
            }
        };

        MJPublic.prototype.setjushu = function (quanshu, jushu) {
            this.jushu.setString("局数:" + jushu + "  圈数:" + quanshu + "/" + self_table.maxQuan);
            if (self_table.jushu) {
                self_table.jushu.setString(jushu);
            }
            if (self_table.quanshu) {
                self_table.quanshu.setString(quanshu + "/" + self_table.maxQuan);
            }
        };

        var super_initUI = CommonTotalResult.prototype.initUI;
        CommonTotalResult.prototype.initUI = function (gameType, roomId, time, startTime, countSum, count) {
            super_initUI.call(this, gameType, roomId, time, startTime, countSum, count);
            if (MJModel.isDaQuan) {
                this.rootNode.getChildByName("jushu").setVisible(false);
            }
        };

        MJPublic.prototype.showCardNum = function (num) {
            if(num >= 0){
                this.cardNumView.setVisible(true);
                this.cardNumText.setString(num);
            }else {
                this.cardNumText.setString(0);
                this.cardNumView.setVisible(false);
            }

            if (self_table.shengyu) {
                self_table.shengyu.setString(num >= 0 ? num : 0);
            }
            if (MJModel.mj_bg_use == 1) {
                this.cardNumView.setVisible(false);
            }
        };

        var super_getScale_new = MJConfig.getScale_new;
        MJConfig.getScale_new = function (pos, type, index, isCard) {
            if (type == CardType.Card_Peng && isCard == false) {
                return 0.78;
            }
            return super_getScale_new.call(this, pos, type, index, isCard);
        };

    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.shuangyashanmj.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.shuangyashanmj.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }

        if (cmd == selfCMD.SERVER_FOURCARD_HUANGHUANG) {
            this._handler_server_haidi_cards(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_JUSHUQUANSHU) {
            this._handler_server_quanshu_bc(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_REFRESFIXEDCARD_BC) {
            this._handler_server_refreshFixedcard_bc(jpacket, canDelay);
            return;
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },

    _handler_server_haidi_cards: function (data, canDelay) {
        var packet = parsePacket("proto.game.shuangyashanmj.AckLastFourCard", data);
        var stLastFourCard = packet.stLastFourCard;

        this.room_Tip.showMyTip("开始分张");
        var leftCardNum = this.room_Info.curCardNums - stLastFourCard.length;
        if (leftCardNum != null) this.room_Info.showCardNums(leftCardNum);
        this.room_Card.removePublicCardByNums(stLastFourCard.length, false);
        for (var i in stLastFourCard) {
            var chairid = stLastFourCard[i].ChairID;
            var card = stLastFourCard[i].Card;
            var pos = MJModel.getPosBySeatid(chairid);
            this.room_Card.initMoCard(pos, card, false);
        }
        MJModel.isEnterWait = true;
        var move_end = cc.callFunc(function () {
            MJModel.isEnterWait = false;
        });
        this.runAction(cc.sequence(cc.delayTime(2), move_end));
    },

    _handler_server_refreshFixedcard_bc:function(data, canDelay) {
        var jpacket = parsePacket("proto.game.shuangyashanmj.AckRefreshFixedCards", data);
        var chair_id = jpacket.chair_id;
        var fixed_cards = jpacket.fixed_cards;
        var groupcard_size = fixed_cards.length;
        var pos = MJModel.getPosBySeatid(chair_id);

        try {
            for (var i in this.room_Card.peng_card[pos]) {
                this.room_Card.peng_card[pos][i].removeFromParent(true);
            }
        } catch (e) {

        }

        this.room_Card.peng_card[pos] = [];

        for (var j = 0; j < groupcard_size; j++) {
            var specialCard = fixed_cards[j].SpecialCard;
            var cardData = fixed_cards[j].CardData;
            var state = fixed_cards[j].state;
            var chairId = fixed_cards[j].chairID;
            var out_pos = MJModel.getPosBySeatid(chairId);

            if ((state & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                this.room_Card.addPengCard(pos, PengType.Peng_Peng, cardData, out_pos, state, specialCard);
            }
            else if ((state & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                this.room_Card.addPengCard(pos, PengType.Peng_AnKang, cardData, out_pos, state, specialCard);
            }
            else if ((state & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI) {
                this.room_Card.addPengCard(pos, PengType.Chi_L, cardData, out_pos, state, specialCard);
            }
            else if ((state & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI) {
                this.room_Card.addPengCard(pos, PengType.Chi_M, cardData, out_pos, state, specialCard);
            }
            else if ((state & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                this.room_Card.addPengCard(pos, PengType.Chi_R, cardData, out_pos, state, specialCard);
            }
            else {
                this.room_Card.addPengCard(pos, PengType.Peng_Kang, cardData, out_pos, state, specialCard);
            }
        }
        for (var i = 0; i < this.room_Card.peng_card.length; i++) {
            for (var j = 0; j < this.room_Card.peng_card[i].length; j++) {
                try {
                    var peng = this.room_Card.peng_card[i][j];
                    peng.reflashUI();
                    peng.setPosition(MJConfig.getPengKangCardPos(i, j));
                    peng.setScale(MJConfig.getScale_new(i, CardType.Card_Peng, j, false));
                    this.reorderChild(peng, MJConfig.getPengKangCardOrder(i, j));
                } catch (e) {

                }
            }
        }
    },

    _handler_server_quanshu_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.shuangyashanmj.AckPuQuan", data);
        this._set_public(packet.quanshu, packet.jushu);
    },

    onEnter: function () {
        this._super();
        this._set_public(1, 1);
    },

    _set_public: function (curQuan, curQu) {
        if (this.roomPublic && MJModel.isDaQuan) {
            this.roomPublic.setjushu(curQuan, curQu);
            if (curQuan != this._curQuan && curQuan != 1) {
                this.room_Tip.showMyTip("开始第" + curQuan + "圈");
            }
            this._curQuan = curQuan;
        }
    },

    handler_server_mo_card_bc: function (data, canDelay) {
        var userGetCard = parsePacket("proto.game.AckUserGetCard", data);
        if (userGetCard.LockLaizi) {
            MJModel.mj_lockcard_type = 2;
        }

        this._super(data, canDelay);
    },

    handler_server_out_card_bc: function (data, canDelay) {
        this._super(data, canDelay);
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var da_type = userOutCard.da_type;
        var pos = MJModel.getPosBySeatid(seatId);
        if (da_type == 1) {
            //报听
            if (MJModel.isMyPlayer(seatId)) {
                MJModel.mj_lockcard_type = 2;
            }
            this.players[pos].setLiangPaiVisible(true);
            var player = MJModel.players[seatId];
            if (player && canDelay) {
                // this.room_Tip.showSimpleEffect(pos, pos, GameActionType.TYPE_BAOTING, "baoting");
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("shuangyashan/sound/operator/%1_%2.mp3"), player.sex == SEX_ID.SEX_FEMALE ? "w" : "m", "ting"));

            }
        }
    },

    handler_server_scene_info_uc: function (hubei_scene, canDelay) {
        var ackGameFree = hubei_scene.GameSence;
        var baoting = hubei_scene.State;
        for (var i = 0; i < baoting.length; i++) {
            if (baoting[i] == 1) {
                var pos = MJModel.getPosBySeatid(i);
                this.players[pos].setLiangPaiVisible(true);
                if (MJModel.isMyPlayer(i)) {
                    MJModel.mj_lockcard_type = 2;
                }
            }
        }

        if (hubei_scene.suo && hubei_scene.suo[MJModel.seatid]) {
            MJModel.mj_lockcard_type = 2;
        }

        this._super(ackGameFree, canDelay);
        this._setGameType();
        var jushu = 1;
        var quanshu = 1;
        if (hubei_scene.jushu)jushu = hubei_scene.jushu;
        if (hubei_scene.quanshu)quanshu = hubei_scene.quanshu;
        this._set_public(quanshu, jushu);
    },

    _setGameType: function () {
        var play_id = [];

        if (MJModel.mj_roomType == 1) {
            play_id.push("3人玩法");
        }
        if (MJModel.mj_roomType == 2) {
            play_id.push("2人玩法");
        }

        if (MJModel.RoomConfigID.indexOf(84720001) != -1) {
            play_id.push("点炮包三家");
        }
        if (MJModel.RoomConfigID.indexOf(84720002) != -1) {
            play_id.push("点炮包一家");
        }
        if (MJModel.RoomConfigID.indexOf(84720003) != -1) {
            play_id.push("传统玩法");
        }

        if (MJModel.RoomConfigID.indexOf(84900001) != -1) {
            play_id.push("2闷");
        }
        if (MJModel.RoomConfigID.indexOf(84900002) != -1) {
            play_id.push("4闷");
        }
        if (MJModel.RoomConfigID.indexOf(84900003) != -1) {
            play_id.push("无限闷");
        }

        if (MJModel.RoomConfigID.indexOf(85260001) != -1) {
            play_id.push("无小胡");
        }
        if (MJModel.RoomConfigID.indexOf(85260002) != -1) {
            play_id.push("有小胡");
        }

        if (MJModel.RoomConfigID.indexOf(85270001) != -1) {
            play_id.push("顺序胡牌");
        }
        if (MJModel.RoomConfigID.indexOf(85270002) != -1) {
            play_id.push("大胡优先");
        }

        if (MJModel.RoomConfigID.indexOf(85330001) != -1) {
            play_id.push("下蛋");
        }
        if (MJModel.RoomConfigID.indexOf(85330002) != -1) {
            play_id.push("抢杠胡");
        }

        if (MJModel.RoomConfigID.indexOf(84890001) != -1) {
            this.maxQuan = 4;
        }

        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    myselfOpenOutCard: function (IsMoCard, showTip) {
        this._super(IsMoCard, showTip);
        this.checkAutoOutCard();
    },
    checkAutoOutCard: function () {
        if (MJModel.isMyPlayer(MJModel.cur_seat) && this.room_Card.isDuoPai(0) && MJModel.mj_lockcard_type == 2) {
            this.autoOutCard();
        }
    },
    autoOutCard: function () {
        this.schedule(this.autoOutCardTimeOut, 0.5);
    },
    autoOutCardTimeOut: function (dt) {
        if (MJModel.TouPiaoING == true) return;//投票期间 该功能不起作用
        this.unschedule(this.autoOutCardTimeOut);
        var operate = MJModel.curOperate;
        if (( operate & ActionType.TYPE_LISTEN) == ActionType.TYPE_LISTEN) {
            operate = operate - ActionType.TYPE_LISTEN;
        }

        if (operate > 0) {
            return;
        }
        sendOutCard(MJModel.curOperateCard);
    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        this.room_Tip.showTextTip("");
        this.check_tip_operate_card(0, 0);
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;
        var specialCard = ackBcOpResult.SpecialCard;

        var scores = ackBcOpResult.Score;
        // this.handler_gang_scores(scores, OpType, OpType2, canDelay);

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setOperator(-1);
        }

        if (this.room_Action_video) this.room_Action_video.reset();

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);

        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
            this.room_Info.showDirectionTip(-1);
            this.room_Info.stopTime();
            MJModel.canTouchCard = false;
            //抢弯杠
            if ((OpType2 && OpType2 == 5)) {
                this.room_Card.changeWanGang(out_pos, PengType.Peng_Peng, card);
                if (this.room_Card.isDuoPai(out_pos)) this.room_Card.removeHandCard(out_pos, card, 1);
            }
            //抢直杠
            if ((OpType2 && OpType2 == 11)) {
                var ok = this.room_Card.changeZhiGang(out_pos, PengType.Peng_Peng, card);
                if (ok) {
                    this.room_Card.initMoCard(out_pos, (out_pos == 0 || MJModel.isOnVideo ) ? card : 0);
                    this.room_Card.initMoCard(out_pos, (out_pos == 0 || MJModel.isOnVideo ) ? card : 0);
                    this.room_Card.initMoCard(out_pos, (out_pos == 0 || MJModel.isOnVideo ) ? card : 0);
                    this.room_Card.reflashHandCard(out_pos, true, false);
                }
            }

            if ((OpType2 && OpType2 == 5) || (OpType2 && OpType2 == 11)) {
                //避免双抢杠的时候 会出两次牌
                if (this.room_Card.out_card[out_pos].length == 0 || this.room_Card.out_card[out_pos][this.room_Card.out_card[out_pos].length - 1].getValue() != card) {
                    this.room_Card.addOutCard(out_pos, card);
                }
            }

            var zimo = this.room_Card.isDuoPai(pos);
            var husound = "hu";
            if (zimo) {
                husound = "zimo";
            }

            var hueffect = [];
            var hutype = ackBcOpResult.cardDel;
            for (var i in hutype) {
                switch (hutype[i]) {
                    case AddFanType.SYS_FAN_TYPE_GANGSHANGHUA:
                        hueffect.push("gangshangkaihua");
                        break;
                    case AddFanType.SYS_FAN_TYPE_HAIDILAOYUE:
                        hueffect.push("haidilaoyue");
                        break;
                    case AddFanType.SYS_FAN_TYPE_JIAHU:
                        hueffect.push("jiahu");
                        break;
                    case AddFanType.SYS_FAN_TYPE_GANGHOUPAO:
                        hueffect.push("liulei");
                        break;
                    case AddFanType.SYS_FAN_TYPE_PIAOHU:
                        hueffect.push("piaohu");
                        break;
                    // case AddFanType.SYS_FAN_TYPE_PIHU:
                    //     hueffect.push("pihu");
                    //     break;
                    case AddFanType.SYS_FAN_TYPE_QINGYISE:
                        hueffect.push("qingyise");
                        break;
                    case AddFanType.SYS_FAN_TYPE_QIDUI:
                        hueffect.push("qixiaodui");
                        break;
                    case AddFanType.SYS_FAN_TYPE_QUEYAOHUYAO:
                        hueffect.push("queyaojiu");
                        break;
                    case AddFanType.SYS_FAN_TYPE_SHOUBAYI:
                        hueffect.push("shoubayi");
                        break;
                    case AddFanType.SYS_FAN_TYPE_TEHU:
                        hueffect.push("tehu");
                        break;

                    default:
                        break;
                }
            }

            var player = MJModel.players[seatid];
            if (player && canDelay) {
                this.handler_op_sound(pos, player.sex, OpType, OpType2, husound);
                if (hueffect.length == 0) {
                    this.handler_op_effect(pos, out_pos, player.sex, OpType, OpType2, husound);
                } else {
                    for (var i = 0; i < hueffect.length; i++) {
                        this.showHuEffect(pos, out_pos, hueffect[i], i);
                    }
                    MJModel.isEnterWait = true;
                    var move_end = cc.callFunc(function () {
                        MJModel.isEnterWait = false;
                    });
                    this.runAction(cc.sequence(cc.delayTime(hueffect.length), move_end));
                }
            }

            return;
        }

        this._super(data, canDelay);
    },

    handler_op_effect: function (pos, out_pos, sex, OpType, OpType2, effect) {
        // this.room_Tip.showEffect(pos, OpType, this.room_Card.isDuoPai(pos));
        this.room_Tip.showEffect1(pos, out_pos, OpType, effect);
        // this.room_Tip.showSimpleEffect(pos, out_pos, OpType, effect);
    },

    showHuEffect: function (pos, out_pos, effect, delaytime) {
        var callback = cc.callFunc(function () {
            try {
                var begin = MJConfig.getOperatorTipPos(pos);

                var armature = null;
                var name = "";

                //杠上开花
                if (effect == "gangshangkaihua") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/gangshangkaihua/effects_sysmj_fontgangshangkaihua.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontgangshangkaihua");
                }
                //海底捞月
                else if (effect == "haidilaoyue") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/haidilaoyue/effects_sysmj_fonthaidilaoyue.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fonthaidilaoyue");
                }
                //夹胡
                else if (effect == "jiahu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/jiahu/effects_sysmj_fontjiahu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontjiahu");
                }
                //流泪
                else if (effect == "liulei") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/liulei/effects_sysmj_fontliulei.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontliulei");
                }
                //飘胡
                else if (effect == "piaohu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/piaohu/effects_sysmj_fontpiaohu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontpiaohu");
                }
                //屁胡
                else if (effect == "pihu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/pihu/effects_sysmj_fontpihu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontpihu");
                }
                //清一色
                else if (effect == "qingyise") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/qingyise/effects_sysmj_fontqingyise.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontqingyise");
                }
                //七小对
                else if (effect == "qixiaodui") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/qixiaodui/effects_sysmj_fontqixiaodui.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontqixiaodui");
                }
                //缺幺九
                else if (effect == "queyaojiu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/queyaojiu/effects_sysmj_fontqueyaojiu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontqueyaojiu");
                }
                //手把一
                else if (effect == "shoubayi") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/shoubayi/effects_sysmj_fontshoubayi.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fontshoubayi");
                }
                //特胡
                else if (effect == "tehu") {
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("shuangyashan/effect/tehu/effects_sysmj_fonttehu.ExportJson"));
                    armature = new ccs.Armature("effects_sysmj_fonttehu");
                }

                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);
                            armature.setPosition(begin);
                            this.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                    armature.setName("hu_effect");
                    return armature;
                }
            } catch (e) {
                Log(this, e);
            }
        }, this);

        this.runAction(cc.sequence(cc.delayTime(delaytime), callback));
    },

    _showNiaoEffect: function (seatid, cardList, canDelay) {
        if (cardList.length == 0) return;
        var pos = MJModel.getPosBySeatid(seatid);
        // if (canDelay == false) {
        //     if (cardList.length > 0)this._initZhongNiaoCard(pos, cardList);
        //     return;
        // }
        this.room_Tip.reset();
        var self = this;
        //结束亮马牌动画
        var size = cc.director.getWinSize();
        var dx = 100;
        var bg = new cc.Sprite(getResPath("shuangyashan/flag/niao_bg2.png"));
        bg.setPosition(size.width / 2, size.height / 2);
        bg.setScaleY(0.7);
        this.room_Card.addChild(bg, 10000);
        bg.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));

        // var bg = new cc.Sprite(getResPath("shuangyashan/flag/niao_effect.png"));
        // bg.setPosition(size.width / 2, size.height / 2 + 100);
        // this.room_Card.addChild(bg, 10000);
        // bg.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));

        var bx = size.width / 2 - dx * (cardList.length - 1) / 2;
        for (var j = 0; j < cardList.length; j++) {
            var card = new MJCard();
            card.setValue(cardList[j], 0, CardType.Card_Hand, 0);
            card.setPosition(bx + dx * j, size.height / 2);
            self.room_Card.addChild(card, 10000 + cardList.length);
            // var p = MJConfig.getHuCardPos(pos, j);
            // var s = MJConfig.getScale_new(pos, CardType.Card_Hu, j, true);
            // card.runAction(cc.sequence(cc.delayTime(1 + 0), cc.spawn(cc.moveTo(0.17, p), cc.scaleTo(0.17, s)), cc.removeSelf()));
            card.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
        }


        // var callBack2 = cc.callFunc(function () {
        //     if (cardList.length > 0)self._initZhongNiaoCard(pos, cardList);
        // });
        // this.runAction(cc.sequence(cc.delayTime(1.17), callBack2));
    },

    _initZhongNiaoCard: function (pos, cardList) {
        for (var i = 0; i < cardList.length; i++) {
            var card = this.room_Card.addHuCard(pos, cardList[i]);
        }
    },

    handler_server_game_end_bc: function (hubeiGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = hubeiGameend.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();

            //亮鸟牌
            var showniaocard = cc.callFunc(function () {
                if (canDelay == false)return;
                self._showNiaoEffect(0, hubeiGameend.card, canDelay);
            });

            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new SYSMJResult();
                    result.updateContentView(hubeiGameend);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.room_Action.setReady2Visible(true);
                }
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, showniaocard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), showniaocard, cc.delayTime(2), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    isjieshan: false,
    handler_server_end_room_result_bc: function (data, canDelay) {
        var jpacket = parsePacket("proto.game.AckDisbandResult", data);
        if (this.room_EndTouPiao) this.room_EndTouPiao.removeFromParent(true);
        this.room_EndTouPiao = null;
        MJModel.TouPiaoING = false;
        var result = jpacket.Result;
        if (result == 1) {
            PlatformHelper.showToast("房间解散成功，3秒后房间自动结束");
            this.isjieshan = true;
        }
        else {
            PlatformHelper.showToast("解散失败，稍后游戏继续！");
        }
    },

    handler_game_time_over_bc: function (data, canDelay) {
        if (this.isjieshan)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "双鸭山麻将";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "超时次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    handler_op_sound_putonghua: function (pos, sex, OpType, OpType2, effect) {
        if (effect == "qiangganghu") {
            effect = "hu";
        }
        var index = 1;
        if (effect == "chi") {
            index = Utils.Random(1, 3);
        } else if (effect == "gang") {
            index = Utils.Random(1, 2);
        } else if (effect == "hu") {
            index = Utils.Random(1, 5);
        } else if (effect == "peng") {
            index = Utils.Random(1, 4);
        } else if (effect == "zimo") {
            index = Utils.Random(1, 3);
        }
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("shuangyashan/sound/operator/%1_%2_%3.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w", effect, index));
    },

    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            // var cards = [18, 18, 22, 24, 25, 33, 33, 33, 36, 37, 38, 67, 67];
            // for (var i in cards) {
            //     this.room_Card.addOutCard(0, cards[i], false);
            //     this.room_Card.addOutCard(1, cards[i], false);
            //     this.room_Card.addOutCard(2, cards[i], false);
            //     this.room_Card.addOutCard(3, cards[i], false);
            // }


            // return;
            var packet = {
                "gameend": {
                    "UserCard": [{
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [3, 4, 36, 38, 38, 39, 41],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{
                            "CardData": 65,
                            "state": 1,
                            "chairID": 1,
                            "OpCards": [],
                            "LaiziNum": null
                        }, {"CardData": 1, "state": 64, "chairID": 3, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 8,
                        "ChangeableCards": [5, 5, 7, 8, 9, 33, 34, 35],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{
                            "CardData": 21,
                            "state": 2,
                            "chairID": 3,
                            "OpCards": [],
                            "LaiziNum": null
                        }, {"CardData": 9, "state": 1, "chairID": 2, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [4, 8, 8, 22, 23, 37, 39],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{
                            "CardData": 24,
                            "state": 1,
                            "chairID": 3,
                            "OpCards": [],
                            "LaiziNum": null
                        }, {"CardData": 20, "state": 1, "chairID": 3, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [5, 6, 7, 34, 34, 34, 35, 36, 36, 37, 38, 38, 39],
                        "FixedCardsLen": 0,
                        "stFixedCards": [],
                        "stFenZhangCard": null
                    }],
                    "Score": [0, 0, 0, 0],
                    "EndState": 0,
                    "EndGangInfo": [{"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [{"GangType": 16, "GangCard": 21}, {"GangType": 16, "GangCard": 22}],
                        "TotalGangScore": 0
                    }, {"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [{"GangType": 16, "GangCard": 23}],
                        "TotalGangScore": 0
                    }],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 4,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 1,
                        "SpecialType": 1,
                        "FanNum": 0,
                        "addfan": [{"AddType": 1, "AddNum": 2}, {"AddType": 5, "AddNum": 2}],
                        "hucard": 9,
                        "DianPao": []
                    }, {
                        "chairid": 2,
                        "SpecialType": 4,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {"chairid": 3, "SpecialType": 4, "FanNum": 0, "addfan": [], "hucard": 0, "DianPao": []}],
                    "money": [10000, 10000, 10000, 10000]
                },
                "endinfo": [
                    {
                        "baoting": null,
                        "huscore": 4,
                        "jiangscore": 6
                    }, {
                        "baoting": null,
                        "huscore": 4,
                        "jiangscore": 6
                    }, {
                        "baoting": null,
                        "huscore": 4,
                        "jiangscore": 6
                    }, {
                        "baoting": null,
                        "huscore": 4,
                        "jiangscore": 6
                    }
                ],
                "card": [3, 5],
                "num": [2, 0]
            };
            this.handler_server_game_end_bc(packet);

            var package = {
                "ChairID": 2,
                "OutCardChairID": 0,
                "OpType": 16,
                "Card": 35,
                "Score": [],
                "IsQiangganghu": null,
                "OpType2": null,
                "fz_hu_type": null,
                "ListenInfo": [],
                "ChiNoOutCards": [],
                "OpCards": [],
                "cardDel": [0, 20],
            };
            // this.handler_server_peng_kang_bc(package);
        }
    },
});

var SYSMJResult = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.ackGameEndJS = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);
        this.createJiangPai();

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            // this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            if (this.ackGameEndJS.endinfo && this.ackGameEndJS.endinfo[seatid]) {
                // 胡牌分
                var scoreLayer = this.createScoreLayer2(seatid, this.ackGameEndJS.endinfo[seatid].huscore, "胡牌分");
                scoreLayer.setPosition(cc.p(startX + 900, startY + 40));
                this.bgSpr.addChild(scoreLayer);

                // 奖牌分
                var scoreLayer = this.createScoreLayer2(seatid, this.ackGameEndJS.endinfo[seatid].jiangscore, "奖牌分");
                scoreLayer.setPosition(cc.p(startX + 1030, startY + 40));
                this.bgSpr.addChild(scoreLayer);
            }

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },
    createJiangPai: function () {
        if (this.ackGameEndJS.card.length == 0) return;
        var beginx = 80;
        var beginy = 55;
        var jiangText = new cc.LabelTTF("奖牌", "Arial", 28);
        jiangText.setColor(this.leftColor);
        jiangText.setAnchorPoint(cc.p(0, 0.5));
        jiangText.setPosition(cc.p(beginx, beginy));
        this.bgSpr.addChild(jiangText);

        for (var i = 0; i < this.ackGameEndJS.card.length; i++) {
            var cardvalue = this.ackGameEndJS.card[i];
            var cardnum = 0;
            if (this.ackGameEndJS.num[i]) {
                cardnum = this.ackGameEndJS.num[i];
            }

            var card = new MJCard();
            card.setValue(cardvalue, 0, CardType.Card_Hand, 0);
            card.setScale(0.6);
            card.setPosition(cc.p(beginx + 100 + i * 100, beginy));
            this.bgSpr.addChild(card);

            var text = new cc.LabelTTF("x" + cardnum, "Arial", 28);
            text.setColor(this.leftColor);
            text.setPosition(cc.p(beginx + 150 + i * 100, beginy));
            this.bgSpr.addChild(text);

        }
    },
    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;

        for (var i = 0; i < this.ackGameEnd.EndGangInfo[seatid].Gang.length; i++) {
            var gangType = this.ackGameEnd.EndGangInfo[seatid].Gang[i].GangType;
            if (gangType == 16) {
                var cardvalue = this.ackGameEnd.EndGangInfo[seatid].Gang[i].GangCard;
                var fanType = new cc.LabelTTF("点杠", "Arial", 20);
                fanType.setColor(this.leftColor);
                fanType.setAnchorPoint(cc.p(0, 0));
                fanType.setPosition(cc.p(x, y + 10));
                layer.addChild(fanType);
                x += fanType.getContentSize().width;

                var card = new MJCard();
                card.setValue(cardvalue, 0, CardType.Card_Hand, 0);
                card.setScale(0.25);
                card.setAnchorPoint(cc.p(0, 0));
                card.setPosition(cc.p(x, y + 7));
                x += card.getBoundingBox().width + 10;
                layer.addChild(card);
            }
        }

        var addFanType = [];
        if (seatid == MJModel.banker_seatid) {
            addFanType.push("庄家1番");
        }

        var specialType = this.ackGameEnd.faninfo[seatid].SpecialType;
        if (specialType == HuType.HU_ZIMO) {
            addFanType.push("自摸1番");
        }
        if (specialType == HuType.HU_DIANPAO || specialType == HuType.HU_BEI_QIANG_GANG) {
            addFanType.push("点炮1番");
        }
        switch (specialType) {
            case HuType.HU_ZIMO:
            case HuType.HU_PAOHU:
            case HuType.HU_QIANG_GANG:
            case HuType.HU_GANG_SHANG_HUA:
                var addfan = this.ackGameEnd.faninfo[seatid].addfan;
                for (var i = 0; i < addfan.length; i++) {
                    var add_fan = addfan[i];
                    var add_type = add_fan.AddType;
                    var add_value = add_fan.AddNum;
                    if (AddFanTypeArray[add_type]) {
                        addFanType.push(AddFanTypeArray[add_type] + add_value + "番");
                    }
                }
                break;
        }

        var jiangscore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (jiangscore) {
            addFanType.push("下蛋分" + jiangscore + "分");
        }

        for (var i = 0; i < addFanType.length; i++) {
            var fanType = new cc.LabelTTF(addFanType[i], "Arial", 20);
            fanType.setColor(this.leftColor);
            fanType.setAnchorPoint(cc.p(0, 0));
            fanType.setPosition(cc.p(x, y + 10));
            layer.addChild(fanType);
            x += fanType.getContentSize().width + 10;
        }

        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5天和 6地和 7抢杠胡 8杠上开花 9花上添花
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "RoomMJ/result2/zi_mo_icon.png";
                    break;
                case 2:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                case 3:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 5:
                    path = "RoomMJ/result2/qiang_gang_icon.png";
                    break;
                case 7:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX, startY));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();

        var width = 65;
        var nameLabel = new cc.LabelTTF("总分", "Arial", 32);
        nameLabel.setColor(this.leftColor);
        nameLabel.setAnchorPoint(cc.p(0.5, 0.5));
        nameLabel.setPosition(cc.p(width, 40));
        layer.addChild(nameLabel);

        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];

        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.5, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },

    //输赢分
    createScoreLayer2: function (seatid, score, text) {
        var layer = new cc.Layer();

        var width = 0;
        var nameLabel = new cc.LabelTTF(text, "Arial", 32);
        nameLabel.setColor(this.leftColor);
        nameLabel.setAnchorPoint(cc.p(0.5, 0.5));
        nameLabel.setPosition(cc.p(width, 40));
        layer.addChild(nameLabel);

        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.5, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },
});


