/*
    淮南麻将 2018.9.28
 */
loadProtoFile("proto/huainanmajianggameproto.proto");

var HUAINAN_CMD = {
    SERVER_SEND_PAOFEN_START : 5074,        //开始选飘
    CLIENT_CHOOSE_PAOFEN     : 5075,        //客户端选择飘分
    SERVER_PAOFEN_RESULT     : 5076,        //选飘结果
    SERVER_SEND_BANKERTIMES  : 5077,        //连庄数
    };

var sendPiaoNums = function (v) {
    var packet = createPacket("proto.game.huainanmajiang.ResPaoFenResult");
    packet.chairid = MJModel.seatid;
    packet.paofen = v;
    sendPacket(packet, HUAINAN_CMD.CLIENT_CHOOSE_PAOFEN);
};

var MJTable_HuaiNan = MJTable.extend({
    tag : "MJTable_HuaiNan",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _curLaizi_bg: null,
    isRecordShow: false,    //总结算界面展示
    _pkg_id: 0,

    oMJPiao: null,

    leftCardNum: 0, //剩余的排数
    cardNumBg: null,
    cardNumLab: null,
    jushuNumBg: null,
    jushuNumLab: null,
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        MJModel.mj_suport_fangyan = 0;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;

        MJModel.mj_gps_type = 1;

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2824 || this._pkg_id == 2704) {
                MJModel.mj_roomType = 2;
            } else if (this._pkg_id == 2823 | this._pkg_id == 2703) {
                MJModel.mj_roomType = 1;
            }
        } catch (e) {
            Log(this, e);
        }
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }
        this._init_extend();
        this._super();
        this.createCardNumView();
    },

    createCardNumView: function () {  //处理外部游戏需要重构 剩余排数与局数的操作
        var winSize = cc.director.getWinSize();
        //cc.log("createCardNumView=====1" +MJModel.mj_table_view);
        for (var i = 0; i < 2; i++) {
            var bgwidth = 166, bgHeight = 48;
            var fontsize = 28;
            var bg = new ccui.ImageView(getResPath("RoomMJ/bg.9.png"));
            bg.setScale9Enabled(true);
            bg.setAnchorPoint(cc.p(0.5, 0.5));
            bg.setContentSize(cc.size(bgwidth, bgHeight));
            bg.setVisible(false);
            this.addChild(bg, 99);

            var lab1Text = (i == 0) ? "剩余:        张" : "局数:";
            var lab1 = new cc.LabelTTF(lab1Text, "Arial", fontsize);
            lab1.setColor(cc.color(108, 168, 236));
            bg.addChild(lab1);

            var lab2 = new cc.LabelTTF("100", "Arial", fontsize);
            lab2.setColor(cc.color(230, 219, 116));
            bg.addChild(lab2);

            if (i == 0) {
                this.cardNumBg = bg;
                this.cardNumLab = lab2;
                lab1.setAnchorPoint(0.5, 0.5);
                lab1.setPosition(cc.p(bgwidth / 2, bgHeight / 2));
                lab2.setAnchorPoint(cc.p(0.5, 0.5));
                lab2.setPosition(cc.p(bgwidth / 2 + 18, bgHeight / 2));
                bg.setPosition(cc.p(winSize.width / 2 - 160, winSize.height / 2 + 20));
            } else {
                this.jushuNumBg = bg;
                this.jushuNumLab = lab2;
                lab1.setAnchorPoint(0, 0.5);
                lab1.setPosition(cc.p(20, bgHeight / 2));
                lab2.setAnchorPoint(cc.p(0, 0.5));
                lab2.setPosition(cc.p(90, bgHeight / 2));
                lab2.setString(0);
                bg.setPosition(cc.p(winSize.width / 2 + 160, winSize.height / 2 + 20));
            }
        }
    },

    _init_extend : function () {
        var self_table = this;
        MJPiao.prototype.init = function () {

            this.oPiaoBtnNo = new ccui.Button(getResPath("huainanmj/action/nopao1.png"), "","");
            this.oPiaoBtnNo.setPosition(cc.p(280 + this.oPiaoBtnNo.getContentSize().width / 2, 180 + this.oPiaoBtnNo.getContentSize().height / 2));
            this.oPiaoBtnNo.setName(PiaoType.PIAO_NO);
            this.addChild(this.oPiaoBtnNo);

            this.oPiaoBtn1 = new ccui.Button(getResPath("huainanmj/action/pao1.png"),"","");
            this.oPiaoBtn1.setPosition(cc.p(this.oPiaoBtnNo.getPositionX() + this.oPiaoBtnNo.getContentSize().width + 80, 180 + this.oPiaoBtn1.getContentSize().height / 2));
            this.oPiaoBtn1.setName(PiaoType.PIAO_1);
            this.addChild(this.oPiaoBtn1);

            this.oPiaoBtn2 = new ccui.Button(getResPath("huainanmj/action/pao2.png"), "","");
            this.oPiaoBtn2.setPosition(cc.p(this.oPiaoBtn1.getPositionX() + this.oPiaoBtn1.getContentSize().width + 80, 180 + this.oPiaoBtn1.getContentSize().height / 2));
            this.oPiaoBtn2.setName(PiaoType.PIAO_2);
            this.addChild(this.oPiaoBtn2);

            this.oPiaoBtn3 = new ccui.Button(getResPath("huainanmj/action/pao2.png"), "","");
            this.oPiaoBtn3.setPosition(cc.p(this.oPiaoBtn2.getPositionX() + this.oPiaoBtn2.getContentSize().width + 45, 180 + this.oPiaoBtn2.getContentSize().height / 2));
            this.oPiaoBtn3.setName(PiaoType.PIAO_3);
            this.addChild(this.oPiaoBtn3);
            this.oPiaoBtn3.setVisible(false);
        };

        var size = cc.director.getWinSize();
        var self = this;
        this.oMJPiao = new MJPiao();
        this.oMJPiao.setVisible(false);
        this.oMJPiao.addClickEventListener(function (node) {
            self.onPiaoClick(node);
        });
        this.addChild(this.oMJPiao, 100);

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            if ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                if(self_table.room_Card.isDuoPai(0)){
                    this.actions["hu"].loadTextureNormal(getResPath("huainanmj/action/zimo.png"));
                }else{
                    this.actions["hu"].loadTextureNormal(getResPath("RoomMJ/action/hu1.png"));
                }
            }
            super_setOperator.call(this,operat);

        };

        MJPublic.prototype.showCardNum = function (num) {
            //cc.log("showCardNum ===" + MJModel.mj_table_view + " num:"+ num);
            self.leftCardNum = num;
            if (num >= 0) {
                if (MJModel.mj_table_view == "2d") {
                    this.cardNumView.setVisible(false);
                    this.cardNumText.setString(num);
                    self.cardNumBg.setVisible(true);
                    self.cardNumLab.setString(num);

                } else {
                    this.cardNumView.setVisible(true);
                    this.cardNumText.setString(num);
                    if (self.cardNumBg && self.cardNumLab) {
                        self.cardNumLab.setString(0);
                        self.cardNumBg.setVisible(false);
                    }
                }
            } else {
                this.cardNumText.setString(0);
                this.cardNumView.setVisible(false);
                if (MJModel.mj_table_view == "2d") {
                    if (self.cardNumBg && self.cardNumLab) {
                        self.cardNumLab.setString(0);
                        self.cardNumBg.setVisible(false);
                    }
                }
            }
        };
        MJPublic.prototype.showJuShuTip = function () {
            //cc.log("showJuShuTip ===" + MJModel.mj_table_view);
            if (MJModel.mj_table_view == "2d" && MJModel.roomState >= 1) {
                this.jushu.setVisible(false);
                self.jushuNumBg.setVisible(true);
                self.jushuNumLab.setString(MJModel.currentCount + "/" + MJModel.RoomCountSum);
            } else {
                this.jushu.setString("牌局:" + MJModel.currentCount + "/" + MJModel.RoomCountSum);
                this.jushu.setVisible(true);
                if (self.jushuNumBg && self.jushuNumBg.isVisible()) {
                    self.jushuNumBg.setVisible(false);
                }
            }
        };

        MJPlayer.prototype.paofen_tip = null;

        MJPlayer.prototype.showPaofenTip = function (score) {
            if(this.paofen_tip == null){
                if(score == -1) return;
                this.paofen_tip = new cc.Sprite(getResPath(__String.createWithFormat("huainanmj/flag/pao%1_tip.png",score)));
                this.paofen_tip.setName("paofentip");
                var pos = MJModel.getPosBySeatid(this.seatid);
                if (pos == 2) {
                    this.paofen_tip.setPosition(cc.p(this.m_size.height + this.paofen_tip.getContentSize().width / 2 +6, this.m_size.height / 2));
                } else {
                    this.paofen_tip.setPosition(cc.p(this.m_size.width / 2, this.m_size.height + this.paofen_tip.getContentSize().height / 2 +8));
                }
                this.addChild(this.paofen_tip, 100);
            }else{
                this.paofen_tip.setVisible(score != -1);
                if (score != -1){
                    this.paofen_tip.setTexture(getResPath(__String.createWithFormat("huainanmj/flag/pao%1_tip.png",score)));
                }
            }

        };

        //设置连庄标志
        MJPlayer.prototype.setBankerTexture = function (num) {
            if(this.banker_flag){
                if(num > 0){
                    this.banker_flag.setTexture(getResPath(__String.createWithFormat("huainanmj/flag/zhuang%1_tip.png",num)));
                    this.banker_flag.setScale(0.6)
                }
            }
        },

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        var superSetValue_card = MJCard.prototype.setValue;
        MJCard.prototype.setValue = function (value, pos, type, index) {
            superSetValue_card.call(this, value, pos, type, index);
            if (self_table.isJokerValue(value)) {
                this.setLaiZiTouchEnable(false);
                this.setStoreColor(cc.color(221, 191, 88));
            }

        };


        RoomChat.prototype.initUI  = function () {
            var size = cc.director.getWinSize();
            this.uiJson = ccs.load(getResPath("RoomMJ/mj_public/chat_0.json"));
            this.uiNode = this.uiJson.node;
            this.uiNode.setPosition(cc.p(size.width, 70));
            this.addChild(this.uiNode);
        };

        MJTips.prototype.faces = [ "effects_glmjbqddh", "effects_glmjbqfengnv", "effects_glmjbqhaixiu", "effects_glmjbqkx",
            "effects_glmjbqkuaidian", "effects_glmjbqkuile", "effects_glmjbqlanpai", "effects_glmjbqcanle", "effects_glmjbqyounide","effects_glmjbqdac"];

        MJTips.prototype.showFaceSelf= function (type, pos) {
            try {
                //Sound.getInstance().playEffect(getResPath(cc.formatStr("RoomMJ/sound/faceSelf/face%s.mp3", type)));
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("huainanmj/face_self/face" + type + "/" + this.faces[type] + ".ExportJson"));
                var begin = MJConfig.getPlayerPos(pos);
                if (pos == 0) {
                    begin.x += 120;
                    begin.y += 20;
                } else if (pos == 1) {
                    begin.x -= 120;
                } else if (pos == 2) {
                    begin.y -= 50;
                    begin.x += 100;
                } else if (pos == 3) {
                    begin.x += 120;
                    begin.y += 20;
                }

                if (MJModel.mj_table.pre_scene) {
                    begin = MJModel.mj_table.pre_scene.getPlayerPos(pos);
                }
                var armature = new ccs.Armature(this.faces[type]);
                if (armature) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);
                            armature.setPosition(begin);
                            armature.setScale(0.7);
                            MJModel.mj_table.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
                }
            } catch (e) {
                Log(this, e);
            }
        };

        var spuer_MJPreTable_ctor = MJPreTable.prototype.ctor;
        MJPreTable.prototype.ctor = function () {
            spuer_MJPreTable_ctor.call(this);
            var self = this;
            var wx_share = this.btns["yaoqing"];
            var xl_share = this.btns["xlshare"];
            var copy = this.btns["copyshare"];
            var ready = this.btns["ready"];
            xl_share.setVisible(false);
            var parent = wx_share.getParent();
            wx_share.removeFromParent();
            copy.removeFromParent();

            wx_share = new ccui.Button();
            wx_share.loadTextures(getResPath("RoomMJ/mj_public/common/pretable/share1.png"),getResPath("RoomMJ/mj_public/common/pretable/share2.png"), "");
            parent.addChild(wx_share);
            wx_share.setName("yaoqing");
            wx_share.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[wx_share.getName()] = wx_share;

            copy = new ccui.Button();
            copy.loadTextures(getResPath("RoomMJ/mj_public/common/pretable/copy1.png"),getResPath("RoomMJ/mj_public/common/pretable/copy2.png"), "");
            parent.addChild(copy);
            copy.setName("copyshare");
            copy.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[copy.getName()] = copy;

            wx_share.setPosition(-310,ready.getPositionY());
            copy.setPosition(310,ready.getPositionY());
        };

        var super_initUI = CommonTotalResult.prototype.initUI;
        CommonTotalResult.prototype.initUI = function (gameType, roomId, time, startTime, countSum, count) {
            super_initUI.call(this, gameType, roomId, time, startTime, countSum, count);
            this.rootNode.getChildByName("jushu").setVisible(false);

            var self = this;
            var wx_share = this.btns["share"];
            var xl_share = this.btns["xlshare"];
            var copy = this.btns["copy"];
            xl_share.setVisible(false);

            var parent = wx_share.getParent();
            wx_share.removeFromParent();
            copy.removeFromParent();

            wx_share = new ccui.Button();
            wx_share.loadTextures(getResPath("RoomMJ/mj_public/common/dialog/bigresult/share1.png"),getResPath("RoomMJ/mj_public/common/dialog/bigresult/share2.png"), "");
            parent.addChild(wx_share);
            wx_share.setName("share");
            wx_share.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[wx_share.getName()] = wx_share;

            copy = new ccui.Button();
            copy.loadTextures(getResPath("RoomMJ/mj_public/common/dialog/bigresult/copy_btn1.png"),getResPath("RoomMJ/mj_public/common/dialog/bigresult/copy_btn2.png"), "");
            parent.addChild(copy);
            copy.setName("copy");
            copy.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            this.btns[copy.getName()] = copy;

            var size = cc.director.getWinSize();
            wx_share.setPosition(size.width / 2,48);
            copy.setPosition(size.width / 2 + wx_share.getContentSize().width / 2 + copy.getContentSize().width / 2 + 10,wx_share.getPositionY() + 8);

            // var sharelinks = new ccui.Button(getResPath("yangzhou/action/sharelinks1.png"), getResPath("yangzhou/action/sharelinks2.png"), getResPath("yangzhou/action/sharelinks2.png"));
            // sharelinks.setPosition(cc.p(size.width / 2 - wx_share.getContentSize().width / 2 - sharelinks.getContentSize().width / 2 - 10, wx_share.getPositionY()));
            // sharelinks.setName("sharelinks");
            // sharelinks.addClickEventListener(function (sender, evt) {
            //     Utils.shareGameRecordLinks();
            //     sharelinks.setEnabled(false);
            // });
            // parent.addChild(sharelinks);
        };
    },

    reflashSetting: function (isInit) {
        this._super(isInit);
        if(isInit)  return;
        if (MJModel.mj_table_view == "2d") {
            if (this.cardNumBg && this.cardNumLab) {
                this.cardNumBg.setVisible(true);
                this.cardNumLab.setString(this.leftCardNum);
            }
            if (this.jushuNumBg && this.jushuNumLab && MJModel.roomState >= 1) {
                this.jushuNumBg.setVisible(true);
                this.jushuNumLab.setString(MJModel.currentCount + "/" + MJModel.RoomCountSum);
            }

            if (this.roomPublic.cardNumView && this.roomPublic.cardNumText) {
                this.roomPublic.cardNumView.setVisible(false);
                this.roomPublic.cardNumText.setString("");
            }

            if (this.roomPublic.jushu) {
                this.roomPublic.jushu.setString("");
            }

        } else {
            if (this.cardNumBg) {
                this.cardNumBg.setVisible(false);
            }
            if (this.jushuNumBg) {
                this.jushuNumBg.setVisible(false);
            }
            if (this.roomPublic.cardNumView && this.roomPublic.cardNumText) {
                this.roomPublic.cardNumView.setVisible(true);
                this.roomPublic.cardNumText.setString(this.leftCardNum);
            }
            if (this.roomPublic.jushu) {
                this.roomPublic.jushu.setVisible(true);
                this.roomPublic.jushu.setString("牌局:" + MJModel.currentCount + "/" + MJModel.RoomCountSum);
            }
        }
    },

    onPiaoClick: function (ref) {
        var sPiaoName = ref.getName();
        sendPiaoNums(PiaoType.getValue(sPiaoName));
        this.oMJPiao.setVisible(false);
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

    isJokerValue: function (value) {
        if (this._curLaizi > 0) {
            if (value == this._curLaizi) {
                return true;
            }
        }
        return false;
    },

    getMjTypePath: function () {
        return getResPath("huainanmj/mj_type_4108.png");
    },

    _setGameType: function () {
        var pkg_id = 1;
        var play_id = [];

        if(MJModel.mj_roomType == 0){
            play_id.push("4人");
        }else if(MJModel.mj_roomType == 1){
            play_id.push("3人");
        }else if(MJModel.mj_roomType == 2){
            play_id.push("2人");
        }
        
        if (MJModel.RoomConfigID.indexOf(84910001) != -1) {
            play_id.push("换换打法");
        }
        if (MJModel.RoomConfigID.indexOf(84910002) != -1) {
            play_id.push("点炮胡");
        }
        if (MJModel.RoomConfigID.indexOf(84920001) != -1) {
            play_id.push("买2马");
        }
        if (MJModel.RoomConfigID.indexOf(84920002) != -1) {
            play_id.push("买4马");
        }
        if (MJModel.RoomConfigID.indexOf(84920003) != -1) {
            play_id.push("买6马");
        }
        if(MJModel.RoomConfigID.indexOf(84930001) != -1){
            play_id.push("可胡七对");
        }
        if(MJModel.RoomConfigID.indexOf(84930002) != -1){
            play_id.push("红中癞子");
            this._curLaizi = 0x41;        //红中为癞子
        }
        if(MJModel.RoomConfigID.indexOf(84930003) != -1){
            play_id.push("杠后翻");
        }
        if(MJModel.RoomConfigID.indexOf(84990001) != -1){
            play_id.push("摸完流局");
        }
        if(MJModel.RoomConfigID.indexOf(84990002) != -1){
            play_id.push("剩14张流局");
        }
        if(MJModel.RoomConfigID.indexOf(85000001) != -1){
            play_id.push("开杠得分");
        }
        if(MJModel.RoomConfigID.indexOf(85000002) != -1){
            play_id.push("开杠不胡不得分");
        }

        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.huainanmajiang.tagCDGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
        } else if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.huainanmajiang.AckCDGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
        } else if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }else if(cmd == HUAINAN_CMD.SERVER_SEND_PAOFEN_START){
            this.handler_server_piao_start(jpacket,canDelay);
        }else if(cmd == HUAINAN_CMD.SERVER_PAOFEN_RESULT){
            this.handler_server_piao_Result(jpacket,canDelay);
        }else if(cmd == HUAINAN_CMD.SERVER_SEND_BANKERTIMES){
            this.handler_server_bankertimes(jpacket,canDelay);
        }
        else{
            this._super(cmd, jpacket, canDelay, svrid);
        }
    },

    handler_server_piao_start : function (date,canDelay) {
        MJModel.roomState = 1;
        this.resetGame(false);
        this.room_Info.setVisible(true);
        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
        cc.eventManager.dispatchCustomEvent("hide_copy_room");
        if (this.room_Action.actions["yaoqing"]) {
            this.room_Action.actions["yaoqing"].setVisible(false);
        }
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }
        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }
        this.room_Info.showTime(1);

        for(var i = 0;i < MJModel.Play_num;i++){
            var player = this.players[i];
            if(player){
                player.showPaofenTip(-1);
            }
        }
        if (MJModel.seatid != -1 && canDelay) {
            this.oMJPiao.setVisible(true);
        }
    },

    handler_server_piao_Result : function (date,canDelay) {
        var broadPiao = parsePacket("proto.game.huainanmajiang.ResPaoFenResult", date);
        var seatId = broadPiao.chairid;
        var pos = MJModel.getPosBySeatid(seatId);
        this.players[pos].showPaofenTip(broadPiao.paofen);
        if(MJModel.isMyPos(pos)){
            this.oMJPiao.setVisible(false);
        }
    },

    handler_server_bankertimes : function (date,canDelay) {
        var bankerInfo = parsePacket("proto.game.huainanmajiang.AckUserBankerTimes", date);
        var bankerid = bankerInfo.BankerID;
        var lianzhuangtimes = bankerInfo.lianzhuangtimes;

        var pos = MJModel.getPosBySeatid(bankerid);
        var player = this.players[pos];
        if (player) {
            player.setBankerTexture(lianzhuangtimes);
        }
    },

    handler_server_scene_info_uc: function (huainanScene, canDelay) {
        this.reflashSetting(true);
        var ackGameFree = huainanScene.gamesence;
        MJModel.RoomConfigID = ackGameFree.RoomConfigID;
        this._setGameType();
        this._super(ackGameFree, canDelay);

        var sceneStatus = ackGameFree.SceneStatus;
        this.oMJPiao.setVisible(false);
        if (sceneStatus == 4) {
            MJModel.roomState = 1;
            this.resetGame(false);
            this.room_Info.setVisible(true);
            JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
            cc.eventManager.dispatchCustomEvent("hide_copy_room");
            if (this.room_Action.actions["yaoqing"]) {
                this.room_Action.actions["yaoqing"].setVisible(false);
            }
            if (this.room_Action.actions["copyshare"]) {
                this.room_Action.actions["copyshare"].setVisible(false);
            }
            if (this.pre_scene) {
                this.pre_scene.removeFromParent(true);
                this.pre_scene = null;
            }
            this.room_Info.showTime(1);
        }
        var paofenInfo = huainanScene.paofen;
        for(var i = 0;i < paofenInfo.length;i++){
            var piao = paofenInfo[i];
            var pos = MJModel.getPosBySeatid(i);
            if(piao == -1 && MJModel.isMyPos(pos) && sceneStatus == 4){
                this.oMJPiao.setVisible(true);
            }
            if(piao >=0 ){
                this.players[pos].showPaofenTip(piao);
            }
        }

        //庄家标志
        var lianzhuangtimes = huainanScene.lianzhuangtimes;
        var pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        var player = this.players[pos];
        if (player) {
            player.setBankerTexture(lianzhuangtimes);
        }
    },

    handler_server_game_end_bc: function (huainanGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = huainanGameend.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();
            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });
            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var has_niao = false;
            var liangniaocard = [];
            var zhongniaocard = [];
            liangniaocard = huainanGameend.liangniaocard;
            zhongniaocard = huainanGameend.zhongniaocard;

            if (liangniaocard && liangniaocard.length != 0) {
                has_niao = true;
            }
            if (state == 1)has_niao = false;
            //亮鸟牌
            var showniaocard = cc.callFunc(function () {
                if (has_niao == false)return;
                self._showNiaoEffect(liangniaocard, zhongniaocard);
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                var result = new MJResult_HuaiNan();
                result.setName("reset_remove");
                result.updateContentView(huainanGameend);
                self.addChild(result, 100000);
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, showniaocard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), showniaocard, cc.delayTime(has_niao ? 2 : 0), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "淮南麻将";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "杠牌次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.GangTimes];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    _showNiaoEffect: function (cardList, zhongList) {

        this.room_Tip.reset();
        var self = this;
        //结束亮马牌动画
        var size = cc.director.getWinSize();
        var dx = 100;
        var bg = new cc.Sprite(getResPath("huainanmj/flag/niao_bg2.png"));
        bg.setPosition(size.width / 2, size.height / 2);
        bg.setScaleY(0.7);
        this.room_Card.addChild(bg, 10000);
        bg.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));

        var bx = size.width / 2 - dx * (cardList.length - 1) / 2;
        for (var j = 0; j < cardList.length; j++) {
            var card = new MJCard();
            card.setValue(cardList[j], 0, CardType.Card_Hand, 0);
            card.setPosition(bx + dx * j, size.height / 2);
            self.room_Card.addChild(card, 10000 + cardList.length);
            if (zhongList.indexOf(cardList[j]) != -1) {
                var callback = cc.callFunc(function () {
                    this.setStoreColor(cc.color(240, 182, 147));
                }, card);
                card.runAction(cc.sequence(cc.delayTime(1), callback,cc.delayTime(1),cc.removeSelf()));
            }else{
                card.runAction(cc.sequence(cc.delayTime(2),cc.removeSelf()));
            }
        }
    },

    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
           this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
           if (MJModel.canQuxiaoZhun()) {
               if (MJModel.roomState != 0) this.actionCallBack("ready");
           } else {
               this.actionCallBack("ready");
           }
        }
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
});

var MJ_HauiNan_Type = {
    36 : "七对",						//七对
    17 : "平胡",					//平胡
    44 : "单吊",					//单吊
};

var MJResult_HuaiNan = MJCommonResult.extend({

    updateContentView: function (ackGameEndHN) {
        this.ackGameEnd = ackGameEndHN.gameend;
        this.huainanGameEnd = ackGameEndHN;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        this.createBottomMaLayer();
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.huainanGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("huainanmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        x += 10;
        //胡牌分
        var hufen = sxendInfo.huscorenum[seatid];
        if(hufen){
            var txt = "胡分  +";
            if (sxendInfo.huscorenum[seatid] < 0) {
                txt = "胡分  ";
            }
            var hufentext = new cc.LabelTTF(txt + sxendInfo.huscorenum[seatid], "Arial", 20);
            hufentext.setColor(this.leftColor);
            hufentext.setAnchorPoint(cc.p(0, 0));
            hufentext.setPosition(cc.p(x, y + 10));
            layer.addChild(hufentext);
            x += hufentext.getContentSize().width + 10;
        }
        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            var txt = "杠牌分  +";
            if (gangScore < 0) {
                txt = "杠牌分  ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        x += 10;
        //跑分
        if (sxendInfo.paofennum[seatid] > 0) {
            var txt = "跑分  +";
            if (sxendInfo.paofennum[seatid] < 0) {
                txt = "跑分  ";
            }
            var hongzhongfen = new cc.LabelTTF(txt + sxendInfo.paofennum[seatid], "Arial", 20);
            hongzhongfen.setColor(this.leftColor);
            hongzhongfen.setAnchorPoint(cc.p(0, 0));
            hongzhongfen.setPosition(cc.p(x, y + 10));
            layer.addChild(hongzhongfen);
            x += hongzhongfen.getContentSize().width + 10;
        }
        x += 10;

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (MJ_HauiNan_Type[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(MJ_HauiNan_Type[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "huainanmj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "huainanmj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "huainanmj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "huainanmj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "huainanmj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "huainanmj/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "huainanmj/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },

    createBottomMaLayer: function () {
        var zhongmalist = this.huainanGameEnd.zhongniaocard;
        var liangmalist = this.huainanGameEnd.liangniaocard;
        var maLength = 0;
        var marginWidth = 0;
        if (liangmalist.length > 0) {
            maLength = liangmalist.length;
            var label = new cc.LabelTTF("马牌:", "Arial", 25);
            label.setAnchorPoint(cc.p(0.0, 0.5));
            label.setColor(this.leftColor);
            label.setPosition(cc.p(85, 50));
            this.bgSpr.addChild(label);

            for (var i = 0; i < liangmalist.length; i++) {
                var card = new MJCard();
                card.setValue(liangmalist[i], 0, CardType.Card_End, 0);
                card.setAnchorPoint(cc.p(0.0, 0.5));
                card.setScale(0.5);
                card.setPosition(cc.p(150 + (card.getBoundingBox().width) * i, 50));
                if (zhongmalist.indexOf(liangmalist[i]) == -1) {
                    card.setBlackVis(true);
                } else {
                    card.setZhongMaColor(1);
                }
                this.bgSpr.addChild(card);

                if(marginWidth == 0){
                    marginWidth = card.getBoundingBox().width * maLength;
                }
            }

            this.configLayout = new ccui.Layout();
            this.configLayout.setPosition(150 + marginWidth , 50);
            this.bgSpr.addChild(this.configLayout);

            var mafen = this.huainanGameEnd.zhongmashu;
            var mafen_txt = new cc.LabelTTF(__String.createWithFormat("马分: +%1",mafen), "Arial", 25);
            mafen_txt.setAnchorPoint(cc.p(0.0, 0.5));
            mafen_txt.setColor(this.leftColor);
            mafen_txt.setPosition(cc.p(marginWidth + 200, 50));
            this.bgSpr.addChild(mafen_txt);

        }

        var lianzhuangtimes = this.huainanGameEnd.lianzhuangtimes;
        if(lianzhuangtimes > 0){
            var lian_label = new cc.LabelTTF(__String.createWithFormat("连庄: +%1",lianzhuangtimes), "Arial", 25);
            lian_label.setAnchorPoint(cc.p(0.0, 0.5));
            lian_label.setColor(this.leftColor);
            lian_label.setPosition(cc.p(marginWidth + 200, 50));
            this.bgSpr.addChild(lian_label);
        }
    },

});
