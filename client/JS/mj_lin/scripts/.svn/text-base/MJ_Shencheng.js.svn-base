loadProtoFile("proto/shenchengmajianggameproto.proto");
var SHENCHENG_SERVER_CMD = {
    SERVER_NAOZHUANG_START: 5074,
    SERVER_NAOZHUANG_RESULT:5076,
    SERVER_NAOZHUANG_END   :5077,
}

var MJPao = cc.Layer.extend(
    {
        _allpao: [],
        ctor: function () {
            this._super();
            this.init();
        },
        init: function(){
            var size = cc.director.getWinSize();
            var dx = 350;
            var by = 180;
            var bx = size.width / 3 ;

            for (var i = 0; i <2; i++) {
                var pao = new ccui.Button(getResPath("shenchengmj/flag/nao_" + i +"_0"+ ".png"), getResPath("shenchengmj/flag/pao_" + i + "_1"+".png"));
                pao.setPosition(cc.p(bx + dx * i, by));
                pao.setTag(i);
                this.addChild(pao);
                this._allpao[i] = pao;
            }

        },
        addClickEventListener: function (callback) {
            this._allpao[0].addClickEventListener(callback);
            this._allpao[1].addClickEventListener(callback);
        }
    });

var MJTable_shencheng = MJTable.extend({

    isRecordShow: false,
    _allBeiShu: [null, null, null, null],
    _isgang: false,
    mPaoBar: null,
    wait_flag:null,
    gameDes: "",
    _pkgid: 0,
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        this._init_extend();

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 1;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        //MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;
        MJModel.shareType = 1;
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            //if (this._pkg_id == 2576 || this._pkg_id == 2483 ){
            //    MJModel.mj_roomType = 1;
            //}
            //if (this._pkg_id == 2577 || this._pkg_id == 2484 ) {
            //    MJModel.mj_roomType = 2;
            //}

        } catch (e) {
            Log(this, e);
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }
        this._super();
        MJModel.mj_paiban = "horizontal";
        //this.schedule(this.test, 1.0);


    },
    getMjTypePath: function () {
        var pkg_id = 1;
        //if (MJModel.mj_roomType == 2) pkg_id = 2;
        //if (MJModel.mj_roomType == 1) pkg_id = 3;
        return __String.createWithFormat(getResPath("shenchengmj/flag/pkgid%1.png"), pkg_id);


    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            this._curLaizi = 0x41;
        }
    },

    handler_game_time_over_bc: function (data, canDelay) {
        if (!this.gameending)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },
    gameending: false,
    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this.gameending = true;
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_ShenCheng();
                    result.updateContentView(shanxiGameEnd);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.gameending = false;
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(1.5), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },
    _init_extend: function () {
        var self = this;

        MJCards.prototype.checkCardSafe = function () {

        };

        //去掉出牌按钮
        MJCards.prototype.createOutCardBtn = function () {

        };
        //去掉出牌放大
        MJCards.prototype.outHandCardEffct2 = function (pos, value) {
            this.addOutCard(pos, value);
            this.reflashHandCard(pos, true, true);
        };

        var super_continueClick = MJResult.prototype.continueClick;
        MJResult.prototype.continueClick = function (ref) {
            super_continueClick.call(this, ref);
            self.gameending = false;
        };

        MJCard.prototype.check_addFlag = function () {
            self._checkAddCardFlag(this);
        };


        MJCards.prototype.sortCard = function (a, b) {
            return self._sortCard(a, b);
        };

        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };
        //闹庄的标志
        MJPlayer.prototype.setPiaoNum = function (num) {
            if (!this.piao_flag) {
                this.piao_flag = new cc.Sprite(getResPath("shenchengmj/flag/nao_tip.png"));
                this.piao_flag.setVisible(false);
                if (this.pid == 2) {
                    this.piao_flag.setPosition(cc.p(this.m_size.width + this.piao_flag.getContentSize().width / 2-5, this.m_size.height - 10));
                } else {
                    this.piao_flag.setPosition(cc.p(this.m_size.width / 2, this.m_size.height + 13));
                }
                this.addChild(this.piao_flag);
            }
            if (this.piao_flag) {
                this.piao_flag.setVisible(num == 1);
            }
        };
    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        //
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.shenchengmajiang.tagCDGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.shenchengmajiang.AckCDGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == SHENCHENG_SERVER_CMD.SERVER_NAOZHUANG_START) {

            //this._handler_server_start_piao(jpacket, canDelay);
            //return;
        }
        if (cmd == SHENCHENG_SERVER_CMD.SERVER_NAOZHUANG_RESULT) {
            //this._handler_server_piaoOk(jpacket, canDelay);
            //return;
        }
        if (cmd == SHENCHENG_SERVER_CMD.SERVER_NAOZHUANG_END) {
            //this._handler_server_piaoResult(jpacket, canDelay);
            //return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("-_handler_game_record-");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "申城麻将 ";
        //if (MJModel.mj_roomType == 1) {
        //    gameType = "申城麻将 · 3人 ";
        //}
        //if (MJModel.mj_roomType == 2) {
        //    gameType = "申城麻将 · 2人 ";
        //}
        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }

        for (var i = 0; i < gameRecord.MostWinScoreUser.length; i++) {
            var seatId = gameRecord.MostWinScoreUser[i];
            if (seatId != 255) {
                _winSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "赢分次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.WinCounts, recoreInfo.outtime_num];

            if (player && player.uid != -1) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, _winSeatid[i], _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);

        this.release();
    },

    resetGame: function (allClean) {
        this._super(allClean);
        //if (this.mPaoBar) {
        //    this.mPaoBar.removeFromParent();
        //    this.mPaoBar = null;
        //}
        //if(this.wait_flag)this.wait_flag.setVisible(false);
        this.gameending = false;
    },

    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
        } else {
            this._super(sex, card);
        }
    },
    //
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {

        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },

    handler_server_scene_info_uc: function (shanxi_gameScene, canDelay) {
        var ackGameFree = shanxi_gameScene.gamesence;
        var sceneStatus = ackGameFree.SceneStatus;
        this._super(ackGameFree, canDelay);
        this._setGameType();
        //for (var i = 0; i < shanxi_gameScene.bchoose.length; i++) {
        //        var pos = MJModel.getPosBySeatid(i);
        //        var piaonum = shanxi_gameScene.bchoose[i];
        //        if(shanxi_gameScene.chooseing[i] == 1){
        //            if(MJModel.isMyPlayer(i)){
        //                this._showwaitLayer();
        //            }
        //        }else{
        //
        //        }
        //        if (piaonum == -1) {
        //            if(MJModel.isMyPlayer(i)){
        //                this._showPiaoLayer();
        //            }
        //        }else{
        //            var player = this.players[pos];
        //            player.setPiaoNum(piaonum);
        //        }
        //
        //
        //    }
    },

    _setGameType: function () {
        //申城麻将
        MJModel.play_id_str = [];
        if (MJModel.RoomConfigID.indexOf(1501001) != -1) {
            MJModel.play_id_str.push("1嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1501002) != -1) {
            MJModel.play_id_str.push("2嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1501003) != -1) {
            MJModel.play_id_str.push("3嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1501004) != -1) {
            MJModel.play_id_str.push("4嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1501005) != -1) {
            MJModel.play_id_str.push("5嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1502001) != -1) {
            MJModel.play_id_str.push("闹庄");
        }
        if (MJModel.RoomConfigID.indexOf(1502002) != -1) {
            MJModel.play_id_str.push("不带风");
        }
        if (MJModel.RoomConfigID.indexOf(1503001) != -1) {
            MJModel.play_id_str.push("输一家");
        }
        if (MJModel.RoomConfigID.indexOf(1503002) != -1) {
            MJModel.play_id_str.push("输三家");
        }
        if (MJModel.RoomConfigID.indexOf(1504001) != -1) {
            MJModel.play_id_str.push("20嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1504002) != -1) {
            MJModel.play_id_str.push("40嘴");
        }
        if (MJModel.RoomConfigID.indexOf(1504003) != -1) {
            MJModel.play_id_str.push("不封顶");
        }
        var gameDes = "";
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            gameDes += MJModel.play_id_str[i];
            if (i != MJModel.play_id_str.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },
    _checkAddCardFlag: function (card) {

    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    onPaoClick: function (ref) {
        var nums = ref.getTag();
        if (this.mPaoBar) {
            this.mPaoBar.removeFromParent();
            this.mPaoBar = null;
        }
        var chairid = MJModel.seatid;
        sendPaoNums(nums,chairid);
    },
    _showPiaoLayer: function () {
        if (this.mPaoBar) {
            this.mPaoBar.removeFromParent();
            this.mPaoBar = null;
        }
        var self = this;
        this.mPaoBar = new MJPao();
        this.mPaoBar.addClickEventListener(function (node) {
            self.onPaoClick(node);
        });
        this.addChild(this.mPaoBar,100);
    },
    _showwaitLayer:function(){
        var size = cc.director.getWinSize();
        this.wait_flag = new cc.Sprite(getResPath("shenchengmj/flag/wait_tip.png"));
        this.wait_flag.setAnchorPoint(cc.p(0.5, 0.5));
        this.wait_flag.setPosition(cc.p(size.width/2, 200));
        this.wait_flag.setVisible(true);
        this.addChild(this.wait_flag,100);

    },
    _handler_server_start_piao: function (data, canDelay) {
        var piaoInfo = parsePacket("proto.game.shenchengmajiang.NaoZhuangStart", data);
        var chairid = piaoInfo.chairid;
        this.room_Info.showTime(1);
        //暂时录像不弹按钮
        if (MJModel.seatid != -1 && canDelay && MJModel.isOnVideo ==false) {
            if(chairid == 255){
                this._showwaitLayer();
            }else{
                if(this.wait_flag)this.wait_flag.setVisible(false);
                this._showPiaoLayer();
            }

        }
    },
    _handler_server_piaoOk: function (data, canDelay) {
        var broadPiao = parsePacket("proto.game.shenchengmajiang.tagNaoZhuangChoose", data);
        var seatId = broadPiao.chairid;
        var pos = MJModel.getPosBySeatid(seatId);
        var userpiaonum = broadPiao.bchoose;
        var player = this.players[pos];
        player.setPiaoNum(userpiaonum);
    },
    _handler_server_piaoResult:function(data, canDelay) {
        var broadPiao = parsePacket("proto.game.shenchengmajiang.NaoZhuangEnd", data);
        if(this.wait_flag)this.wait_flag.setVisible(false);
    },
    handler_server_game_start_bc: function (data, canDelay) {
        MJModel.roomState = 1;
        this.resetGame(false);
        this.room_Info.setVisible(true);
        if (this.room_Action.actions["yaoqing"]) {
            this.room_Action.actions["yaoqing"].setVisible(false);
        }
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }

        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }

        if (canDelay) this.room_Tip.ShowGameState(1);
        MJModel.state = MJ_STATUS.MJ_GAME_PLAYING;
        var gameStart = parsePacket("proto.game.AckGameStart", data);
        MJModel.banker_seatid = gameStart.ChairID;
        MJModel.mj_public_sz1 = gameStart.TouZiInfo[0];
        MJModel.mj_public_sz2 = gameStart.TouZiInfo[1];
        if (gameStart.totalcount != null && gameStart.totalcount != 0) {
            MJModel.RoomCountSum = gameStart.totalcount;
            MJModel.currentCount = gameStart.currentcount;
            MJModel.mj_roominfo_type = 1;
        } else {
            MJModel.mj_roominfo_type = 0;
        }
        if (canDelay && MJModel.mj_bg_use == 0 && this.room_Card.isSupportPublicCard()) {
            var self = this;
            var show_public_card_effect = cc.callFunc(function () {
                self.room_Info.showPublicCardEffect();
            });

            var show_shaizi_effect = cc.callFunc(function () {
                self.room_Info.showShaiZiEffect();
            });

            var init_public_Card = cc.callFunc(function () {
                self.room_Info.resetPublicCard();
                self.room_Card.initPublicCard();
            });

            MJModel.isEnterWait = true;
            var callback2 = cc.callFunc(function () {
                MJModel.isEnterWait = false;
            });
            this.runAction(cc.sequence(show_public_card_effect, cc.delayTime(1.5), show_shaizi_effect, cc.delayTime(0), init_public_Card, cc.delayTime(0), callback2));
        } else {
            this.room_Card.initPublicCard();
        }

        var pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        var player = this.players[pos];
        if (player) {
            player.setBankerFlag(true);
        }

        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
    },
    handler_server_game_start_bc2: function (data, canDelay) {
        this._super(data, canDelay);
        //if (MJModel.seatid != -1 && canDelay) {
        //    if (this.mPaoBar) {
        //        this.mPaoBar.removeFromParent();
        //        this.mPaoBar = null;
        //    }
        //}
    },

});
var SC_CLIENT_CMD = {
    CLIENT_MJ_CHOOSE_PIAO: 5075,
};

var sendPaoNums = function (v,chairid) {
    var packet = createPacket("proto.game.shenchengmajiang.tagNaoZhuangChoose");
    packet.bchoose = v;
    packet.chairid =chairid;
    sendPacket(packet, SC_CLIENT_CMD.CLIENT_MJ_CHOOSE_PIAO);
};

var AddFanType = {
    50: "门清",
    51: "清缺",
    52: "一条龙",
    53: "十张",
};
var AddFanType_xiaozui = {
    48: "牌钱",
    49: "小跑",
    54: "八张",
    55: "独赢",
    56: "夹子",
    57: "三风",
    59: "断门",
    60: "断门",
};
var AddFanType2 = {
    58: "清一色×2",
    61: "七对×2",
    62: "清七对×4",
}


var MJResult_ShenCheng = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
        var allL = 0;
        var allPlayId = [];
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            var str = MJModel.play_id_str[i];
            var _gameType_sp = new cc.LabelTTF(str, "Thonburi", 20);
            _gameType_sp.setColor(this.leftColor);
            _gameType_sp.setAnchorPoint(cc.p(0, 0));
            this.addChild(_gameType_sp);
            allL += _gameType_sp.getContentSize().width + 10;
            allPlayId.push(_gameType_sp);
        }
        var curP = 0;
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            var _gameType_sp = allPlayId[i];
            _gameType_sp.setPosition(cc.p(50+curP, 75));
            curP += _gameType_sp.getContentSize().width + 10;
        }
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("shenchengmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        //x += 10;
        ////杠牌分
        //var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        //if (gangScore) {
        //    var txt = "杠牌分  +";
        //    if (gangScore < 0) {
        //        txt = "杠牌分  ";
        //    }
        //    var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
        //    gangfen.setColor(this.leftColor);
        //    gangfen.setAnchorPoint(cc.p(0, 0));
        //    gangfen.setPosition(cc.p(x, y + 10));
        //    layer.addChild(gangfen);
        //    x += gangfen.getContentSize().width + 10;
        //}



        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            var ishavedazui =false;
            var ishavexiaozui =false;
            for (var i = 0; i < addfan.length; i++) {
                if (addfan[i].AddType  >49 && addfan[i].AddType < 54 ) {
                    ishavedazui =true;
                }
                if ((addfan[i].AddType  >53 && addfan[i].AddType < 58) || addfan[i].AddType  == 48 || addfan[i].AddType == 49 || addfan[i].AddType  == 59 || addfan[i].AddType == 60) {
                    ishavexiaozui =true;
                }
            }
            if(ishavedazui){
                var fanType = new cc.LabelTTF("四大嘴:", "Arial", 20);
                fanType.setColor(this.leftColor);
                fanType.setAnchorPoint(cc.p(0, 0));
                fanType.setPosition(cc.p(x, y + 10));
                layer.addChild(fanType);
                x += fanType.getContentSize().width + 5;
            }
            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 6;
                }
            }

            if(ishavexiaozui){
                var fanType = new cc.LabelTTF("七小嘴:", "Arial", 20);
                fanType.setColor(this.leftColor);
                fanType.setAnchorPoint(cc.p(0, 0));
                fanType.setPosition(cc.p(x, y + 10));
                layer.addChild(fanType);
                x += fanType.getContentSize().width + 5;
            }

            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType_xiaozui[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType_xiaozui[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 6;
                }
            }

            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType2[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType2[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 6;
                }
            }
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "shenchengmj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "shenchengmj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "shenchengmj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "shenchengmj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "shenchengmj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "shenchengmj/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "shenchengmj/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20+60, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});
