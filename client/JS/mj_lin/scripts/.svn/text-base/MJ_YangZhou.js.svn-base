loadProtoFile("proto/yangzhoumj.proto");


var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
};
var AddFanType = {
    MJ_FAN_TYPE_PIHU:121,  //屁胡
    MJ_FAN_TYPE_PENGPENGHU:16,				//碰碰胡
    MJ_FAN_TYPE_QINGYISE:14,					//清一色
    MJ_FAN_TYPE_HUNYISE:15,					//混一色
    MJ_FAN_TYPE_HUNDUIDUI:122, //混对对
    MJ_FAN_TYPE_QINGDUIDUI:123,  //清对对
    MJ_FAN_TYPE_FENGQING:124,//风清
    MJ_FAN_TYPE_4LAIHUPAI:125,//四配胡
    MJ_FAN_TYPE_TIANHU:19,					//天胡
    MJ_FAN_TYPE_QIDUI:36,						//七对
    MJ_FAN_TYPE_QINGQIDUI:25,					//清七对
    MJ_FAN_TYPE_HUNQIDUI:126,   //混七对
    MJ_FAN_TYPE_YITIAOLONG:39,				//一条龙
    MJ_FAN_TYPE_BANZIFANBEI:130, //搬子翻倍
    MJ_FAN_TYPE_DIHU:20,						//地胡
    MJ_FAN_TYPE_GANGSHANGHUA: 24,				//杠上开花
};

var AddFanTypeArray = [
    AddFanType.MJ_FAN_TYPE_PIHU,
    AddFanType.MJ_FAN_TYPE_PENGPENGHU,
    AddFanType.MJ_FAN_TYPE_QINGYISE,
    AddFanType.MJ_FAN_TYPE_HUNYISE,
    AddFanType.MJ_FAN_TYPE_HUNDUIDUI,
    AddFanType.MJ_FAN_TYPE_QINGDUIDUI,
    AddFanType.MJ_FAN_TYPE_FENGQING,
    AddFanType.MJ_FAN_TYPE_4LAIHUPAI,
    AddFanType.MJ_FAN_TYPE_TIANHU,
    AddFanType.MJ_FAN_TYPE_QIDUI,						//七对
    AddFanType.MJ_FAN_TYPE_QINGQIDUI,					//清七对
    AddFanType.MJ_FAN_TYPE_HUNQIDUI,   //混七对
    AddFanType.MJ_FAN_TYPE_YITIAOLONG,   //一条龙
    AddFanType.MJ_FAN_TYPE_BANZIFANBEI,   //搬子翻倍
    AddFanType.MJ_FAN_TYPE_DIHU,   //地胡
    AddFanType.MJ_FAN_TYPE_GANGSHANGHUA,   //杠上开花
];

var AddFanNameArray = [
    "屁胡",
    "碰碰胡",
    "清一色",
    "混一色",
    "混对对",
    "清对对",
    "风清",
    "四配胡",
    "天胡",
    "七对",
    "清七对",
    "混七对",
    "一条龙",
    "搬子翻倍",
    "地胡",
    "杠上开花",
];


var selfCMD = {
    SERVER_HAERBIN_SHAIZI: 5080,
    SERVER_Laizi_BC: 5084,   //亮牌
    SERVER_CHANGESEAT: 5082,
    SERVER_JUSHUQUANSHU: 5083,
    CLIENT_ROBOT_REQ: 1008,  //
    SERVER_ROBOT_SER: 4117,
};

var MJTable_YangZhou = MJTable.extend({
    tag: "MJTable_YangZhou",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _curLaizi_bg: null,
    isRecordShow: false,
    _pkg_id: 0,
    maxQuan: 1,
    _tuoguanBtn: null,
    _tuoguanFlag: [null, null, null, null],
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        MJModel.mj_suport_fangyan = 1;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;

        MJModel.mj_gps_type = 1;
        MJModel.mj_double_click_style = 1;

        MJModel.mj_font = "jianjie";
        MJModel.mj_fontSize = "dahao";
        MJModel.mj_style = "shishang";
        MJModel.yinyue = "jingdian";
        MJModel.shareType = 1;
        MJModel.isDaQuan = true;

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2612 || this._pkg_id == 2613 || this._pkg_id == 2614 || this._pkg_id == 2486 || this._pkg_id == 2487 || this._pkg_id == 2488) {
                MJModel.mj_roomType = 2;
            }
        } catch (e) {
            Log(this, e);
        }

        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }

        this._init_extend();
        this._super();
        this._update_action();
        this._init_public();
        // this.schedule(this.test, 1.0);
    },
    _update_action: function () {
        this.room_Action.actions["pass"].loadTextures(getResPath("yangzhou/action/pass1.png"), getResPath("yangzhou/action/pass2.png"), getResPath("yangzhou/action/pass2.png"));

        this.room_Action.actions["chi"].loadTextures(getResPath("yangzhou/action/chi1.png"), getResPath("yangzhou/action/chi2.png"), getResPath("yangzhou/action/pass2.png"));

        this.room_Action.actions["peng"].loadTextures(getResPath("yangzhou/action/peng1.png"), getResPath("yangzhou/action/peng2.png"), getResPath("yangzhou/action/pass2.png"));

        this.room_Action.actions["gang"].loadTextures(getResPath("yangzhou/action/gang1.png"), getResPath("yangzhou/action/gang2.png"), getResPath("yangzhou/action/pass2.png"));

        this.room_Action.actions["hu"].loadTextures(getResPath("yangzhou/action/hu1.png"), getResPath("yangzhou/action/hu2.png"), getResPath("yangzhou/action/pass2.png"));

        this.room_Action.opBtns = [];
        this.room_Action.opBtns.push(this.room_Action.actions["pass"]);
        this.room_Action.opBtns.push(this.room_Action.actions["chi"]);
        this.room_Action.opBtns.push(this.room_Action.actions["peng"]);
        this.room_Action.opBtns.push(this.room_Action.actions["gang"]);
        this.room_Action.opBtns.push(this.room_Action.actions["hu"]);

        var size = cc.director.getWinSize();
        var self = this;
        if (this._tuoguanBtn == null) {
            this._tuoguanBtn = new ccui.Button();
            this._tuoguanBtn.loadTextures(getResPath("yangzhou/action/quxiaotuoguan1.png"), "quxiaotuoguan2", "");
            this._tuoguanBtn.setPosition(cc.p(size.width - 184 - 92 - 90, 200));
            this._tuoguanBtn.setName("quxiaotuoguan");
            this._tuoguanBtn.addClickEventListener(function (sender, evt) {
                sendQuxiaoTuoguan();
            });
            this._tuoguanBtn.setVisible(false);
            this.addChild(this._tuoguanBtn, 100);
        }

        for (var i = 0; i < this._tuoguanFlag.length; i++) {
            this._tuoguanFlag[i] = new cc.Sprite(getResPath("yangzhou/flag/tuoguan.png"));
            this._tuoguanFlag[i].setVisible(false);
            if (i == 0) {
                this._tuoguanFlag[i].setPosition(cc.p(size.width / 2, 150));
            } else if (i == 2) {
                this._tuoguanFlag[i].setPosition(cc.p(size.width / 2, size.height - 80));
            } else if (i == 1) {
                this._tuoguanFlag[i].setPosition(cc.p(size.width - 150, size.height / 2));
            } else if (i == 3) {
                this._tuoguanFlag[i].setPosition(cc.p(150, size.height / 2));
            }
            this.addChild(this._tuoguanFlag[i], 100);
        }
    },
    getMjTypePath: function () {
        return getResPath("yangzhou/mj_type_1033.png");
    },

    updateBg: function (isInit) {
        if (isInit == undefined)isInit = false;
        var size = cc.director.getWinSize();
        if (this.bg == null) {
            this.bg = new ccui.ImageView(getResPath(this.getBgStr()));
            this.bg.setAnchorPoint(cc.p(0.5, 0.5));
            this.bg.setContentSize(size);
            this.bg.setScale9Enabled(true);
            this.bg.setPosition(size.width / 2, size.height / 2);
            this.addChild(this.bg, -100);
        } else {
            this.bg.loadTexture(getResPath(this.getBgStr()));
        }
        //简洁版本的幺鸡牌换了
        if (MJModel.mj_font == "jianjie") {
            Utils.addCardSprites(__String.createWithFormat("yangzhou/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        } else {
            Utils.addCardSprites(__String.createWithFormat("RoomMJ/cards/%1_%2_%3_debug", MJModel.mj_font, MJModel.mj_fontSize, MJModel.mj_table_view));
        }

        if (MJModel.mj_roomType == 2) {
            this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config_2ren.json" : "RoomMJ/config/card_config2d_2ren.json");
        } else {
            this.loadCardConfig(MJModel.mj_bg_use == 0 ? "RoomMJ/config/card_config.json" : "RoomMJ/config/card_config2d.json");
        }

        if (isInit)return;

        this.room_Card.reflashAllCardUI();
        for (var i = 0; i < 4; i++) {
            this.players[i].setPosition(MJConfig.getPlayerPos(i));
            this.players[i].reflashNameMoneyPosition();
        }
        if (this.room_Info)this.room_Info.reflash();

        // this._super(isInit);
        var size = cc.director.getWinSize();
        if (this.getChildByName("quanshubg")) {
            if (MJModel.mj_bg_use == 0) {
                this.getChildByName("quanshubg").setPosition(cc.p(80, size.height - 112));
            } else {
                this.getChildByName("quanshubg").setPosition(cc.p(size.width / 2 - 150, size.height / 2 + 15));
            }
        }
    },

    _init_public: function () {
        var size = cc.director.getWinSize();

        var bg = new cc.Sprite(getResPath("yangzhou/flag/cardNums.png"));
        bg.setPosition(size.width / 2 - 150, size.height / 2 + 15);
        bg.setName("quanshubg");
        this.addChild(bg);
        if (MJModel.mj_bg_use == 0) {
            bg.setPosition(80, size.height - 112);
        }

        this.quanshu = new cc.LabelTTF("圈数 : 1/1", "Thonburi", 22);
        // this.quanshu.setColor(cc.color(0x12, 0x45, 0x3d));
        this.quanshu.setColor(cc.color("#329E91"));
        this.quanshu.setAnchorPoint(cc.p(0.5, 0.5));
        this.quanshu.setPosition(cc.p(bg.getContentSize().width / 2, bg.getContentSize().height / 2));
        bg.addChild(this.quanshu);
    },

    onEnter: function () {
        this._super();
        if (this.roomPublic) {
            this.roomPublic.setjushu(1);
        }
    },
    _set_public: function (curQuan, curQu) {
        this.quanshu.setString(__String.createWithFormat("圈数 : %1/%2", curQuan, this.maxQuan));
        if (this.roomPublic) {
            this.roomPublic.setjushu(curQu);
        }
        // this.jushu.setString(__String.createWithFormat("局数 : %1", curQu));
    },

    isSupportPublicCard: function () {
        return false;
    },

    _init_extend: function () {
        var self_table = this;

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        MJCard.prototype.check_addFlag = function () {
            self_table._checkAddCardFlag(this);
        };

        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };

        var supersetValue = MJPeng.prototype.setValue;
        MJPeng.prototype.setValue = function (type, pos, value, index, out_pos, isEnd, OpType) {
            supersetValue.call(this, type, pos, value, index, out_pos, isEnd, OpType);
            //类型暗杠，并且是癞晃，并且value是癞子皮
            if (type == PengType.Peng_AnKang && value == self_table._curLaizipi) {
                this.cardList[1].setVisible(false);
                if (this.cardList[3]) {
                    this.cardList[3].setPosition(this.cardList[1].getPosition());
                    this.cardList[3].setZOrder(this.cardList[1].getZOrder());
                }
            }
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        var super_initUI = CommonTotalResult.prototype.initUI;
        CommonTotalResult.prototype.initUI = function (gameType, roomId, time, startTime, countSum, count) {
            super_initUI.call(this, gameType, roomId, time, startTime, countSum, count);
            this.rootNode.getChildByName("jushu").setVisible(false);
        };

        MJPublic.prototype.updateJuShu = function () {

        };

        MJPublic.prototype.showJuShuTip = function () {

        };

        MJPublic.prototype.setjushu = function (jushu) {
            this.jushu.setString("局数:" + jushu);
        };

        //去掉出牌按钮
        MJCards.prototype.createOutCardBtn = function () {

        };

        MJCard.prototype.createTingFlag = function () {
            if (this.tingpai_flag) {
                try {
                    this.tingpai_flag.removeFromParent(true);
                } catch (e) {

                }

                this.tingpai_flag = null;
            }

            var m_size = this.getContentSize();
            this.tingpai_flag = new cc.Sprite(getResPath("yangzhou/flag/ting.png"));
            this.tingpai_flag.setAnchorPoint(cc.p(0.5, 0));
            this.tingpai_flag.setPosition(cc.p(m_size.width / 2, m_size.height - 23));
            this.tingpai_flag.setVisible(false);
            this.addChild(this.tingpai_flag);
        };

        BigFaceMenu.prototype.getIconsIndexArray = function (seatid) {
            var icons = [1, 3, 7, 8, 18, 19];//需要显示的动画表情
            return icons;
        };

        //不同城市也要显示距离
        PlayerInfo.prototype.updateInfo = function () {
            var hasnocity = false;
            var hastoonear = false;
            var playerNums = 4;
            if (MJModel.mj_roomType == 1) {
                playerNums = 3;
            } else if (MJModel.mj_roomType == 2) {
                playerNums = 2;
            }
            for (var i = 0; i < playerNums; i++) {
                var player = MJModel.players[i];
                var playerData = this.getPlayerData(player.uid);
                var pos = MJModel.getPosBySeatid(i);
                var playerUI = this.players.getChildByName("player" + pos);
                var avatar = playerUI.getChildByName("avatar");
                var name = playerUI.getChildByName("name");
                var city = playerUI.getChildByName("city");
                city.stopAllActions();
                avatar.removeAllChildren();
                name.setString("");
                name.ignoreContentAdaptWithSize(true);

                city.setString("");
                city.ignoreContentAdaptWithSize(true);
                if (player.uid <= 0) {
                    city.setString("");
                    var m_pAvatar = new cc.Sprite("Avatars/user4_unlogin.png");
                    m_pAvatar.setScale(85 / m_pAvatar.getContentSize().width, 85 / m_pAvatar.getContentSize().height);
                    avatar.addChild(m_pAvatar);
                } else {
                    var m_pAvatar = Utils.createCircleAvatar(player.avatar, "Avatars/user4_unlogin.png", "Avatars/user4_unlogin.png", cc.size(85, 85));
                    avatar.addChild(m_pAvatar);
                    name.setString(player.name);
                    //city.setColor(cc.color(255, 255, 255));
                    if (this.isNoData(playerData)) {
                        hasnocity = true;
                        //city.setColor(cc.color(255, 0, 0));
                        city.setString("未检测到位置");
                        //city.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                    } else {
                        city.setString(Utils.parseName(10, playerData.city));
                    }
                }
            }
            var cs = this.julitips.getChildren();
            for (var i in cs) {
                var tips = cs[i];
                if (!tips)continue;
                var name = tips.getName();
                var ps = name.split("_");
                var label = tips.getChildByName("num");
                var s1 = MJModel.getSeatidByPos(parseInt(ps[0]));
                var s2 = MJModel.getSeatidByPos(parseInt(ps[1]));
                var p1 = MJModel.players[s1];
                var p2 = MJModel.players[s2];

                tips.getChildByName("hong").setVisible(false);
                tips.getChildByName("lv").setVisible(false);
                tips.getChildByName("hong").setScaleX(1);
                tips.getChildByName("lv").setScaleX(1);
                tips.getChildByName("hong").stopAllActions();
                tips.getChildByName("lv").stopAllActions();
                label.setString("");
                label.ignoreContentAdaptWithSize(true);

                if (!p1 || !p2 || p1.uid <= 0 || p2.uid <= 0) {
                    continue;
                }

                var playerData1 = this.getPlayerData(p1.uid);
                var playerData2 = this.getPlayerData(p2.uid);

                if (this.isNoData(playerData1)) {
                    continue;
                }

                if (this.isNoData(playerData2)) {
                    continue;
                }

                // if (playerData1.city != playerData2.city) {
                //     continue;
                // }

                var dis = Utils.getDistance(playerData1.latitude, playerData1.longitude, playerData2.latitude, playerData2.longitude);
                tips.setVisible(true);
                if (dis >= 1000) {
                    var tip = tips.getChildByName("lv");
                    tip.setVisible(true);
                    var dis_f = parseFloat(dis / 1000);
                    label.setString(dis_f.toFixed(1) + "千米");
                    tip.setScaleX((label.getContentSize().width + 20) / tip.getContentSize().width);
                    label.setScaleX(1 / tip.getScaleX());
                } else {
                    label.setString(dis + "米");
                }

                if (dis <= 100) {
                    tips.getChildByName("hong").setVisible(true);
                    //tip.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                    hastoonear = true;
                } else {
                    tips.getChildByName("lv").setVisible(true);
                }
            }

            this.warningTip.setVisible(false);
            this.btns["jieshan"].setVisible(false);
            this.btns["continue"].setVisible(false);
            this.warningTip.stopAllActions();
            if (hasnocity || hastoonear) {
                this.warningTip.setVisible(true);
                this.btns["jieshan"].setVisible(true);
                this.btns["continue"].setVisible(true);
                this.warningTip.runAction(cc.sequence(cc.delayTime(1), cc.hide(), cc.delayTime(0.1), cc.show()).repeatForever());
                this.warningTip.ignoreContentAdaptWithSize(true);
                if (hasnocity && hastoonear) {
                    this.warningTip.setString("* 发现距离过近、未检测到位置的玩家，是否解散？");
                } else if (hasnocity) {
                    this.warningTip.setString("* 发现未检测到位置的玩家，是否解散？");
                } else if (hastoonear) {
                    this.warningTip.setString("* 发现距离过近的玩家，是否解散？");
                }
            }

            MJModel.mj_table.room_Action.updateGPSTip(hasnocity , hastoonear);
            if(MJModel.mj_table.pre_scene){
                MJModel.mj_table.pre_scene.updateGPSTip(hasnocity , hastoonear);
            }
        };
    },

    playBgSound: function () {
        if(MJModel.yinyue == "jingkuai"){
            Sound.getInstance().PlayBgSound(getResPath("RoomMJ/sound/csmj1.mp3"));
        }else if(MJModel.yinyue == "suhuan"){
            Sound.getInstance().PlayBgSound(getResPath("RoomMJ/sound/csmj2.mp3"));
        }else {
            Sound.getInstance().PlayBgSound(getResPath("yangzhou/sound/music_hall.mp3"));
        }
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            var cards = [18, 18, 22, 24, 25, 33, 33, 33, 36, 37, 38, 67, 67];
            for (var i in cards) {
                this.room_Card.addOutCard(0, cards[i], false);
                this.room_Card.addOutCard(1, cards[i], false);
                this.room_Card.addOutCard(2, cards[i], false);
                this.room_Card.addOutCard(3, cards[i], false);
            }


            return;
            var packet = {
                "gameend": {
                    "UserCard": [{
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [18, 19, 19, 20, 21, 22, 22, 23, 23, 23, 24, 24, 24],
                        "FixedCardsLen": 0,
                        "stFixedCards": []
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [18, 18, 22, 24, 25, 33, 33, 33, 36, 37, 38, 67, 67],
                        "FixedCardsLen": 0,
                        "stFixedCards": []
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [3, 3, 5, 5, 17, 17, 19, 19, 20, 20, 23, 24, 24],
                        "FixedCardsLen": 0,
                        "stFixedCards": []
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [17, 17, 20, 20, 22, 22, 23, 23, 23, 35, 35, 37, 37],
                        "FixedCardsLen": 0,
                        "stFixedCards": []
                    }],
                    "Score": [-4, -4, 40, 32],
                    "EndState": 0,
                    "EndGangInfo": [{"Gang": [], "TotalGangScore": 0}, {"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [],
                        "TotalGangScore": 0
                    }, {"Gang": [], "TotalGangScore": 0}],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 1,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 2,
                        "SpecialType": 2,
                        "FanNum": 40,
                        "addfan": [{"AddType": 112, "AddNum": 2, "AddType2": 1}, {
                            "AddType": 115,
                            "AddNum": 2,
                            "AddType2": 1
                        }, {"AddType": 113, "AddNum": 8, "AddType2": 1}],
                        "hucard": 23,
                        "DianPao": []
                    }, {"chairid": 3, "SpecialType": 3, "FanNum": 0, "addfan": [], "hucard": 0, "DianPao": []}],
                    "money": [99996, 99996, 100040, 99968]
                }
            };
            this.handler_server_game_end_bc(packet);
        }
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.yangzhoumj.tagCDGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.yangzhoumj.AckCDGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_Laizi_BC) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }

        if (cmd == selfCMD.SERVER_JUSHUQUANSHU) {
            this._handler_server_quanshu_bc(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_ROBOT_SER) {
            this._handler_server_tuoguan(jpacket, canDelay);
            return;
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },

    _handler_server_tuoguan: function (data, canDelay) {
        var packet = parsePacket("proto.game.yangzhoumj.AckRobot", data);
        var chairid = packet.chairid;
        var robot = packet.robot;

        var pos = MJModel.getPosBySeatid(chairid);
        if (this._tuoguanFlag[pos]) {
            this._tuoguanFlag[pos].setVisible(robot);
        }

        if (MJModel.isMyPlayer(chairid)) {
            if (this._tuoguanBtn) {
                this._tuoguanBtn.setVisible(robot);
            }
        }
    },
    handler_server_update_info_uc: function (data, canDelay) {
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "扬州麻将";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "超时次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    handler_server_game_end_bc: function (hubeiGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = hubeiGameend.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();

            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_XinYu();
                    result.updateContentView(hubeiGameend);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.room_Action.setReady2Visible(true);
                }
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG && card == this._curLaizipi) {
            var scores = ackBcOpResult.Score;
            this.handler_gang_scores(scores, OpType, OpType2, canDelay);
            this.room_Card.addPengCard(pos, PengType.Peng_AnKang, card, out_pos, OpType);
            this.room_Card.removeHandCard(pos, card, 3);
            MJModel.cur_seat = seatid;
            this.room_Info.showDirectionTip(pos);
            if (MJModel.isMyPlayer(seatid)) {
                this.myselfOpenOutCard();
            }
            var player = MJModel.players[seatid];
            if (player && canDelay) {
                this.handler_op_sound(pos, player.sex, OpType, OpType2, "");
                this.handler_op_effect(pos, out_pos, player.sex, OpType, OpType2);
            }
            return;
        }
        this._super(data, canDelay);
    },

    _handler_server_quanshu_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.yangzhoumj.AckPuQuan", data);
        this._set_public(packet.quanshu, packet.jushu);
    },
    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.yangzhoumj.AckPeizi", data);
        var self = this;
        var curLaizi = packet.peizi;
        var chaotian = packet.banzi;
        var cardLeft = packet.cardnum;
        this.room_Info.showCardNums(cardLeft);
        this._setLaizi(curLaizi, chaotian, -1, canDelay ? true : false);
        if (canDelay == false) {
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }
        MJModel.isEnterWait = true;

        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);

            var mo_card = null;
            if (self.room_Card.isDuoPai(0)) {
                mo_card = self.room_Card.hand_card[0][self.room_Card.hand_card[0].length - 1];
                self.room_Card.hand_card[0].splice(self.room_Card.hand_card[0].length - 1, 1);
            }

            var allPreCars = [];
            var allLaiZi = [];
            var dd = 0;

            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - 1 - i, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);

                    //if (MJModel.outCardEffect_style == 0 || true) {
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    //card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    if (mo_card) {
                        mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                        self.room_Card.hand_card[0].push(mo_card);
                    }
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
                self.room_Card.reflashHandCard(0, true);
                if (mo_card) {
                    mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                    self.room_Card.hand_card[0].push(mo_card);
                }
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1), move_end));
    },

    _setGameType: function () {
        var pkg_id = 1;
        var play_id = [];
        //甩字胡不可炮胡
        play_id.push(MJModel.base_money + "分底");

        if (MJModel.RoomConfigID.indexOf(1366002) != -1) {
            play_id.push("进园子");
        } else {
            play_id.push("紧淌");
        }

        if (MJModel.RoomConfigID.indexOf(1365001) != -1) {
            play_id.push("配子玩法");
        } else {
            play_id.push("无配子");
        }

        if (MJModel.RoomConfigID.indexOf(1365002) != -1) {
            play_id.push("可胡七对");
        } else {
            play_id.push("不可胡七对");
        }

        if (MJModel.RoomConfigID.indexOf(1367001) != -1) {
            play_id.push("连庄");
        }

        if (MJModel.RoomConfigID.indexOf(1367002) != -1) {
            play_id.push("不连庄");
        }

        if (MJModel.RoomConfigID.indexOf(1492001) != -1) {
            play_id.push("四配子翻两倍");
        }

        if (MJModel.RoomConfigID.indexOf(1492002) != -1) {
            play_id.push("四配子翻四倍");
        }

        if (MJModel.RoomConfigID.indexOf(1492003) != -1) {
            play_id.push("四配子不翻倍");
        }

        if (MJModel.RoomConfigID.indexOf(1493001) != -1) {
            play_id.push("一条龙");
        }

        if (MJModel.RoomConfigID.indexOf(1493002) != -1) {
            play_id.push("搬子翻倍");
        }

        if (MJModel.RoomConfigID.indexOf(1493003) != -1) {
            play_id.push("地胡");
        }

        if (MJModel.RoomConfigID.indexOf(1493004) != -1) {
            play_id.push("漏杠扣分");
        }

        if (MJModel.RoomConfigID.indexOf(1493005) != -1) {
            play_id.push("四个配子杠翻倍");
        }

        if (MJModel.RoomConfigID.indexOf(1493006) != -1) {
            play_id.push("杠上开花翻倍");
        }

        if (MJModel.RoomConfigID.indexOf(1494001) != -1) {
            play_id.push("带配子仅限自摸");
        }

        if (MJModel.RoomConfigID.indexOf(1494002) != -1) {
            play_id.push("带配子可炮胡");
        }

        if (MJModel.RoomConfigID.indexOf(1495001) != -1) {
            play_id.push("超时3分钟自动托管");
        }

        if (MJModel.RoomConfigID.indexOf(1364001) != -1) {
            this.maxQuan = 1;
        }
        if (MJModel.RoomConfigID.indexOf(1364002) != -1) {
            this.maxQuan = 2;
        }
        if (MJModel.RoomConfigID.indexOf(1364003) != -1) {
            this.maxQuan = 4;
        }
        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
        this._setFastChat();
    },
    fastChat3: [
        "各位老板老板娘好",
        "快滴啊打撒，嘛区闹", "别虚撒，" +
        "让我稍微想下子",
        "小心滴啊，我听牌了，别出纵",
        "我滴个乖乖，又自摸了",
        "你这个牌打滴太夯了，直接要喊你师父",
        "别吵别吵，专心打牌",
        "啊呦歪，你们两个打联子闹",
        "打滴什么牌哎，会打牌啊",
        "对不住啊，刚才接了个电话，继续继续",
        "不好意思不好意思，一打牌事就来了，嘛就到",
        "咦，怎么又断线了，网络怎么那么差",
    ],
    _setFastChat: function () {
        var chatList = [];
        chatList = this.fastChat3;
        MJModel.mj_fastChat = this.fastChat3;
        var self = this;
        Utils.getFastChatSound = function (chat, sex) {
            for (var i = 0; i < chatList.length; i++) {
                if (chatList[i] == chat) {
                    return getResPath(__String.createWithFormat("yangzhou/sound/fastchat/%1_%2.mp3", sex == SEX_ID.SEX_MAN ? "m" : "w", i + 1));
                }
            }
            return "";
        };
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("yangzhou/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }

        //var armature = new ccs.Armature("effects_mjhunancx");
        //var animation = armature.getAnimation();
        //if (animation) {
        //    if (typeof animation.playWithIndex === "function") {
        //        if (name == "赖子") {
        //            animation.playWithIndex(1, -1, 0);
        //        }
        //        if (name == "赖根") {
        //            animation.playWithIndex(2, -1, 0);
        //        }
        //        if (name == "朝天") {
        //            animation.playWithIndex(3, -1, 0);
        //        }
        //        armature.setPosition(cc.p(size.width / 2, size.height / 2 + 150));
        //        this.addChild(armature, 100);
        //        armature.runAction(cc.sequence(cc.delayTime(1.7), cc.removeSelf()));
        //    }
        //}
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("yangzhou/sound/laizi.mp3")));
        return armature;
    },
    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;
        this._curLaizipi2 = laizipi2;

        var size = cc.director.getWinSize();
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("yangzhou/flag/laizi_bg3.png"));
            this._curLaizi_bg.setPosition(cc.p(size.width - 220, size.height - 70));
            this.addChild(this._curLaizi_bg, 200);
        }
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);

        if (this._curLaizipi > 0) {
            var card = new MJCard();
            card.setValue(this._curLaizi, 0, CardType.Card_Out, 0);
            card.setPosition(cc.p(this._curLaizi_bg.getContentSize().width / 2, this._curLaizi_bg.getContentSize().height / 2));
            card.setScale(1);
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);

            if (gamestart) {
                var dl = 0;
                var ppos = card.getPosition();
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect("赖子皮");
                });
                card.setPosition(cc.p(size.width / 2 - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, size.height / 2 - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(1.0), cc.spawn(cc.moveTo(0.17, ppos), cc.scaleTo(0.17, 1))));
            }
        }
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },
    _checkAddCardFlag: function (card) {
        try {
            if (card.type == CardType.Card_Outing)return;
            if (card.type == CardType.Card_Peng)return;
            if (card.getValue() == 0)return;
            var flag_str = "";
            if (card.getValue() == this._curLaizi)flag_str = "yangzhou/flag/lai_flag2.png";
            if (card.getValue() == this._curLaizipi)flag_str = "yangzhou/flag/laipi_flag2.png";
            if (card.getValue() == this._curLaizipi2)flag_str = "yangzhou/flag/laipi_flag2.png";
            if (flag_str != "") {
                if (card.getValue() == this._curLaizi)card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath(flag_str));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    flag.setScale(0.5);
                    if (card.pos == 0 && card.type != CardType.Card_Out)flag.setScale(1);
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },
    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }
        if (pos == 1) {
            flag.setPosition(cc.p(0, 15));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 5));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },
    resetGame: function (allClean) {
        this._super(allClean);
        this._setLaizi(-1, -1, -1);
    },
    handler_server_scene_info_uc: function (hubei_scene, canDelay) {
        var ackGameFree = hubei_scene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        if (ackGameFree.RoomConfigID.indexOf(1366002) != -1) {
            MJModel.take_in = MJModel.take_in - 20 * ackGameFree.basescore;
        }
        if (hubei_scene.peizi && hubei_scene.peizi > 0) {
            this._setLaizi(hubei_scene.peizi, hubei_scene.banzi, -1, false);
        }
        this._super(ackGameFree, canDelay);

        this._setGameType();

        var robots = hubei_scene.robots;
        if (robots) {
            for (var i = 0; i < robots.length; i++) {
                var pos = MJModel.getPosBySeatid(i);
                if (this._tuoguanFlag[pos]) {
                    this._tuoguanFlag[pos].setVisible(robots[i]);
                }

                if (pos == 0) {
                    if (this._tuoguanBtn) {
                        this._tuoguanBtn.setVisible(robots[i]);
                    }
                }
            }
        }

        var jushu = 1;
        var quanshu = 1;
        if (hubei_scene.jushu)jushu = hubei_scene.jushu;
        if (hubei_scene.quanshu)quanshu = hubei_scene.quanshu;
        this._set_public(quanshu, jushu);
    },
    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("yangzhou/sound/chupai/%1_%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", Utils.toHex2(card)));
        } else {
            this._super(sex, card);
        }
    },

    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            if ((OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                effect = "gang";
            }
            else if ((OpType & ActionType.TYPE_ZHIGANG) == ActionType.TYPE_ZHIGANG) {
                effect = "gang";
            }
            else if ((OpType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG) {
                effect = "gang";
            }
            else if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU && effect == "") {
                var zimo = this.room_Card.isDuoPai(pos);
                effect = "hu";
                if (zimo) {
                    effect = "zimo";
                }
            } else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                effect = "peng";
            }
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("yangzhou/sound/operator/%1_%2.mp3"), sex == SEX_ID.SEX_FEMALE ? "w" : "m", effect));
        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },

    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.actionCallBack("ready");
            }
        }
    },

    isjieshan:false,
    handler_server_end_room_result_bc: function (data, canDelay) {
        var jpacket = parsePacket("proto.game.AckDisbandResult", data);
        if (this.room_EndTouPiao) this.room_EndTouPiao.removeFromParent(true);
        this.room_EndTouPiao = null;
        MJModel.TouPiaoING = false;
        var result = jpacket.Result;
        if (result == 1) {
            PlatformHelper.showToast("房间解散成功，3秒后房间自动结束");
            this.isjieshan = true;
        }
        else {
            PlatformHelper.showToast("解散失败，稍后游戏继续！");
        }
    },

    handler_game_time_over_bc: function (data, canDelay) {
        if (this.isjieshan)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },

    handler_op_effect: function (pos, out_pos, sex, OpType, OpType2, effect) {
        this.room_Tip.showEffect(pos, OpType, this.room_Card.isDuoPai(pos));

        // this.room_Tip.showSimpleEffect(pos, out_pos, OpType, effect);
    },
});

var MJResult_XinYu = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.ackGameEndJS = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;

        var addFanType = [];
        var specialType = this.ackGameEnd.faninfo[seatid].SpecialType;
        switch (specialType) {
            case HuType.HU_ZIMO:
            case HuType.HU_PAOHU:
            case HuType.HU_QIANG_GANG:
            case HuType.HU_GANG_SHANG_HUA:
                var addfan = this.ackGameEnd.faninfo[seatid].addfan;
                for (var i = 0; i < addfan.length; i++) {
                    var add_fan = addfan[i];
                    var add_type = add_fan.AddType;
                    var add_value = add_fan.AddNum;
                    if (AddFanTypeArray.indexOf(add_type) != -1) {
                        //四配胡 ,搬子翻倍, 杠上开花不用显示倍数
                        if (add_type == AddFanType.MJ_FAN_TYPE_4LAIHUPAI || add_type == AddFanType.MJ_FAN_TYPE_BANZIFANBEI || add_type == AddFanType.MJ_FAN_TYPE_GANGSHANGHUA) {
                            addFanType.push(AddFanNameArray[AddFanTypeArray.indexOf(add_type)]);
                        } else {
                            addFanType.push(AddFanNameArray[AddFanTypeArray.indexOf(add_type)] + " x" + add_value);
                        }
                        //七对，清七对，混七对要算炸
                        if (add_type == 36 || add_type == 25 || add_type == 126) {
                            var add_type2 = add_fan.AddType2;
                            if (add_type2) {
                                addFanType.push(add_type2 + "炸" + " " + add_type2 * 4 + "分");
                            }
                        }
                    }
                }
                break;
        }

        for (var i = 0; i < addFanType.length; i++) {
            var fanType = new cc.LabelTTF(addFanType[i], "Arial", 20);
            fanType.setColor(this.leftColor);
            fanType.setAnchorPoint(cc.p(0, 0));
            fanType.setPosition(cc.p(x, y + 10));
            layer.addChild(fanType);
            x += fanType.getContentSize().width + 10;
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5天和 6地和 7抢杠胡 8杠上开花 9花上添花
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "RoomMJ/result2/zi_mo_icon.png";
                    break;
                case 2:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                case 3:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 5:
                    path = "RoomMJ/result2/qiang_gang_icon.png";
                    break;
                case 7:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX, startY));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();
        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];
        var width = 0;
        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0 ) scoredes = "" ;
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.0, 0.5));

        scoreLabel.setPosition(cc.p(width, 15));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },
});

var sendQuxiaoTuoguan = function () {
    var packet = createPacket("proto.game.yangzhoumj.ReqRobot");
    packet.robot = 0;
    sendPacket(packet, selfCMD.CLIENT_ROBOT_REQ);
}

