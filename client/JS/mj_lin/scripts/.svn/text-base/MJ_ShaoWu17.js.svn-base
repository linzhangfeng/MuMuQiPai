loadProtoFile("proto/shaowushiqigameproto.proto");
var SHAOWU_SERVER_CMD = {
    SERVER_HUBEI_LAIZIINFO: 5029,
    SERVER_CHANGE_CARD: 5009,
}

var ShaowuType = {
    50: "三金倒",
    4: "抢金",
};
var PZHActionType =
{
    TYPE_SANJINDAO: 0x100000, //三金倒
    TYPE_QIANGJING: 0x200000,	 //抢金
};
var MJTable_ShaoWu17 = MJTable.extend({

    isRecordShow: false,
    _allBeiShu: [null, null, null, null],
    _curLaizi_bg: null,
    _curLaizi: -1,
    _curLaizipi :-1,
    _out_card_temp: [],
    _hua_card_nums: [0, 0, 0, 0],
    _has_show_pi_flag: false,
    _isgang: false,
    gameDes: "",
    _pkgid: 0,
    effectType: "horizontal",
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        this._init_extend();

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 1;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        //MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_chat_style = 1;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_touch_tip = 1;
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;
        MJModel.shareType = 1;
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2610|| this._pkg_id == 2579){
                MJModel.mj_roomType = 1;
            }
            if (this._pkg_id == 2611|| this._pkg_id == 2580 ) {
                MJModel.mj_roomType = 2;
            }

        } catch (e) {
            Log(this, e);
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }
        this._super();
        this._init_ui();
        MJModel.mj_paiban = "horizontal";
        //this.schedule(this.test, 1.0);


    },
    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 2) pkg_id = 2;
        if (MJModel.mj_roomType == 1) pkg_id = 3;
        return __String.createWithFormat(getResPath("shaowu17mjnew/flag/pkgid%1.png"), pkg_id);

    },
    _flagDirection: function (pos, flag, m_size) {
        if (pos == 1) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(0, 17));
                flag.setRotation(-90);
            }else{
                flag.setPosition(cc.p(8, 17));
                flag.setRotation(-100);
            }
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 17));
            flag.setRotation(180);
        } else if (pos == 3) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(m_size.width, m_size.height));
                flag.setRotation(90);
            }else{
                flag.setPosition(cc.p(m_size.width, m_size.height - 4));
                flag.setRotation(100);
            }
        }
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            this._curLaizi = 0x41;
        }
    },
    handler_server_game_start_bc: function (data, canDelay) {
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._super(data, canDelay);
        this._hua_card_nums = [0, 0, 0, 0];
        this.updateBaoPiUI();
    },
    handler_game_time_over_bc: function (data, canDelay) {
        if (!this.gameending)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },
    gameending: false,
    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this.gameending = true;
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_ShaoWu();
                    result.updateContentView(shanxiGameEnd);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.gameending = false;
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(1), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },
    loadCardConfig: function (path) {
        if (MJModel.mj_roomType == 2) {
            if(MJModel.mj_bg_use == 0){
                path = "shaowu17mjnew/config/card_config_2ren.json";
            }
            else{
                path = "shaowu17mjnew/config/card_config2d_2ren.json";
            }
        }else{
            if(MJModel.mj_bg_use == 0){
                path = "shaowu17mjnew/config/card_config.json";
            }
            else{
                path = "shaowu17mjnew/config/card_config2d.json";
            }
        }

        this._super(path);
    },
    isSupportPublicCard: function () {
        return false;
    },
    updateBaoPiUI: function () {
        for (var i = 0; i < 4; i++) {
            this.setPlayerBaoPi(i,  this._hua_card_nums[i]);
        }
    },
    hideBaoPiUI: function () {
        for (var i = 0; i < 4; i++) {
            if (this._allpi[i])this._allpi[i].setVisible(false);
        }
    },
    _allpi: [null, null, null, null],
    setPlayerBaoPi: function (pos,  pi) {
        Log(this, "setPlayerBaoPi");
        var sp = this._allpi[pos];
        if (sp == null) {
            sp = new cc.Sprite(getResPath("shaowu17mjnew/flag/pi.png"));
            var m_pMoney = new cc.LabelAtlas(pi, getResPath("RoomMJ/player/money.png"), 12, 22, '0');//new cc.LabelTTF("0", "Thonburi", 20);
            m_pMoney.setName("text");
            m_pMoney.setAnchorPoint(cc.p(0, 0.5));
            m_pMoney.setPosition(sp.getContentSize().width, sp.getContentSize().height / 2);
            sp.addChild(m_pMoney);
            this._allpi[pos] = sp;

            var player = this.players[pos];
            var p = MJConfig.getPlayerPos(pos);
            sp.setPosition(player.m_size.width/2, player.m_size.height+20);
            if (pos ==2){
                sp.setPosition(player.m_size.width+10, player.m_size.height-20);
            }
            player.addChild(sp, 12);
        } else {
            sp.getChildByName("text").setString(pi);
            sp.setVisible(true);
        }
    },
    _init_extend: function () {
        var self = this;
        //去掉出牌放大
        MJCards.prototype.outHandCardEffct2 = function (pos, value) {
            this.addOutCard(pos, value);
            this.reflashHandCard(pos, true, true);
        };
        //去掉出牌按钮
        MJCards.prototype.createOutCardBtn = function () {

        };

        MJCard.prototype.createTingFlag = function () {
            if (this.tingpai_flag) {
                try {
                    this.tingpai_flag.removeFromParent(true);
                } catch (e) {

                }

                this.tingpai_flag = null;
            }

            var m_size = this.getContentSize();
            this.tingpai_flag = new cc.Sprite(getResPath("RoomMJ/ting.png"));
            this.tingpai_flag.setAnchorPoint(cc.p(1, 1));
            this.tingpai_flag.setPosition(cc.p(m_size.width-5, m_size.height-5));
            this.tingpai_flag.setVisible(false);
            this.addChild(this.tingpai_flag);
        };
        var super_continueClick = MJResult.prototype.continueClick;
        MJResult.prototype.continueClick = function (ref) {
            super_continueClick.call(this, ref);
            self.gameending = false;
        };

        MJCard.prototype.check_addFlag = function () {
            self._checkAddCardFlag(this);
        };

        //var super_addOutCard = MJCards.prototype.addOutCard;
        //MJCards.prototype.addOutCard = function (pos, value, showPoint, isReflash) {
        //    if (isReflash == undefined)isReflash = false;
        //    if (isReflash == false)self._out_card_temp.push({"pos": pos, "card": value});
        //    if (self._mj_style == 0) {
        //        var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        //        if (banker_pos == pos && value == self._curLaizipi ) {
        //
        //        } else {
        //            return this.addHuCard(pos, value);
        //        }
        //
        //    }
        //    return super_addOutCard.call(this, pos, value, showPoint);
        //};
        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };
        //锁住赖子牌
        MJCards.prototype.locklaizipai = function () {
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var card = this.hand_card[0][i];
                if (card.getValue() == self._curLaizi) {
                    card.setBlackVis(true);
                    card.setCardTouchEnable(false);
                }
            }

        };
        MJCards.prototype.setSomeCardClickState = function () {
            if (MJModel.mj_lockcard_type == 1) {
                var listen_cards = [];
                for (var i = 0; i < MJModel.listen_info.length; i++) {
                    var lsi = MJModel.listen_info[i];
                    listen_cards.push(lsi.OutCard);
                }

                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    if (listen_cards.indexOf(card.getValue()) == -1) {
                        card.setBlackVis(true);
                        card.setCardTouchEnable(false);
                    }
                }
            } else if (MJModel.mj_lockcard_type == 2) {
                if (this.isDuoPai(0) == false) return;
                for (var i = 0; i < this.hand_card[0].length - 1; i++) {
                    var card = this.hand_card[0][i];
                    card.setBlackVis(true);
                    card.setCardTouchEnable(false);
                }
            }else{
                this.locklaizipai();
            }
        };
        MJCards.prototype.sortCard = function (a, b) {
            return self._sortCard(a, b);
        };

        var super_showCardNums = MJInfo.prototype.showCardNums;
        MJInfo.prototype.showCardNums = function (nums, isMo) {
            if (isMo == undefined) isMo = false;
            var n = 4;
            if (MJModel.mj_roomType == 1) {
                n = 3;
            }
            else if(MJModel.mj_roomType == 2){
                n = 2;
            }
            if (isMo && this.curCardNums != nums && nums <= n) {
                //self_table._showLeftCardEffect(nums);
            }
            super_showCardNums.call(this, nums);
        }

        //新增按钮，四金倒
        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat,operat2) {
            cc.log("setOperator:operat===" + operat);
            this.removeChildByName("ChooseGang_selectLayer");
            if ((operat & PZHActionType.TYPE_SANJINDAO) == PZHActionType.TYPE_SANJINDAO) {
                if (this.actions["sanjindao"]) {
                    this.actions["sanjindao"].setVisible(true);
                }
            }
            if ((operat & PZHActionType.TYPE_QIANGJING) == PZHActionType.TYPE_QIANGJING) {
                if (this.actions["qiangjin"]) {
                    this.actions["qiangjin"].setVisible(true);
                }
            }
            super_setOperator.call(this, operat);
            if(operat2==undefined) {
                operat2 = 0;
            }
            //三金倒、抢金没有过牌按钮 ，operat2 == 1为天胡
            if ((operat & PZHActionType.TYPE_SANJINDAO) == PZHActionType.TYPE_SANJINDAO
                || (operat & PZHActionType.TYPE_QIANGJING) == PZHActionType.TYPE_QIANGJING ) {
                if (this.actions["pass"]) {
                    this.actions["pass"].setVisible(false);
                }
                this.reflashOpBtns();
            }
            if ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU && operat2 ==1) {
                if (this.actions["pass"]) {
                    this.actions["pass"].setVisible(false);
                }
                this.reflashOpBtns();
            }
            var flag =false;
            if (self.room_Card.hand_card[0].length == 2 ){
                if (self.room_Card.hand_card[0][0].getValue() == self._curLaizi && self.room_Card.hand_card[0][1].getValue() == self._curLaizi) {
                    flag =true;
                }
            }

            if (operat != -1 && self.room_Card.isDuoPai(0) && ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU )&& flag){
                if (this.actions["pass"]) {
                    this.actions["pass"].setVisible(false);
                }
                this.reflashOpBtns();
            }

        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            if (name == "qiangjin") {
                this.setOperator(-1);
                sendOperateCard(PZHActionType.TYPE_QIANGJING, MJModel.curOperateCard);
                return;
            }
            else if (name == "sanjindao") {
                this.setOperator(-1);
                sendOperateCard(PZHActionType.TYPE_SANJINDAO, MJModel.curOperateCard);
                return;
            }
            super_btnCallback.call(this, ref);
        };

        MJConfig.getHandCardOrder = function (pos, index) {
            var order = [
                [
                    400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
                ],
                [
                    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                ],
                [
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                ],
                [
                    16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                ],
            ];
            return order[pos][index];
        };
        MJConfig.getOutCardOrder = function (pos, index) {
            if (MJModel.mj_roomType == 2) {
                index = index%58;
                var order = null;
                if (MJModel.mj_bg_use == 1) {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        ],
                    ];
                    return order[pos][index];
                } else {
                    if (pos == 0) {
                        return index%58;
                    } else if (pos == 2) {
                        return 57 - index%58;
                    }
                    return 0;
                }
            }
            else{
                if (MJModel.mj_bg_use == 1) {
                if(pos == 0 || pos == 2){
                    index = index%26;
                }else {
                    if(MJModel.mj_paiban == "vertical"){
                        index = index%28;
                    }else {
                        index = index%30;
                    }
                }
                var order = null;
                if((pos == 1 || pos == 3) && MJModel.mj_paiban == "vertical"){
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                            6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                            0, 1, 2, 3, 4, 5, 6,
                        ],
                    ];
                }else {
                    order = [
                        [
                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                            2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                            1, 1, 1, 1, 1, 1,
                            0, 0, 0, 0, 0, 0,
                        ],
                        [
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                            9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                        ],
                        [
                            0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                            1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                            2, 2, 2, 2, 2, 2,
                            3, 3, 3, 3, 3, 3,
                        ],
                        [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                        ],
                    ];
                }
                return order[pos][index];
            }else{

                if(MJModel.has_hu_layout == 1){
                    index = index%22;
                }else {
                    index = index%26;

                }

                var order = [
                    [
                        0,  1,  2,  3,  4,  5,
                        6,  7,  8,  9,  10, 11, 12, 13,
                        14, 15, 16, 17, 18, 19, 20, 21, 22, 23,24,25
                    ],
                    [
                        25,24,23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        25,24,23, 22, 21, 20,
                        19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,
                    ],
                    [
                        20, 21, 22, 23, 24, 25,
                        12 , 13, 14, 15, 16, 17, 18, 19,
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                    ],
                ];
                return order[pos][index];
            }
            }

        };

        MJConfig.getOutCardPos =function (pos, index) {
            if (MJModel.mj_roomType == 2) {
                index = index%58;
                return this.getWorldPosition("out_" + pos, "o_" + index);
            }
            if (MJModel.mj_bg_use == 1) {
                if(pos == 0 || pos == 2){
                    index = index%26;
                }else {
                    if(MJModel.mj_paiban == "vertical"){
                        index = index%28;
                    }else {
                        index = index%30;
                    }
                }
            } else {
                if(MJModel.has_hu_layout == 1){
                    index = index%22;
                }else {
                    index = index%26;
                }
            }
            if((pos == 1 || pos == 3) && MJModel.mj_bg_use == 1 && MJModel.mj_paiban == "vertical"){
                return this.getWorldPosition("out_v_" + pos, "o_" + index);
            }else {
                return this.getWorldPosition("out_" + pos, "o_" + index);
            }
        };
        var super_addOutCard = MJCards.prototype.addOutCard;
        MJCards.prototype.addOutCard = function (pos, value, showPoint) {
           if(self._isHuaPai(value)){
               self._hua_card_nums[pos]++;
               self.updateBaoPiUI();
           }
           else{
               return super_addOutCard.call(this, pos, value, showPoint);
           }

        };


        MJTips.prototype.showSimpleEffect = function (pos, out_pos , type , effect , hold) {
            try{
                if (hold == undefined)hold = false;
                var begin = MJConfig.getOperatorTipPos(pos);
                var path = null;
                var parentPath = "RoomMJ/simple/";
                if(effect == "qiangganghu"){
                    hold = true;
                    path = getResPath(parentPath + "qiangganghu.png");
                }else if(effect == "dianpao"){
                    hold = true;
                    path = getResPath(parentPath + "dianpao.png");
                }else if(effect == "haidi"){
                    path = getResPath(parentPath + "haidi.png");
                }else if(effect == "baoting"){
                    path = getResPath(parentPath + "baoting.png");
                }else if(effect == "buzhang"){
                    path = getResPath(parentPath + "buzhang.png");
                }else if(effect == "genzhuang"){
                    var size = cc.director.getWinSize();
                    begin = cc.p(size.width / 2, size.height / 2);
                    path = getResPath(parentPath + "genzhuang.png");
                }else if(type == ActionType.TYPE_PENG){
                    path = getResPath(parentPath + "peng.png");
                }else if(type == ActionType.TYPE_HU){
                    hold = true;
                    if(effect == "zimo"){
                        path = getResPath(parentPath + "zimo.png");
                    }else {
                        if(pos != out_pos){
                            this.showSimpleEffect(out_pos , null , null , "dianpao");
                        }
                        path = getResPath(parentPath + "hu.png");
                    }
                }else if(type == ActionType.TYPE_LEFT_CHI || type == ActionType.TYPE_CENTER_CHI || type == ActionType.TYPE_RIGHT_CHI){
                    path = getResPath(parentPath + "chi.png");
                }else if(type ==PZHActionType.TYPE_SANJINDAO ||type ==PZHActionType.TYPE_QIANGJING){
                    path = getResPath(parentPath + "hu.png");
                }
                else{
                    path = getResPath(parentPath + "gang.png");
                }
                var bg = new cc.Sprite(getResPath(parentPath + "bg.png"));
                bg.setPosition(begin);
                bg.setName("hu_effect");
                // this.addChild(bg, 10000);

                var sp = new cc.Sprite(path);
                sp.setPosition(begin);
                sp.setName("hu_effect");
                this.addChild(sp, 10000);

                if(hold){
                    // bg.runAction(cc.sequence(cc.delayTime(this.getHuEffectTime()), cc.removeSelf()));
                    sp.runAction(cc.sequence(cc.delayTime(this.getHuEffectTime()), cc.removeSelf()));
                }else {
                    // bg.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                    sp.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            }catch (e){
                Log(this, e);
            }
        };
    },

    _init_ui: function () {
        var self = this;
        //抢金
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("shaowu17mjnew/action/qiangjin1.png"), getResPath("shaowu17mjnew/action/qiangjin2.png"), "");
            this.room_Action.actions["qiangjin"] = btn;
            btn.setName("qiangjin");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }
        //三金倒
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("shaowu17mjnew/action/sanjindao1.png"), getResPath("shaowu17mjnew/action/sanjindao2.png"), "");
            this.room_Action.actions["sanjindao"] = btn;
            btn.setName("sanjindao");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }
    },
    isSupportVideoAction: function () {
        return false;
    },

    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        //
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.shaowushiqizhang.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.shaowushiqizhang.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == SHAOWU_SERVER_CMD.SERVER_HUBEI_LAIZIINFO) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }
        if (cmd == SHAOWU_SERVER_CMD.SERVER_CHANGE_CARD) {
            this._handler_server_buhua_bc(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("-_handler_game_record-");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "邵武十七张 · 4人 ";
        if (MJModel.mj_roomType == 1) {
            gameType = "邵武十七张 · 3人 ";
        }
        if (MJModel.mj_roomType == 2) {
            gameType = "邵武十七张 · 2人 ";
        }
        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);
        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }

        for (var i = 0; i < gameRecord.MostWinScoreUser.length; i++) {
            var seatId = gameRecord.MostWinScoreUser[i];
            if (seatId != 255) {
                _winSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "赢分次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.WinCounts, recoreInfo.outtime_num];

            if (player && player.uid != -1) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, _winSeatid[i], _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);

        this.release();
    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._setLaizi(-1, -1, -1);
        this._out_card_temp = [];
        this._hua_card_nums = [0, 0, 0, 0];
        this.hideBaoPiUI();
        this.gameending = false;
    },

    _handler_server_buhua_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.shaowushiqizhang.AckBuHua", data);
        var buhua = packet.buhua;
        var leftcount = packet.leftcount;
        this.room_Info.showCardNums(leftcount, true);
        var alldata = [];
        var pnum = 4;
        if (MJModel.mj_roomType == 1) pnum = 3;
        if (MJModel.mj_roomType == 2) pnum = 2;

        for (var i = MJModel.banker_seatid; i < (MJModel.banker_seatid + buhua.length); i ++){
            var s = i;
            if (s >= pnum) s -= pnum;
            for (var j = 0; j < buhua.length; j++) {
                if (buhua[j].chairid == s){
                    var data = {};
                    data.chairid = buhua[j].chairid;
                    data.hua = buhua[j].hua;
                    data.getcard = buhua[j].getcard;
                    alldata.push(data);
                    break;
                }
            }
        }

        var self = this;
        var count = -1;

        var callback1 = cc.callFunc(function () {
            count++;
            var data = alldata[count];
            if (data){
                self._show_buhua_action(data.chairid,data.hua,data.getcard,canDelay);
            }
        });

        if (alldata.length != 0){
            if (canDelay){
                MJModel.isEnterWait = true;
                var self = this;
                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                });
                this.runAction(cc.sequence(cc.sequence(cc.delayTime(0.3), callback1).repeat(alldata.length),cc.delayTime(1), callback));
            }
            else{
                for (var i = 0; i < alldata.length; i ++){
                    var data = alldata[i];
                    this._show_buhua_action(data.chairid,data.hua,data.getcard,canDelay);
                }
            }
        }
    },

    _show_buhua_action:function(seatId,huaArr,getcardArr,canDelay){
        var pos = MJModel.getPosBySeatid(seatId);
        for (var j = 0; j < huaArr.length; j++) {
            this.room_Card.removeHandCard(pos, huaArr[j]);
        }
        for (var j = 0; j < getcardArr.length; j++) {
            this.room_Card.addHandCard(pos, getcardArr[j]);
            //this.room_Card.removePublicCardByNums(1,false);
        }
        this.room_Card.reflashHandCard(pos);

        for (var j = 0; j < huaArr.length; j++) {
            this.room_Card.addOutCard(pos, huaArr[j]);
            //this.room_Card.removeHandCard(pos, huaArr[j]);
        }
        if (canDelay && (huaArr.length>0)){
            this._ShowEffect("buhua", pos);
            var player = MJModel.players[seatId];
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/operator/%1_buhua.mp3"),player.sex == SEX_ID.SEX_FEMALE ? "w" : "m"));
        }
        //起手补花后标记摸的牌
        if (MJModel.isMyPlayer(seatId) && this.room_Card.isDuoPai(0)){
            MJModel.mj_mo_cards[0] = getcardArr[getcardArr.length - 1];
            var is_ok = this.room_Card.removeHandCard(0, MJModel.mj_mo_cards[0]);
            if (is_ok) this.room_Card.initMoCard(0, MJModel.mj_mo_cards[0], true);
        }

    },

    _isHuaPai: function (card) {
        try {
            if(card >= 0x31 && card <= 0x58){
                return true;
            }
            else {
                return false;
            }
        } catch (e) {
            return false;
        }

    },

    handler_out_card_sound: function (sex, card) {
        if (this._isHuaPai(card)){
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/operator/%1_buhua.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w"));
        }
        else{
            this._super(sex, card);
        }
    },
    //
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {

        } else {
            if (OpType ==PZHActionType.TYPE_SANJINDAO ||OpType ==PZHActionType.TYPE_QIANGJING) {
                effect = "hu";
            }
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },

    handler_server_scene_info_uc: function (shanxi_gameScene, canDelay) {
        var ackGameFree = shanxi_gameScene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        if (sceneStatus != 0) {
            //恢复癞子
            if (shanxi_gameScene.laizicard) {
                this._curLaizi = shanxi_gameScene.laizicard;
                if (this._curLaizi > 0 && this._curLaizi != 255) {
                    var curLaizi = this._curLaizi;
                    this._setLaizi(curLaizi, -1, -1);//还原赖子
                }
            }
        }
        this._super(ackGameFree, canDelay);
        this._setGameType();

    },
    handler_server_out_card_bc: function (data, canDelay) {
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var card = userOutCard.Card;
        this._super(data, canDelay);
        var pos = MJModel.getPosBySeatid(seatId);
        if(canDelay) {
            if (this._isHuaPai(card)){
                this._ShowEffect("buhua", pos);
            }
        }
    },
    handler_server_peng_kang_bc: function (data, canDelay) {
        this._super(data, canDelay);
        try {
            var hasHua = false;
            for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                if (this._isHuaPai(this.room_Card.hand_card[0][i].getValue())) {
                    hasHua = true;
                    break;
                }
            }
            if (hasHua) {
                MJModel.isEnterWait = true;
                var out_card_over = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                });

                this.runAction(cc.sequence(cc.delayTime(1), out_card_over));
            }
        } catch (e) {

        }
    },

    _ShowEffect: function (name, pos) {
        try {
            var begin = MJConfig.getOperatorTipPos(pos);
            var armature = null;
            var effect_name = "";
            if (name == "buhua") {
                effect_name = "effects_mjxxbuhuax";
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("shaowu17mjnew/effect/buhua/effects_mjxxbuhuax.ExportJson"));
            }
            armature = new ccs.Armature(effect_name);
            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(0);

                        armature.setPosition(begin);
                        this.room_Tip.addChild(armature, 10000);
                    }
                }
                armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
            }
            // Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
        } catch (e) {
            Log(this, e);
        }
    },

    _setGameType: function () {
        //盐城麻将
        MJModel.play_id_str = [];
        if (MJModel.RoomConfigID.indexOf(1179001) != -1) {
            MJModel.play_id_str.push("1分");
        }
        if (MJModel.RoomConfigID.indexOf(1179002) != -1) {
            MJModel.play_id_str.push("3分");
        }
        if (MJModel.RoomConfigID.indexOf(1179003) != -1) {
            MJModel.play_id_str.push("5分");
        }
        if (MJModel.RoomConfigID.indexOf(1180001) != -1) {
            MJModel.play_id_str.push("金杠互算");
        }
        if (MJModel.RoomConfigID.indexOf(1180002) != -1) {
            MJModel.play_id_str.push("点炮胡");
        }
        if (MJModel.RoomConfigID.indexOf(1180003) != -1) {
            MJModel.play_id_str.push("赌金");
        }
        if (MJModel.RoomConfigID.indexOf(1180004) != -1) {
            MJModel.play_id_str.push("开局连三碰");
        }
        if (MJModel.RoomConfigID.indexOf(1180005) != -1) {
            MJModel.play_id_str.push("一花、无花");
        }
        if (MJModel.RoomConfigID.indexOf(1181001) != -1) {
            MJModel.play_id_str.push("分饼");
        }
        if (MJModel.RoomConfigID.indexOf(1181002) != -1) {
            MJModel.play_id_str.push("不分饼");
        }
        if (MJModel.RoomConfigID.indexOf(1182001) != -1) {
            MJModel.play_id_str.push("点炮单赔");
        }
        if (MJModel.RoomConfigID.indexOf(1182002) != -1) {
            MJModel.play_id_str.push("点炮全赔");
        }if (MJModel.RoomConfigID.indexOf(1183002) != -1) {
            MJModel.play_id_str.push("十七张");
        }

        var gameDes = "";
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            gameDes += MJModel.play_id_str[i];
            if (i != MJModel.play_id_str.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        if (laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        var size = cc.director.getWinSize();
        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("shaowu17mjnew/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(70, size.height -130));
            this._curLaizi_bg.setScale(0.85);
            this.addChild(this._curLaizi_bg, 500);
        }

        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);
        this._curLaizi = laizi;

        if (this._curLaizi > 0) {
            laizi_tip = new cc.LabelTTF("金牌", "Arial", 24);
            laizi_tip.setColor(cc.color(87, 207, 93));
            if (laizi_tip) {
                laizi_tip.setPosition(cc.p(45+17, 100));
                this._curLaizi_bg.addChild(laizi_tip);
            }

            var card = new MJCard();
            card.setValue(laizi, 0, CardType.Card_Hand, 0);//CardType.Card_Out
            card.setPosition(cc.p(110, 70));
            card.setScale(0.6);//0.9
            card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
            card.setPosition(cc.p(45+17, 50));
            //  laizi_tip.setPosition(cc.p(-100000, 45));
            if (gamestart) {
                var endPos = card.getPosition();
                var scale = card.getScale();
                var dl = 0;
                laizi_tip.setVisible(false);
                laizi_tip.runAction(cc.sequence(cc.delayTime(1 + dl), cc.show()));
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect();
                });

                var p = MJConfig.getInfoPos();
                card.setPosition(cc.p(p.x - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, p.y - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), cc.scaleTo(0.2, 1.5), cc.delayTime(0.5), cc.spawn(cc.moveTo(0.17, endPos), cc.scaleTo(0.17, scale))));//2
            }
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.shaowushiqizhang.AckLaiziCard", data);
        var self = this;
        var curLaizi = packet.laizicard;
        this._curLaizi = curLaizi;
        //var curLaizipi = packet.laizipicard;
        var publiccard = null;
        var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        try {
            //publiccard = this.room_Card.getNextPublicCard(false);
            //publiccard.updateValue(curLaizi);
        } catch (e) {

        }
        var outcard = this.room_Card.addOutCard(banker_pos, curLaizi, false);

        if (canDelay == false) {
            //publiccard.setVisible(false);
            this._setLaizi(curLaizi, -1, -1, canDelay ? true : false);
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }

        MJModel.isEnterWait = true;

        outcard.setVisible(false);
        //publiccard.runAction(cc.sequence(cc.delayTime(0.0), cc.moveTo(0.3, outcard.getPosition()), cc.hide()));

        var show_effect = cc.callFunc(function () {
            self._setLaizi(curLaizi, -1, -1, canDelay ? true : false);
            outcard.setVisible(true);
            //publiccard.setVisible(false);
        });
        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);
            var allPreCars = [];
            var allLaiZi = [];
            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - i - 1, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    self.room_Card.reflashHandCard(1, true);
                    self.room_Card.reflashHandCard(2, true);
                    self.room_Card.reflashHandCard(3, true);
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
            }
        });
        this.runAction(cc.sequence(cc.delayTime(0.3), show_effect, cc.delayTime(1.0), move_end));
    },

    //赖子动画
    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("shaowu17mjnew/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }

        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("shaowu17mjnew/sound/laizi.mp3")));
        return armature;
    },

    _showHandcardFlag: function () {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _checkAddCardFlag: function (card) {
        try {
            if (card.value == this._curLaizi) {
                card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath("shaowu17mjnew/flag/lai_flag2.png"));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    if (card.type == CardType.Card_End) {
                        if (card.pos == 1 || card.pos == 3) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(0.7);
                        }
                    }

                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flag.setScale(0.6);
                        if (card.pos == 0) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(0.6);
                        }
                    }
                }
                return;
            }

        } catch (e) {
            Log(this, e);
        }
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边

            //if (av == this._curLaizipi && bv != this._curLaizipi)return 1;//赖子皮放在最前边
            //if (av != this._curLaizipi && bv == this._curLaizipi)return -1;//赖子皮放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
});

var AddFanType = {
    0: "抢金",
    1: "闲金",
    2: "金雀",
    3: "金龙",
    4: "三金倒",
    5: "清一色",
    6: "夹金",
    7: "无花无杠",
    8: "无花",
    9: "一花",
    10:"天胡",
    11: "平胡",



};

var MJResult_ShaoWu = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd.endinfo;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("shaowu17mjnew/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 18;
                    }
                }
            }
        }
        //x += 10;
        ////杠牌分
        //var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        //if (gangScore) {
        //    var txt = "杠牌分  +";
        //    if (gangScore < 0) {
        //        txt = "杠牌分  ";
        //    }
        //    var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
        //    gangfen.setColor(this.leftColor);
        //    gangfen.setAnchorPoint(cc.p(0, 0));
        //    gangfen.setPosition(cc.p(x, y + 10));
        //    layer.addChild(gangfen);
        //    x += gangfen.getContentSize().width + 10;
        //}
        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 5;
                }
            }
        }
        if (sxendInfo[seatid]){
            x += 5;
            //连三碰分
            var LianSanPeng = sxendInfo[seatid].LianSanPeng;
            if (LianSanPeng) {
                var txt = "连三碰分 +";
                if (LianSanPeng < 0) {
                    txt = "连三碰分 ";
                }
                var sanpengScore = new cc.LabelTTF(txt + LianSanPeng, "Arial", 20);
                sanpengScore.setColor(this.leftColor);
                sanpengScore.setAnchorPoint(cc.p(0, 0));
                sanpengScore.setPosition(cc.p(x, y + 10));
                layer.addChild(sanpengScore);
                x += sanpengScore.getContentSize().width + 10;
            }

            x += 5;
            //分饼分
            var FenBingScore = sxendInfo[seatid].FenBingScore;
            if (FenBingScore) {
                var txt = "饼分 +";
                if (FenBingScore < 0) {
                    txt = "饼分 ";
                }
                var bingfen = new cc.LabelTTF(txt + FenBingScore, "Arial", 20);
                bingfen.setColor(this.leftColor);
                bingfen.setAnchorPoint(cc.p(0, 0));
                bingfen.setPosition(cc.p(x, y + 10));
                layer.addChild(bingfen);
                x += bingfen.getContentSize().width + 10;
            }
            x += 5;
            //赌金分
            var DuJin = sxendInfo[seatid].DuJinScore;
            if (DuJin) {
                var txt = "赌金分 +";
                if (DuJin < 0) {
                    txt = "赌金分 ";
                }
                var dujinScore = new cc.LabelTTF(txt + DuJin, "Arial", 20);
                dujinScore.setColor(this.leftColor);
                dujinScore.setAnchorPoint(cc.p(0, 0));
                dujinScore.setPosition(cc.p(x, y + 10));
                layer.addChild(dujinScore);
                x += dujinScore.getContentSize().width + 10;
            }
            //金杠互算分
            var JinGang = sxendInfo[seatid].JinGangScore;
            if (JinGang) {
                x += 5;
                var txt = "金杠分 +";
                if (JinGang < 0) {
                    txt = "金杠分 ";
                }
                var JinGangScore = new cc.LabelTTF(txt + JinGang, "Arial", 20);
                JinGangScore.setColor(this.leftColor);
                JinGangScore.setAnchorPoint(cc.p(0, 0));
                JinGangScore.setPosition(cc.p(x, y + 10));
                layer.addChild(JinGangScore);
                x += JinGangScore.getContentSize().width + 10;
            }
            x += 5;
            //牌型分
            var paixingScore = sxendInfo[seatid].TotalScore;
            if (paixingScore) {
                var txt = "牌型分 +";
                if (paixingScore < 0) {
                    txt = "牌型分 ";
                }
                var TotalScore = new cc.LabelTTF(txt + paixingScore, "Arial", 20);
                TotalScore.setColor(this.leftColor);
                TotalScore.setAnchorPoint(cc.p(0, 0));
                TotalScore.setPosition(cc.p(x, y + 10));
                layer.addChild(TotalScore);
                x += TotalScore.getContentSize().width + 10;
            }
        }

        return layer;
    },
    createHandCard: function (seatid) {
        var tagHu = 0;
        //占时注释掉，胡的那张牌

        if (this.ackGameEnd.faninfo.length > seatid) {
            if (this.ackGameEnd.faninfo[seatid].hucard && this.ackGameEnd.faninfo[seatid].hucard != 255) {
                tagHu = this.ackGameEnd.faninfo[seatid].hucard;
            }
        }

        var layer = new cc.Layer();
        var imageView = new ccui.ImageView(getResPath("RoomMJ/result2/item_bg.png"));
        imageView.setPosition(cc.p(0, 0));
        imageView.setAnchorPoint(cc.p(0, 0));
        layer.addChild(imageView);

        var pos = MJModel.getPosBySeatid(seatid);
        if (this.ackGameEnd.UserCard.length > seatid) {
            var x = 230;
            var y = 15;
            var paiSpace = 10;
            var penggangSize = cc.size(88, 40);
            for (var i = 0; i < this.ackGameEnd.UserCard[seatid].FixedCardsLen; i++) {

                var state = this.ackGameEnd.UserCard[seatid].stFixedCards[i].state;
                var card = this.ackGameEnd.UserCard[seatid].stFixedCards[i].CardData;
                var chairID = this.ackGameEnd.UserCard[seatid].stFixedCards[i].chairID;
                var out_pos = MJModel.getPosBySeatid(chairID);

                if (card == undefined || card == null || card == 0) {
                    continue;
                }
                //下排杠牌
                var gangCard = new MJPeng();
                gangCard.setAnchorPoint(cc.p(0.0, 0.0));

                if ((state & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                    gangCard.setValue(PengType.Peng_Peng, pos, card, 0, out_pos, true, state);
                }
                else if ((state & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                    gangCard.setValue(PengType.Peng_AnKang, pos, card, 0, out_pos, true, state);
                }
                else if ((state & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI) {
                    gangCard.setValue(PengType.Chi_L, pos, card, 0, out_pos, true, state);
                }
                else if ((state & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI) {
                    gangCard.setValue(PengType.Chi_M, pos, card, 0, out_pos, true, state);
                }
                else if ((state & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                    gangCard.setValue(PengType.Chi_R, pos, card, 0, out_pos, true, state);
                }
                else {
                    gangCard.setValue(PengType.Peng_Kang, pos, card, 0, out_pos, true, state);
                }
                gangCard.setScale(0.35);
                gangCard.setPosition(cc.p(x + penggangSize.width/2 , y + penggangSize.height/2));
                layer.addChild(gangCard);

                x += penggangSize.width + 18;

            }

            var is_remove = 0;
            var need_remove = (parseInt(this.ackGameEnd.UserCard[seatid].ChangeableCardsLen % 3) == 2);
            this.hand_card[pos] = [];
            this.ackGameEnd.UserCard[seatid].ChangeableCards.sort(MJModel.mj_table.room_Card.sortCard);
            //牌面信息
            for (var i = this.ackGameEnd.UserCard[seatid].ChangeableCardsLen - 1; i >= 0; i--) {

                //去掉type＝＝1的判断 有些游戏自摸不一定叫自摸 只判断玩家的手牌数量 只要多牌 而且有胡牌数据 就跳过
                if (is_remove == 0 && need_remove && tagHu) {
                    if (this.ackGameEnd.UserCard[seatid].ChangeableCards[i] == tagHu) {
                        is_remove = 1;
                        continue;
                    }
                }
                var handCard = new MJCard();
                handCard.setValue(this.ackGameEnd.UserCard[seatid].ChangeableCards[i], 0, CardType.Card_Hand, 0);
                handCard.setScale(0.45);
                handCard.setAnchorPoint(cc.p(0.0, 0.0));
                handCard.setPosition(cc.p(x , y));
                x += handCard.getBoundingBox().width - 8;
                layer.addChild(handCard);
                this.hand_card[pos].push(handCard);
            }

            //胡的牌
            cc.log("----tagHu---: " + tagHu);
            this.hu_card[pos] = null;
            if (tagHu) {
                //多加一个是否多牌的判断 防止前面又没有跳过 这里又多加的bug
                var huCard = new MJCard();
                huCard.setValue(tagHu, 0, CardType.Card_End, 0);
                huCard.setScale(0.4);
                huCard.setAnchorPoint(cc.p(0.0, 0.0));
                huCard.setPosition(cc.p(x + paiSpace, y));
                layer.addChild(huCard);
                this.hu_card[pos] = huCard;
            }
        }
        this.handCradPos.x = x;
        this.handCradPos.y = y;
        return layer;
    },
    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "shaowu17mjnew/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "shaowu17mjnew/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "shaowu17mjnew/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "shaowu17mjnew/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "shaowu17mjnew/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "shaowu17mjnew/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "shaowu17mjnew/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "明杠";
                break;
            case 4:
                str = "明杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被明杠";
                break;
            case 32:
                str = "被明杠";
                break;
            case 64:
                str = "点杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});
