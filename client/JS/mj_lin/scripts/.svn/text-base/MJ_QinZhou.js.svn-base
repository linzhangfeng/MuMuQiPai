/**
 * Created by pengzhifang on 2018/10/16.
 */
loadProtoFile("proto/qinzhoumjgameproto.proto");


var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
};
var AddFanType = {
    HY_FAN_TYPE_PINGHU: 17,		//   平胡
    HY_FAN_TYPE_SHIBALUOHAN: 6,		//十八罗汉
    HY_FAN_TYPE_ZIYISE: 8,		// 字一色
    HY_FAN_TYPE_DUIDUIHU: 16,		// 对对胡
    HY_FAN_TYPE_QIDUI: 36,	// 七对
    HY_FAN_TYPE_HAOHUAQIDUI: 27,	// 豪华七对
    HY_FAN_TYPE_QINGYISE: 14,	// 清一色
    HY_FAN_TYPE_HUNYISE: 15,	// 混一色
    HY_FAN_TYPE_DIHU: 20,// 地胡
    HY_FAN_TYPE_TIANHU: 19,	//天胡

    HY_FAN_TYPE_HAIDILAOYUE: 23,//海底捞月
    HY_FAN_TYPE_GANGSHANGHUA: 24,//杠上开花
    HY_FAN_TYPE_QIANGANGHU: 22,//抢杠胡
    HY_FAN_TYPE_LUODI: 67,//12张落地
    HY_FAN_TYPE_GANGSHANGPAO: 29,//杠上炮
};

var AddFanTypeArray = [
    AddFanType.HY_FAN_TYPE_PINGHU,
    AddFanType.HY_FAN_TYPE_SHIBALUOHAN,
    AddFanType.HY_FAN_TYPE_ZIYISE,
    AddFanType.HY_FAN_TYPE_DUIDUIHU,
    AddFanType.HY_FAN_TYPE_QIDUI,
    AddFanType.HY_FAN_TYPE_HAOHUAQIDUI,
    AddFanType.HY_FAN_TYPE_QINGYISE,
    AddFanType.HY_FAN_TYPE_HUNYISE,
    AddFanType.HY_FAN_TYPE_DIHU,
    AddFanType.HY_FAN_TYPE_TIANHU,
    AddFanType.HY_FAN_TYPE_HAIDILAOYUE,
    AddFanType.HY_FAN_TYPE_GANGSHANGHUA,
    AddFanType.HY_FAN_TYPE_QIANGANGHU,
    AddFanType.HY_FAN_TYPE_LUODI,
    AddFanType.HY_FAN_TYPE_GANGSHANGPAO,
];

var AddFanNameArray = [
    "平胡",
    "十八罗汉",
    "字一色",
    "对对胡",
    "七对",
    "豪华七对",
    "清一色",
    "混一色",
    "地胡",
    "天胡",
    "海底捞月",
    "杠上开花",
    "抢杠胡",
    "12张落地",
    "杠上炮",
];

var selfCMD = {
    SERVER_Laizi_BC:5029,
};

var MJTable_QinZhou = MJTable.extend({
    tag: "MJTable_QinZhou",
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _curLaizi_bg: null,
    isRecordShow: false,
    _pkg_id: 0,
    maxQuan: 1,
    _huaCard: [[], [], [], []],
    isForceTing: false,
    _huaValues: [],
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        MJModel.mj_suport_fangyan = 0;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;

        MJModel.mj_gps_type = 1;
        MJModel.mj_double_click_style = 1;

        MJModel.mj_font = "jianjie";
        MJModel.mj_fontSize = "dahao";
        MJModel.mj_style = "shishang";
        MJModel.yinyue = "jingdian";
        MJModel.has_hu_layout = 0;
        MJModel.shareType = 1;


        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];

            MJModel.mj_roomType = 0;

            if (this._pkg_id == 2864|| this._pkg_id == 2756) { //4人
                MJModel.mj_roomType = 0;
            }
            if (this._pkg_id == 2865 || this._pkg_id == 2757) { //3人
                MJModel.mj_roomType = 1;
            }
            if (this._pkg_id == 2866 || this._pkg_id == 2758) { //2人
                MJModel.mj_roomType = 2;
            }
        } catch (e) {
            Log(this, e);
        }

        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }

        this._init_extend();
        this._super();
        //this.schedule(this.test, 1.0);
    },
    getMjTypePath: function () {
        if(MJModel.mj_roomType == 2){
            return getResPath("qinzhoumj/flag/mj_qinzhou2.png");
        }else if(MJModel.mj_roomType == 1) {
            return getResPath("qinzhoumj/flag/mj_qinzhou3.png");
        }else{
            return getResPath("qinzhoumj/flag/mj_qinzhou4.png");
        }
    },

    isSupportPublicCard: function () {
        return false;
    },

    _init_extend: function () {
        var self_table = this;

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };


        //去掉出牌按钮
        MJCards.prototype.createOutCardBtn = function () {

        };

        //去掉出牌放大的效果
        MJCards.prototype.outHandCardEffct2 = function (pos, value) {
            var size = cc.director.getWinSize();
            this.addOutCard(pos, value);
            this.reflashHandCard(pos, true, true);
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        //马牌标识
        MJCard.prototype.isMapai = false;

        MJCard.prototype.check_addFlag = function () {
            self_table._checkAddCardFlag(this);
        };

        ////湖北麻将不要自动胡牌功能
        //MJAction.prototype.setAutoOutCardVis = function (value) {
        //};
    },

    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.qinzhoumj.tagQinZhouGameScence", jpacket);
            //var ackGameFree = parsePacket("proto.game.AckGameScene", jpacket);

            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.qinzhoumj.AckQinZhouGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_Laizi_BC) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },


    handler_server_out_card_bc: function (data, canDelay) {
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        this.room_Info.stopTime();
        this.room_Tip.showTextTip("");
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var card = userOutCard.Card;

        MJModel.cur_seat = -1;

        var pos = MJModel.getPosBySeatid(seatId);

        if (this.room_Action_video) this.room_Action_video.reset();

        MJModel.mj_mo_cards[pos] = -1;
        if (canDelay == false) {
            this.room_Card.addOutCard(pos, card);
            this.room_Card.removeHandCard(pos, card);
            return;
        }

        var isFanLaizi = true; //判断牌局的状态

        for(var i = 0;i < this.room_Card.out_card.length;i++){
            if(this.room_Card.out_card[i].length > 0){
                isFanLaizi = false;
                break;
            }
        }

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);
        this.room_Tip.showOutCardEffect(false);
        this.room_Card.outHandCard(pos, card);

        if (this.room_Action) this.room_Action.setOperator(-1);


        if (MJModel.isMyPlayer(seatId)) {

            if(isFanLaizi){
                this.room_Card.addOutCard(pos,card);
            }

            MJModel.isLiangPai = 0;
            MJModel.final_listen_info = [];
            //检测出的牌是否在听牌里边 不在的话就清楚听牌信息
            for (var i = 0; i < MJModel.listen_info.length; i++) {
                var lsi = MJModel.listen_info[i];
                if (lsi.OutCard == card) {
                    MJModel.final_listen_info = lsi.HuInfo;
                    break;
                }
            }

            MJModel.listen_info = [];

            //可以听牌  可以选择自动胡牌
            if (MJModel.final_listen_info.length > 0) {
                if (this.room_Action) this.room_Action.checkAutoOutCardVis();
                this.room_Card.setAutoOutCard(MJModel.isAutoOutCard);
            }
            else {
                if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
                this.room_Card.setAutoOutCard(false);
                MJModel.isAutoOutCard = false;
            }

            this.myselfCloseOutCard();
        }

        this.room_Card.checkCardSafe();

        var player = MJModel.players[seatId];
        if (player && (!MJModel.isMyPlayer(seatId)) && !isFanLaizi) {
            this.handler_out_card_sound(player.sex, card);
        }
    },


    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {

    },

    _handler_game_record: function (data, canDelay) {
        if (MJModel.gpsInfo) {
            MJModel.gpsInfo.removeFromParent(true);
            MJModel.gpsInfo = null;
        }

        //-----新总结算界面
        var gpsInfo = cc.director.getRunningScene().getChildByName("gpsInfo");
        if (gpsInfo) {
            gpsInfo.removeFromParent(true);
        }

        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "钦州麻将";
        if (MJModel.mj_roomType == 1) {
            gameType = gameType + " 3人"
        } else if (MJModel.mj_roomType == 2) {
            gameType = gameType + " 2人"
        } else {
            gameType = gameType + " 4人"
        }
        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        //gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "超时次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    handler_server_game_end_bc: function (hubeiGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = hubeiGameend.gameend;
            var jiangma = hubeiGameend.jiangma;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();

            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });


            var show_zhongma_effect = cc.callFunc(function () {
                self.gameend_zhongma(jiangma);
            });


            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_QinZhou();
                    result.updateContentView(hubeiGameend);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.room_Action.setReady2Visible(true);
                }
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(2), update_all_money));
                return;
            }

            if(state == 1){
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
            }else{
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(1), show_zhongma_effect, cc.delayTime(3), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
            }

        } catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    gameend_zhongma:function (jiangma) {
        if (jiangma && jiangma.Num > 0) {
            var self = this;
            this.room_Card.removePublicCardByNums(jiangma.Num , false);
            var seatId = jiangma.Chairid;
            var pos = MJModel.getPosBySeatid(seatId);
            var oJiangmaTips = new JiangmaTips();
            oJiangmaTips.setName("JiangmaTips");
            oJiangmaTips.showZhongNiaoBigTips(jiangma.Card, jiangma.ZhongChairID);
            this.addChild(oJiangmaTips, 10000);
            oJiangmaTips.runAction(cc.sequence(cc.delayTime(3), cc.removeSelf()));
        }
    },


    timeEnd: function (dt) {

        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.qinzhoumj.AckLaiziCard", data);
        var self = this;
        var curLaizi = packet.laizicard;
        var chaotian = packet.laizipicard;
        this._setLaizi(curLaizi, chaotian, -1, canDelay ? true : false);
        if (canDelay == false) {
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }
        MJModel.isEnterWait = true;

        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);

            var mo_card = null;
            if (self.room_Card.isDuoPai(0)) {
                mo_card = self.room_Card.hand_card[0][self.room_Card.hand_card[0].length - 1];
                self.room_Card.hand_card[0].splice(self.room_Card.hand_card[0].length - 1, 1);
            }

            var allPreCars = [];
            var allLaiZi = [];
            var dd = 0;

            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - 1 - i, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);

                    //if (MJModel.outCardEffect_style == 0 || true) {
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    //card.runAction(cc.sequence(cc.moveBy(0.3, cc.p(83, 0)), cc.delayTime(1 - 0.3)).repeat(allLaiZi.length));
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    if (mo_card) {
                        mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                        self.room_Card.hand_card[0].push(mo_card);
                    }
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
                self.room_Card.reflashHandCard(0, true);
                if (mo_card) {
                    mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                    self.room_Card.hand_card[0].push(mo_card);
                }
            }
        });
        this.runAction(cc.sequence(cc.delayTime(1), move_end));
    },

    _setGameType: function () {
        var pkg_id = 1;
        var play_id = [];
        //甩字胡不可炮胡
        //play_id.push(MJModel.base_money + "分底");

        cc.log("lin=MJModel.RoomConfigID=" + JSON.stringify(MJModel.RoomConfigID));
        if (MJModel.RoomConfigID.indexOf(1206001) != -1) {
            play_id.push("1分");
        }

        if (MJModel.RoomConfigID.indexOf(1206002) != -1) {
            play_id.push("2分");
        }

        if (MJModel.RoomConfigID.indexOf(1206003) != -1) {
            play_id.push("3分");
        }

        if (MJModel.RoomConfigID.indexOf(1207001) != -1) {
            play_id.push("4马");
        }

        if (MJModel.RoomConfigID.indexOf(1207002) != -1) {
            play_id.push("6马");
        }

        if (MJModel.RoomConfigID.indexOf(1207003) != -1) {
            play_id.push("8马");
        }

        if (MJModel.RoomConfigID.indexOf(1207004) != -1) {
            play_id.push("12马");
        }

        if (MJModel.RoomConfigID.indexOf(1208001) != -1) {
            play_id.push("鬼牌");
        }

        if (MJModel.RoomConfigID.indexOf(1208002) != -1) {
            play_id.push("吃牌");
        }

        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("qinzhoumj/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if (true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.0), cc.removeSelf()));
                }
            }
        }

        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("qinzhoumj/sound/laizi.mp3")));
        return armature;
    },
    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;
        this._curLaizipi2 = laizipi2;

        var size = cc.director.getWinSize();
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new ccui.ImageView(getResPath("qinzhoumj/guipai_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(size.width - 220, size.height - 60));
            this._curLaizi_bg.setContentSize(cc.size(75, 80));
            this.addChild(this._curLaizi_bg, 200);
        }
        this._curLaizi_bg.setScale9Enabled(true);
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);

        if (this._curLaizipi > 0) {
            var card = new MJCard();
            if(gamestart){
                card.setValue(this._curLaizipi, 0, CardType.Card_Out, 0);
            }else{
                card.setValue(this._curLaizi, 0, CardType.Card_Out, 0);
            }
            card.setPosition(cc.p(this._curLaizi_bg.getContentSize().width / 2, this._curLaizi_bg.getContentSize().height / 2));
            card.setScale(1);
            //card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);

            if (gamestart) {
                var dl = 0;
                var ppos = card.getPosition();
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect("赖子皮");
                });
                var callFunc1 = cc.CallFunc(function () {
                    card.setValue(self._curLaizi, 0, CardType.Card_Out, 0);
                });
                card.setPosition(cc.p(size.width / 2 - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, size.height / 2 - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), callFunc, cc.scaleTo(0.1, 2), cc.delayTime(1.0), cc.spawn(cc.moveTo(0.17, ppos), callFunc1,cc.scaleTo(0.17, 1))));
            }
        }
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },
    _checkAddCardFlag: function (card) {
        try {
            if (card.type == CardType.Card_Outing)return;
            if (card.type == CardType.Card_Peng)return;
            if (card.getValue() == 0)return;
            var flag_str = "";
            if (card.getValue() == this._curLaizi)flag_str = "qinzhoumj/flag/gui_flag.png";
            if(card.isMapai)  flag_str = "qinzhoumj/flag/ma_flag.png";
            if (flag_str != "") {
                if (card.getValue() == this._curLaizi)card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath(flag_str));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    flag.setScale(0.5);
                    if (card.pos == 0 && card.type != CardType.Card_Out)flag.setScale(1);
                }
                return;
            }
        } catch (e) {
            Log(this, e);
        }
    },
    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }
        if (pos == 1) {
            flag.setPosition(cc.p(0, 15));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 5));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },
    resetGame: function (allClean) {
        this._super(allClean);
        this._setLaizi(-1, -1, -1);
    },
    handler_server_scene_info_uc: function (guangxi_scene, canDelay) {
        var ackGameFree = guangxi_scene.GameSence;
        //if(ackGameFree == null)  return;
        var sceneStatus = ackGameFree.SceneStatus;
        if (guangxi_scene.laizicard && guangxi_scene.laizicard > 0) {
            this._setLaizi(guangxi_scene.laizicard, guangxi_scene.laizipicard, -1, false);
        }
        this._super(ackGameFree,canDelay);
        this._setGameType();
    },


    //自动准备
    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            if (MJModel.canQuxiaoZhun()) {
                if (MJModel.roomState != 0) this.actionCallBack("ready");
            } else {
                this.actionCallBack("ready");
            }
        }
    },
});


var JiangmaTips = cc.Layer.extend({
    ctor: function () {
        this._super();
    },

    showZhongNiaoBigTips: function (cards, ZhongChairID) {
        var length = cards.length;

        for (var i = 0; i < length; i++) {
            var zhongSeatId = ZhongChairID[i];
            var zhongLength = 0;
            var zhongIndex = 0;
            for (var m = 0; m < ZhongChairID.length; m++) {
                if (zhongSeatId == ZhongChairID[m]) {
                    zhongLength++;
                    if (m < i) {
                        zhongIndex++;
                    }
                }
            }
            var zhongPos = MJModel.getPosBySeatid(zhongSeatId);
            var cardValue = cards[i];

            var card = new MJCard();
            card.isMapai = true;
            card.setValue(cardValue, 0, CardType.Card_Hand, 0);
            card.setMyPosition(MJConfig.getNiaoBigCardPos(i, length));

            this.addChild(card);
            var endPos = MJConfig.getNiaoEndCardPos(zhongPos, zhongIndex, zhongLength);
            if (zhongSeatId >= 0 && zhongSeatId <= 3) {
                card.setLocalZOrder(100);
                var callback = cc.callFunc(function () {
                    this.setZhongMaColor(0);
                } , card);
                if(this.isNeedMove(length)){
                    card.runAction(cc.sequence(cc.delayTime(1), callback ,cc.moveTo(0.5, endPos)));
                }else {
                    card.runAction(cc.sequence(cc.delayTime(1), callback));
                }
            }else {
                endPos = MJConfig.getNiaoBigCardPos(zhongIndex , zhongLength);
                var callback = cc.callFunc(function () {
                    this.setBlackVis(true);
                } , card);
                if(this.isNeedMove(length)){
                    card.runAction(cc.sequence(cc.delayTime(1), callback , cc.moveTo(0.5, endPos)));
                }else {
                    card.runAction(cc.sequence(cc.delayTime(1), callback));
                }
            }
        }
        this.playJiangmaSound();
    },

    isNeedMove: function (length) {
        if(length > 15){
            return false;
        }
        return true;
    },

    playJiangmaSound:function () {
    },
});

var MJResult_QinZhou = MJCommonResult.extend({
    configLayout:null,
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.ackGameEndJS = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 785, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        this.createBottomMaLayer();
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;

        var addFanType = [];
        //var specialType = this.ackGameEnd.faninfo[seatid].SpecialType;

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        for (var i = 0; i < addfan.length; i++) {
            var add_fan = addfan[i];
            var add_type = add_fan.AddType;
            var add_value = add_fan.AddNum;
            if (AddFanTypeArray.indexOf(add_type) != -1) {
                    addFanType.push(AddFanNameArray[AddFanTypeArray.indexOf(add_type)] + " x" + add_value);
            }
        }

        for (var i = 0; i < addFanType.length; i++) {
            var fanType = new cc.LabelTTF(addFanType[i], "Arial", 20);
            fanType.setColor(this.leftColor);
            fanType.setAnchorPoint(cc.p(0, 0));
            fanType.setPosition(cc.p(x, y + 10));
            layer.addChild(fanType);
            x += fanType.getContentSize().width + 10;
        }
        this.createEndInfoTip(x, y, layer, seatid);
        return layer;
    },

    createMaLayer: function (seatid) {
        var layer = null;
        var tagJiangma = this.ackGameEndJS.jiangma;

        if (tagJiangma) {
            var niaoCards = [];
            for (var i = 0; i < tagJiangma.ZhongChairID.length; i++) {
                if (tagJiangma.ZhongChairID[i] == seatid) {
                    niaoCards.push(tagJiangma.Card[i]);
                }
            }
            if (niaoCards.length > 0) {
                layer = new cc.Layer();
                var maPic = new cc.Sprite(this.getZhongMaIcon());
                maPic.setName("zhongmaTip");
                maPic.setAnchorPoint(cc.p(0.0, 1));
                maPic.setPosition(cc.p(0 , -20));
                layer.addChild(maPic);

                var length = niaoCards.length;
                for (var i = 0; i < niaoCards.length; i++) {
                    var card = new MJCard();
                    card.setValue(niaoCards[i], 0, CardType.Card_End, 0);
                    card.setAnchorPoint(cc.p(0.0, 1));
                    card.setZhongMaColor(2);
                    card.setScale(0.35);
                    var startX = 5;
                    var startY = -10;
                    var count = 6;
                    if(length > count){
                        startY = length <= 14 ? 5 : 50;
                    }
                    card.setPosition(cc.p(startX + maPic.getPositionX() + maPic.getContentSize().width + parseInt((i % count)) * card.getBoundingBox().width ,startY - parseInt(i/count) * 35));
                    layer.addChild(card);
                }
            }
        }
        return layer;

    },

    getZhongMaIcon: function () {
        return getResPath("RoomMJ/result2/zhong_ma_icon.png");
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5天和 6地和 7抢杠胡 8杠上开花 9花上添花
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "RoomMJ/result2/zi_mo_icon.png";
                    break;
                case 2:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                case 3:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 5:
                    path = "RoomMJ/result2/qiang_gang_icon.png";
                    break;
                case 7:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX, startY));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();
        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];
        var width = 0;
        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.0, 0.5));

        scoreLabel.setPosition(cc.p(width, 15));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },
    createBottomMaLayer: function () {
            var tagJiangma = this.ackGameEndJS.jiangma;
            var maLength = 0;
            var marginWidth = 0;
            if (tagJiangma && tagJiangma.Card.length > 0) {
                maLength = tagJiangma.Card.length;
                var label = new cc.LabelTTF("马牌:", "Arial", 25);
                label.setAnchorPoint(cc.p(0.0, 0.5));
                label.setColor(this.leftColor);
                label.setPosition(cc.p(85, 50));
                this.bgSpr.addChild(label);

                for (var i = 0; i < tagJiangma.Card.length; i++) {
                    var card = new MJCard();
                    card.isMapai = true;
                    card.setValue(tagJiangma.Card[i], 0, CardType.Card_End, 0);
                    card.setAnchorPoint(cc.p(0.0, 0.5));
                    card.setScale(0.5);
                    card.setPosition(cc.p(150 + (card.getBoundingBox().width)*i, 50));
                    if (tagJiangma.ZhongChairID[i] == -1) {
                        card.setBlackVis(true);
                    } else {
                        card.setZhongMaColor(1);
                    }
                    this.bgSpr.addChild(card);

                    if(marginWidth == 0){
                        marginWidth = card.getBoundingBox().width*maLength;
                    }
                }

            }

            this.configLayout = new ccui.Layout();
            this.configLayout.setPosition(150 + marginWidth ,50);
            this.bgSpr.addChild(this.configLayout);
        }
});