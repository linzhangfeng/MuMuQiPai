loadProtoFile("proto/yanchengmjgameproto.proto");
var YANCHENG_SERVER_CMD = {
    SERVER_SHANXI_CLIENT_LAIZIPAI: 5029,
}

var MJTable_yancheng = MJTable.extend({

    isRecordShow: false,
    _allBeiShu: [null, null, null, null],
    _curLaizi_bg: null,
    _curLaizi: -1,
    _curLaizipi :-1,
    _out_card_temp: [],
    _has_show_pi_flag: false,
    _isgang: false,
    gameDes: "",
    _pkgid: 0,
    effectType: "horizontal",
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        this._init_extend();

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 1;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        //MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_chat_style = 1;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_touch_tip = 1;
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2576 || this._pkg_id == 2483 ){
                MJModel.mj_roomType = 1;
            }
            if (this._pkg_id == 2577 || this._pkg_id == 2484 ) {
                MJModel.mj_roomType = 2;
            }

        } catch (e) {
            Log(this, e);
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }
        this._super();
        MJModel.mj_paiban = "horizontal";
        //this.schedule(this.test, 1.0);


    },
    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 2) pkg_id = 2;
        if (MJModel.mj_roomType == 1) pkg_id = 3;
        return __String.createWithFormat(getResPath("yanchengmj/flag/pkgid%1.png"), pkg_id);

    },
    _flagDirection: function (pos, flag, m_size) {
        if (pos == 1) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(0, 17));
                flag.setRotation(-90);
            }else{
                flag.setPosition(cc.p(8, 17));
                flag.setRotation(-100);
            }
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 17));
            flag.setRotation(180);
        } else if (pos == 3) {
            if(MJModel.mj_bg_use == 1){
                flag.setPosition(cc.p(m_size.width, m_size.height));
                flag.setRotation(90);
            }else{
                flag.setPosition(cc.p(m_size.width, m_size.height - 4));
                flag.setRotation(100);
            }
        }
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            this._curLaizi = 0x41;
        }
    },

    handler_game_time_over_bc: function (data, canDelay) {
        if (!this.gameending)MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },
    gameending: false,
    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this.gameending = true;
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_YanCheng();
                    result.updateContentView(shanxiGameEnd);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.gameending = false;
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(1.5), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },
    _init_extend: function () {
        var self = this;

        //MJCards.prototype.checkCardSafe = function () {
        //
        //};
        var super_continueClick = MJResult.prototype.continueClick;
        MJResult.prototype.continueClick = function (ref) {
            super_continueClick.call(this, ref);
            self.gameending = false;
        };

        MJCard.prototype.check_addFlag = function () {
            self._checkAddCardFlag(this);
        };

        var super_addOutCard = MJCards.prototype.addOutCard;
        MJCards.prototype.addOutCard = function (pos, value, showPoint, isReflash) {
            if (isReflash == undefined)isReflash = false;
            if (isReflash == false)self._out_card_temp.push({"pos": pos, "card": value});
            if (self._mj_style == 0) {
                var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
                if (banker_pos == pos && value == self._curLaizipi ) {

                } else {
                    return this.addHuCard(pos, value);
                }

            }
            return super_addOutCard.call(this, pos, value, showPoint);
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self._sortCard(a, b);
        };


        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };
        //锁住赖子牌
        MJCards.prototype.locklaizipai = function () {
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var card = this.hand_card[0][i];
                if (card.getValue() == self._curLaizi) {
                    card.setBlackVis(true);
                    card.setCardTouchEnable(false);
                }
            }

        };
        MJCards.prototype.setSomeCardClickState = function () {
            if (MJModel.mj_lockcard_type == 1) {
                var listen_cards = [];
                for (var i = 0; i < MJModel.listen_info.length; i++) {
                    var lsi = MJModel.listen_info[i];
                    listen_cards.push(lsi.OutCard);
                }

                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    if (listen_cards.indexOf(card.getValue()) == -1) {
                        card.setBlackVis(true);
                        card.setCardTouchEnable(false);
                    }
                }
            } else if (MJModel.mj_lockcard_type == 2) {
                if (this.isDuoPai(0) == false) return;
                for (var i = 0; i < this.hand_card[0].length - 1; i++) {
                    var card = this.hand_card[0][i];
                    card.setBlackVis(true);
                    card.setCardTouchEnable(false);
                }
            }else{
                this.locklaizipai();
            }
        };
        var supersetValue = MJPeng.prototype.setValue;
        MJPeng.prototype.setValue = function (type, pos, value, index, out_pos, isEnd, OpType) {
            supersetValue.call(this, type, pos, value, index, out_pos, isEnd, OpType);
            //类型暗杠，并且是癞晃，并且value是癞子皮
            if (value == self._curLaizipi) {
                try {
                    this.cardList[1].setVisible(false);
                    this.cardList[3].setPosition(this.cardList[1].getPosition());
                    this.cardList[3].setZOrder(this.cardList[1].getZOrder());
                } catch (e) {

                }
            }

            if ((OpType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG || (OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                if (this.pointSp) this.pointSp.setVisible(false);
            }
        };

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            this.removeChildByName("ChooseGang_selectLayer");
            super_setOperator.call(this, operat);
            var flag =false;
            if (self.room_Card.hand_card[0].length == 2 ){
                if (self.room_Card.hand_card[0][0].getValue() == self._curLaizi && self.room_Card.hand_card[0][1].getValue() == self._curLaizi) {
                    flag =true;
                    }
            }

            if (operat != -1 && self.room_Card.isDuoPai(0) && ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU )&& flag){
                if (this.actions["pass"]) {
                    this.actions["pass"].setVisible(false);
                }
                this.reflashOpBtns();
            }

        };


    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        //
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.yanchengmj.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.yanchengmj.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == YANCHENG_SERVER_CMD.SERVER_SHANXI_CLIENT_LAIZIPAI) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("-_handler_game_record-");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "盐城麻将 · 4人 ";
        if (MJModel.mj_roomType == 1) {
            gameType = "盐城麻将 · 3人 ";
        }
        if (MJModel.mj_roomType == 2) {
            gameType = "盐城麻将 · 2人 ";
        }
        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }

        for (var i = 0; i < gameRecord.MostWinScoreUser.length; i++) {
            var seatId = gameRecord.MostWinScoreUser[i];
            if (seatId != 255) {
                _winSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "赢分次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.WinCounts, recoreInfo.outtime_num];

            if (player && player.uid != -1) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, _winSeatid[i], _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);

        this.release();
    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._setLaizi(-1, -1, -1);
        this._out_card_temp = [];
        this.gameending = false;
    },


    handler_server_peng_kang_bc: function (data, canDelay) {
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
            if (card == this._curLaizipi) {
                this.room_Card.addPengCard(pos, PengType.Peng_AnKang, card, out_pos, OpType);
                this.room_Card.removeHandCard(pos, card, 3);
                MJModel.cur_seat = seatid;
                this.room_Info.showDirectionTip(pos);
                if (MJModel.isMyPlayer(seatid)) {
                    this.myselfOpenOutCard();
                }
                var player = MJModel.players[seatid];
                if (player && canDelay) {
                    var action = "gang";
                    var effect = "gang";
                    this.handler_op_sound(player,player.sex, OpType, -1, effect);

                }
                return;
            }

        }
        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & ActionType.TYPE_ZHIGANG) == ActionType.TYPE_ZHIGANG) {
            if (card == this._curLaizipi) {
                this.room_Card.addPengCard(pos, PengType.Peng_Kang, card, out_pos, OpType);
                this.room_Card.removeHandCard(pos, card, 2);
                MJModel.cur_seat = seatid;
                this.room_Card.removeOutCard(out_pos, card, canDelay);
                this.room_Card.setCurCardTip(false);
                this.room_Info.showDirectionTip(pos);
                if (MJModel.isMyPlayer(seatid)) {
                    this.myselfOpenOutCard();
                }
                var player = MJModel.players[seatid];
                if (player && canDelay) {
                    var action = "gang";
                    var effect = "gang";
                    this.handler_op_sound(player,player.sex, OpType, -1, effect);

                }
                return;
            }

        }

        this._super(data, canDelay);
    },

    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
        } else {
            this._super(sex, card);
        }
    },
    //
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {

        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },

    handler_server_scene_info_uc: function (shanxi_gameScene, canDelay) {
        var ackGameFree = shanxi_gameScene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        if (sceneStatus != 0) {
            //恢复癞子
            if (shanxi_gameScene.laizicard && shanxi_gameScene.laizipicard) {
                this._curLaizi = shanxi_gameScene.laizicard;
                this._curLaizipi = shanxi_gameScene.laizipicard;
                if (this._curLaizi > 0 && this._curLaizi != 255) {
                    var curLaizi = this._curLaizi;
                    var curLaizipi = this._curLaizipi;
                    this._setLaizi(curLaizi, curLaizipi, -1);//还原赖子
                }
            }
        }
        this._super(ackGameFree, canDelay);
        this._setGameType();

    },

    _setGameType: function () {
        //盐城麻将
        MJModel.play_id_str = [];
        if (MJModel.RoomConfigID.indexOf(1174001) != -1) {
            MJModel.play_id_str.push("2倍");
        }
        if (MJModel.RoomConfigID.indexOf(1174002) != -1) {
            MJModel.play_id_str.push("3倍");
        }
        if (MJModel.RoomConfigID.indexOf(1174003) != -1) {
            MJModel.play_id_str.push("4倍");
        }
        if (MJModel.RoomConfigID.indexOf(1174004) != -1) {
            MJModel.play_id_str.push("5倍");
        }
        if (MJModel.RoomConfigID.indexOf(1175001) != -1) {
            MJModel.play_id_str.push("放羊");
        }
        if (MJModel.RoomConfigID.indexOf(1175002) != -1) {
            MJModel.play_id_str.push("门清");
        }
        if (MJModel.RoomConfigID.indexOf(1175003) != -1) {
            MJModel.play_id_str.push("杠开");
        }
        var gameDes = "";
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            gameDes += MJModel.play_id_str[i];
            if (i != MJModel.play_id_str.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    },

    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        if (laizi == -1 || laizi == 255) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;

        var size = cc.director.getWinSize();

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("yanchengmj/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(70, 350-35));
            this._curLaizi_bg.setScale(0.85);
            this.addChild(this._curLaizi_bg, 500);
        }

        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(true);
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;

        if (this._curLaizi > 0) {
            laizi_tip = new cc.LabelTTF("赖子", "Arial", 24);
            laizi_tip.setColor(cc.color(87, 207, 93));
            if (laizi_tip) {
                laizi_tip.setPosition(cc.p(45+17, 100));
                this._curLaizi_bg.addChild(laizi_tip);
            }

            var card = new MJCard();
            card.setValue(laizi, 0, CardType.Card_Hand, 0);//CardType.Card_Out
            card.setPosition(cc.p(110, 70));
            card.setScale(0.6);//0.9
            card.setStoreColor(cc.color(255, 249, 137));
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
            card.setPosition(cc.p(45+17, 50));
            //  laizi_tip.setPosition(cc.p(-100000, 45));
            if (gamestart) {
                var endPos = card.getPosition();
                var scale = card.getScale();
                var dl = 0;
                laizi_tip.setVisible(false);
                laizi_tip.runAction(cc.sequence(cc.delayTime(1 + dl), cc.show()));
                card.setScale(0);
                card.setVisible(false);
                var self = this;
                var callFunc = cc.CallFunc(function () {
                    self._showLaizi_effect();
                });

                var p = MJConfig.getInfoPos();
                card.setPosition(cc.p(p.x - this._curLaizi_bg.getPositionX() + this._curLaizi_bg.getContentSize().width / 2, p.y - this._curLaizi_bg.getPositionY() + this._curLaizi_bg.getContentSize().height / 2));
                card.runAction(cc.sequence(cc.delayTime(0 + dl), cc.show(), cc.scaleTo(0.2, 1.5), cc.delayTime(0.5), cc.spawn(cc.moveTo(0.17, endPos), cc.scaleTo(0.17, scale))));//2
            }
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.yanchengmj.AckLaiziCard", data);
        var self = this;
        var self = this;
        var curLaizi = packet.laizicard;
        var curLaizipi = packet.laizipicard;
        var publiccard = null;
        var banker_pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        try {
            publiccard = this.room_Card.getNextPublicCard(false);
            publiccard.updateValue(curLaizipi);
        } catch (e) {

        }
        this._curLaizipi = curLaizipi;
        var outcard = this.room_Card.addOutCard(banker_pos, curLaizipi, false);

        if (canDelay == false) {
            publiccard.setVisible(false);
            this._setLaizi(curLaizi, curLaizipi, -1, canDelay ? true : false);
            this._showHandcardFlag(false);
            this.room_Card.reflashHandCard(0, true);
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }

        MJModel.isEnterWait = true;

        outcard.setVisible(false);
        publiccard.runAction(cc.sequence(cc.delayTime(0.0), cc.moveTo(0.3, outcard.getPosition()), cc.hide()));

        var show_effect = cc.callFunc(function () {
            self._setLaizi(curLaizi, curLaizipi, -1, canDelay ? true : false);
            outcard.setVisible(true);
            publiccard.setVisible(false);
        });
        var move_end = cc.callFunc(function () {
            self._showHandcardFlag(false);
            var allPreCars = [];
            var allLaiZi = [];
            for (var i = self.room_Card.hand_card[0].length - 1; i >= 0; i--) {
                var card = self.room_Card.hand_card[0][i];
                if (card.getValue() == curLaizi) {
                    allLaiZi.push(card);
                } else {
                    if (allLaiZi.length > 0) {
                        break;
                    }
                    allPreCars.push(card);
                }
            }

            if (allLaiZi.length > 0 && allPreCars.length > 0) {
                var allDelay = 0;
                for (var i = 0; i < allLaiZi.length; i++) {
                    var card = allLaiZi[i];
                    var begin_pos = card.getPosition();
                    var end_pos = MJConfig.getHandCardPos(0, self.room_Card.hand_card[0].length - i - 1, self.room_Card.hand_card[0].length, self.room_Card.isDuoPai(0));
                    var allL = Math.abs(end_pos.x - begin_pos.x);
                    var time = allL / 1000;
                    if (time < 0.17) time = 0.17;
                    if (time > 0.3) time = 0.3;
                    card.runAction(cc.sequence(cc.spawn(cc.rotateTo(0.1, 15), cc.moveTo(0.17, cc.p(begin_pos.x + 0, begin_pos.y + 100))), cc.moveTo(time, cc.p(end_pos.x + 0, end_pos.y + 100)).easing(cc.easeSineOut()), cc.spawn(cc.rotateTo(0.1, 0), cc.moveTo(0.17, end_pos))));
                    allDelay += 1;
                }
                for (var i = 0; i < allPreCars.length; i++) {
                    var card = allPreCars[i];
                    card.runAction(cc.moveBy(0.3, cc.p(83 * allLaiZi.length, 0)));
                }

                var callback = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                    self.room_Card.reflashHandCard(0, true);
                    self.room_Card.reflashHandCard(1, true);
                    self.room_Card.reflashHandCard(2, true);
                    self.room_Card.reflashHandCard(3, true);
                });
                self.runAction(cc.sequence(cc.delayTime(0.5), callback));
            } else {
                MJModel.isEnterWait = false;
            }
        });
        this.runAction(cc.sequence(cc.delayTime(0.3), show_effect, cc.delayTime(1.0), move_end));
    },

    //赖子动画
    _showLaizi_effect: function (name) {
        ccs.armatureDataManager.addArmatureFileInfo(getResPath("yanchengmj/effect/laizi/effects_mjhunancx.ExportJson"));
        var size = cc.director.getWinSize();
        if(true) {
            var armature = new ccs.Armature("effects_mjhunancx");
            var animation = armature.getAnimation();
            if (animation) {
                if (typeof animation.playWithIndex === "function") {
                    animation.playWithIndex(0, -1, 0);
                    armature.setPosition(cc.p(size.width / 2, size.height / 2));
                    this.addChild(armature, 100);
                    armature.runAction(cc.sequence(cc.delayTime(1.8), cc.removeSelf()));
                }
            }
        }
        var armature = new ccs.Armature("effects_mjhunancx");
        var animation = armature.getAnimation();
        if (animation) {
            if (typeof animation.playWithIndex === "function") {
                if (name == "赖子") {
                    animation.playWithIndex(1, -1, 0);
                }
                if (name == "赖根") {
                    animation.playWithIndex(2, -1, 0);
                }
                //if (name == "朝天") {
                //    animation.playWithIndex(3, -1, 0);
                //}
                armature.setPosition(cc.p(size.width / 2, size.height / 2 + 150));
                this.addChild(armature, 100);
                armature.runAction(cc.sequence(cc.delayTime(1.7), cc.removeSelf()));
            }
        }
        Sound.getInstance().playEffect(__String.createWithFormat(getResPath("yanchengmj/sound/laizi.mp3")));
        return armature;
    },
    _showHandcardFlag: function () {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _checkAddCardFlag: function (card) {
        try {
            if (card.value == this._curLaizi) {
                card.setStoreColor(cc.color(255, 249, 137));
                var p = card.getChildByName("sprite");
                p.removeChildByName("laizi_flag");
                var flag = null;

                flag = new cc.Sprite(getResPath("yanchengmj/flag/lai_flag2.png"));

                var m_size = p.getContentSize();
                if (flag) {
                    flag.setPosition(cc.p(0, m_size.height));
                    flag.setAnchorPoint(cc.p(0, 1));
                    flag.setName("laizi_flag");
                    p.addChild(flag);
                    this._flagDirection(card.pos, flag, m_size);
                    if (card.type == CardType.Card_End) {
                        if (card.pos == 1 || card.pos == 3) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(0.7);
                        }
                    }

                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flag.setScale(0.6);
                        if (card.pos == 0) {
                            flag.setScale(0.6);
                        } else {
                            flag.setScale(0.6);
                        }
                    }
                }
                return;
            }
            if (card.value == this._curLaizipi) {
                var pi = card.getChildByName("sprite");
                pi.removeChildByName("laizipi_flag");
                var flagpi = null;
                flagpi = new cc.Sprite(getResPath("yanchengmj/flag/laipi_flag.png"));
                var m_size = pi.getContentSize();
                if (flagpi) {
                    flagpi.setPosition(cc.p(0, m_size.height));
                    flagpi.setAnchorPoint(cc.p(0, 1));
                    flagpi.setName("laizipi_flag");
                    pi.addChild(flagpi);
                    this._flagDirection(card.pos, flagpi, m_size);
                    if (card.type == CardType.Card_End) {
                        if (card.pos == 1 || card.pos == 3) {
                            flagpi.setScale(0.6);
                        } else {
                            flagpi.setScale(0.6);
                        }
                    }
                    if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                        flagpi.setScale(0.4);
                        if (card.pos == 0) {
                            flagpi.setScale(0.6);
                        } else {
                            flagpi.setScale(0.6);
                        }
                    }
                    if (card.type == CardType.Card_Peng) {
                        if (card.pos == 1 || card.pos == 3 || card.pos == 2) {
                            flagpi.setScale(0.6);
                        }
                    }
                }

            }

        } catch (e) {
            Log(this, e);
        }
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边

            //if (av == this._curLaizipi && bv != this._curLaizipi)return 1;//赖子皮放在最前边
            //if (av != this._curLaizipi && bv == this._curLaizipi)return -1;//赖子皮放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

});

var AddFanType = {
    21: "放羊",
    22: "抢杠胡",
    24: "杠上开花",
    30: "门前清",
    42: "无百搭牌",

};

var MJResult_YanCheng = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("yanchengmj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        if (gangScore) {
            var txt = "杠牌分  +";
            if (gangScore < 0) {
                txt = "杠牌分  ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        x += 10;
        //红中分
        if (sxendInfo.hongzhongscore[seatid]) {
            var txt = "红中分  +";
            if (sxendInfo.hongzhongscore[seatid] < 0) {
                txt = "红中分  ";
            }
            var hongzhongfen = new cc.LabelTTF(txt + sxendInfo.hongzhongscore[seatid], "Arial", 20);
            hongzhongfen.setColor(this.leftColor);
            hongzhongfen.setAnchorPoint(cc.p(0, 0));
            hongzhongfen.setPosition(cc.p(x, y + 10));
            layer.addChild(hongzhongfen);
            x += hongzhongfen.getContentSize().width + 10;
        }

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "yanchengmj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "yanchengmj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "yanchengmj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "yanchengmj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "yanchengmj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "yanchengmj/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "yanchengmj/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});
