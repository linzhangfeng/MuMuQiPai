var MJUserInfo = cc.Layer.extend({
    tag: "MJUserInfo",
    ctor: function () {
        this._super();
    },
    init: function () {

    },
});

var MJPlayerChat = cc.Layer.extend({
    tag: "MJPlayerChat",
    ctor: function () {
        this._super();
    },
    initChat: function (pos, content, flippedX, flippedY) {
        var imageView = new ccui.ImageView(getResPath("RoomMJ/roomchat/icon_chat_020.png"));
        imageView.setScale9Enabled(true);
        imageView.setCapInsets(cc.rect(40, 25, 18, 13));
        imageView.setAnchorPoint(cc.p(0.0, 0.5));
        this.addChild(imageView);
        if (flippedX)imageView.setScaleY(-1);
        if (flippedY)imageView.setScaleX(-1);

        var isSingleLine = true;
        var text = new cc.LabelTTF(content, "Thonburi", 25);
        if (text.getContentSize().width > 300) {
            text = new cc.LabelTTF(content, "Thonburi", 25, cc.size(300, 0));
            isSingleLine = false;
        }

        text.setColor(cc.color(50, 50, 50));
        text.setAnchorPoint(cc.p(0.0, 0.5));
        this.addChild(text);

        var textSize = text.getContentSize();
        imageView.setContentSize(cc.size(textSize.width + 50, isSingleLine ? textSize.height + 35 : textSize.height + 27));

        var tx = 33;
        var ty = 4;
        if (flippedX) {
            ty = -4;
        }

        if (flippedY) {
            text.setAnchorPoint(cc.p(1.0, 0.5));
            tx = -33;
        }
        text.setPosition(cc.p(tx, ty));
        this.setContentSize(imageView.getContentSize());
        this.ignoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.0, 0.5));
    },
    initSound: function (pos, filepath, flippedX, flippedY, time) {
        var imageView = new ccui.ImageView(getResPath("RoomMJ/roomchat/icon_chat_021.png"));
        imageView.setScale9Enabled(true);
        imageView.setCapInsets(cc.rect(40, 25, 18, 13));
        imageView.setAnchorPoint(cc.p(0.0, 0.5));
        this.addChild(imageView);
        //if (flippedX)imageView.setFlippedX(true);
        //if (flippedY)imageView.setFlippedY(true);
        if (flippedX)imageView.setScaleY(-1);
        if (flippedY)imageView.setScaleX(-1);

        var text = new cc.Sprite(getResPath("RoomMJ/roomchat/icon_chat_003.png"));
        text.setAnchorPoint(cc.p(0.0, 0.5));
        text.setScale(-0.2);
        this.addChild(text);

        var animation = new cc.Animation();
        for (var i = 1; i <= 3; i++) {
            animation.addSpriteFrameWithFile(__String.createWithFormat(getResPath("RoomMJ/roomchat/icon_chat_00%1.png"), i));
        }
        animation.setDelayPerUnit(0.2);
        var animate = cc.animate(animation);
        text.runAction(animate.repeatForever());

        var textSize = text.getBoundingBox();
        imageView.setContentSize(cc.size(textSize.width + 70, textSize.height + 40));

        var tx = 70;
        var ty = 4;
        if (flippedX) {
            ty = -4;
        }

        if (flippedY) {
            text.setAnchorPoint(cc.p(1.0, 0.5));
            tx = -40;
            text.setScale(0.2);
        }
        text.setPosition(cc.p(tx, ty));
        this.setContentSize(imageView.getContentSize());
        this.ignoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.0, 0.5));
    },
});

var BigFaceMenu = cc.Layer.extend({

    tag: "BigFaceMenu",
    m_pCallback: null,
    ctor: function () {
        this._super();
        var size = cc.director.getWinSize();
        this.ignoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.0, 0.0));
        this.setContentSize(cc.size(size.width, size.height));
    },
    onEnter: function () {
        this._super();
        // 部分事件监听
        var self = this;
        var listener = cc.EventListener.create({
            event: cc.EventListener.TOUCH_ONE_BY_ONE,
            swallowTouches: true,
            onTouchBegan: function (touch, event) {
                return self.onTouchBegan(touch, event);
            }
        });
        if (listener)cc.eventManager.addListener(listener, this);
    },
    setCallback: function (callback) {
        this.m_pCallback = callback;
    },
    onTouchBegan: function (touch, event) {
        this.hide();
        event.stopPropagation();
        return true;
    },
    getIconsIndexArray: function (seatid) {
        var icons = [1, 3, 7, 8, 9, 10];//需要显示的动画表情
        // var icons = [1 , 2 , 3, 4 , 6 , 7]; //过年表情更换
        return icons;
    },
    getNewYearIconsIndexArray: function (seatid) {
        var icons = [];
        if (MJModel.hudong_on_off[seatid] == 1) {
            icons = [20, 21, 22, 23, 24, 25];
        } else {
            icons = [20, 21, 22, 23, 24, 25];
        }
        return icons;
    },

    show: function (rotation, seatid) {

        var self = this;
        var radius = 150;
        var M_PI = 3.14159;
        var allicons =
                [
                    "RoomMJ/bigface/facechat_text.png",//0
                    "RoomMJ/bigface/hua/hua.png",//1
                    "RoomMJ/bigface/yanhua/fireworks.png",//2
                    "RoomMJ/bigface/kiss/kiss.png",//3
                    "RoomMJ/bigface/pianbao/firecrackers.png",//4
                    "RoomMJ/bigface/cheers/cheers.png",//5
                    "RoomMJ/bigface/hongbao/redbag.png",//6
                    "RoomMJ/bigface/diyan/xuejia.png",//7
                    "RoomMJ/bigface/huaxie/flower1.png",//8
                    "RoomMJ/bigface/bomb/bomb.png",//9
                    "RoomMJ/bigface/eggs/egg1.png",//10
                    "RoomMJ/bigface/jinyong_hudong.png",//11
                    "RoomMJ/bigface/kaifang_hudong.png",//12
                    "RoomMJ/bigface/orange/orange.png",//13
                    "RoomMJ/bigface/shanxi/icon/smoke.png",//14
                    "RoomMJ/bigface/shanxi/icon/shoes.png",//15
                    "RoomMJ/bigface/shanxi/icon/kiss.png",//16
                    "RoomMJ/bigface/shanxi/icon/hua.png",//17
                    "RoomMJ/bigface/shanxi/icon/cheers.png",//18
                    "RoomMJ/bigface/shanxi/icon/bullion.png",//19

                    "RoomMJ/newyear/bigface/icon/gxfc.png",//20
                    "RoomMJ/newyear/bigface/icon/jxry.png",//21
                    "RoomMJ/newyear/bigface/icon/xxsc.png",//22
                    "RoomMJ/newyear/bigface/icon/xnh.png",//23
                    "RoomMJ/newyear/bigface/icon/yffs.png",//24
                    "RoomMJ/newyear/bigface/icon/zzrs.png",//25
                ]
            ;//所有的表情列表 已有的资源的 部分资源先不删除

        var icons = this.getIconsIndexArray(seatid);
        if (Utils.isNewYear()){
            icons = this.getNewYearIconsIndexArray(seatid);
        }
        var dv = 180 / icons.length;
        var offsets = [];
        for (var i = 0; i < icons.length; i++) {
            offsets.push(cc.p(radius * Math.cos((-90.0 + rotation + dv * i + dv / 2) / 180.0 * M_PI), radius * Math.sin((-90.0 + rotation + dv * i + dv / 2) / 180.0 * M_PI)));
        }

        for (var i = 0; i < icons.length; i++) {
            var layout = new ccui.Layout();
            layout.setTouchEnabled(true);
            layout.setContentSize(cc.size(60, 60));
            layout.setAnchorPoint(0.5, 0.5);
            layout.setSwallowTouches(true);
            layout.setPosition(offsets[i]);
            layout.setTag(icons[i]);
            layout.addTouchEventListener(function (sender, type) {
                var up = sender.getChildByName("up");
                var down = sender.getChildByName("down");
                if (type == ccui.Widget.TOUCH_BEGAN) {
                    up.setVisible(false);
                    down.setVisible(true);
                }
                else if (type == ccui.Widget.TOUCH_ENDED || type == ccui.Widget.TOUCH_CANCELED) {
                    up.setVisible(true);
                    down.setVisible(false);
                }
            });
            layout.addClickEventListener(function (btn) {
                if (self.m_pCallback) self.m_pCallback(btn.getTag());
                self.removeFromParent(true);
            });
            this.addChild(layout);

            var up = new cc.Sprite(getResPath("RoomMJ/bigface/facechat1.png"));
            up.setName("up");
            up.setPosition(cc.p(30, 30));
            layout.addChild(up);

            var down = new cc.Sprite(getResPath("RoomMJ/bigface/facechat2.png"));
            down.setName("down");
            down.setPosition(cc.p(30, 30));
            down.setVisible(false);
            layout.addChild(down);

            var img = new cc.Sprite(getResPath(allicons[icons[i]]));
            img.setPosition(cc.p(30, 30));
            if (icons[i] != 0 && icons[i] != 11 && icons[i] != 12) img.setScale(0.7);
            layout.addChild(img);
        }

        this.setScale(0);
        this.runAction(cc.scaleTo(0.1, 1));
    },

    hide: function () {
        this.runAction(cc.sequence(cc.scaleTo(0.1, 0), cc.removeSelf()));
    }
});

//麻将新总结算
var CommonTotalResult = cc.Layer.extend({
    tag: "CommonTotalResult",
    btns: {},
    rootNode: null,
    items: [],
    back_btn: null,
    player_records: {},
    getCocosUI:function(){
        return ccs.load(getResPath("RoomMJ/mj_public/gameRecord.json"));
    },
    ctor: function () {
        this._super();
        var self = this;
        this.items = [];
        this.setName("CommonTotalResult");
        var size = cc.director.getWinSize();

        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0, 0));
        layout.setPosition(cc.p(0, 0));
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (Ref) {
        });
        this.addChild(layout, -1000);

        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var uiJson = this.getCocosUI();
        this.rootNode = uiJson.node;
        this.rootNode.setPosition(cc.p(size.width / 2 - this.rootNode.getContentSize().width / 2, size.height / 2 - this.rootNode.getContentSize().height / 2));
        this.addChild(this.rootNode);
        this.showTitleEffect();
        //btn
        {
            this.btns = [];
            var btnLayer = this.rootNode.getChildByName("btns");
            var cs = btnLayer.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addClickEventListener(function (sender, evt) {
                        self.actionCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                }
            }
            this.back_btn = this.btns["return"];
        }

        if (MJModel.shareType == 1) {
            var size = cc.director.getWinSize();
            var share = this.btns["share"];
            var copy = this.btns["copy"];
            var parent = share.getParent();
            share.removeFromParent();
            copy.removeFromParent();

            var parentPath = "RoomMJ/platformshare/";

            {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath(parentPath + "btn_copyrecord1.png"), getResPath(parentPath + "btn_copyrecord2.png"), "");
                parent.addChild(btn);
                btn.setName("copy");
                btn.addClickEventListener(function (sender, evt) {
                    self.actionCallBack(sender);
                });
                this.btns[btn.getName()] = btn;
                //btn.setPosition(cc.p(size.width / 2 + 50, 50));
                btn.setPosition(cc.p(1280 / 2 + 50, 50));
            }

            {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath(parentPath + "btn_sharerecord1.png"), getResPath(parentPath + "btn_sharerecord2.png"), "");
                parent.addChild(btn);
                btn.setName("sharezhanji");
                btn.addClickEventListener(function (sender, evt) {
                    self.actionCallBack(sender);
                });
                this.btns[btn.getName()] = btn;
                btn.setPosition(cc.p(1280 / 2 - 200, 50));
            }

            {
                var btn = new ccui.Button();
                btn.loadTextures(getResPath(parentPath + "btn_sharelink1.png"), getResPath(parentPath + "btn_sharelink2.png"), "");
                parent.addChild(btn);
                btn.setName("sharelink");
                btn.addClickEventListener(function (sender, evt) {
                    self.actionCallBack(sender);
                });
                this.btns[btn.getName()] = btn;
                btn.setPosition(cc.p(1280 / 2 + 300, 50));
            }
        }
    },

    showTitleEffect: function () {
        var title = this.rootNode.getChildByName("record_title");
        var point = title.getPosition();
        title.removeFromParent(true);
        try {
            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect/end/effects_xmjyxjs.ExportJson"));
            var armature = new ccs.Armature("effects_xmjyxjs");
            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(0, -1, true);
                        armature.setPosition(point);
                        this.rootNode.addChild(armature);
                    }
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },

    actionCallBack: function (btn) {
        var self = this;
        var name = btn.getName();
        if (name == "return") {
            ZJHModel.getInstance().roomToHall();
        } else if (name == "copy") {
            Utils.copyGameRecord();
        } else if (name == "share") {
            var size = this.getContentSize();
            btn.setVisible(false);
            this.setScale(0.5);
            var renderTexture = new cc.RenderTexture(size.width / 2, size.height / 2, cc.Texture2D.PIXEL_FORMAT_RGBA8888);
            renderTexture.beginWithClear(255, 255, 255, 255);
            this.visit();
            renderTexture.end();
            renderTexture.saveToFile("record.jpg", cc.IMAGE_FORMAT_JPEG, false, function (text, path) {
                self.setScale(1);
                PlatformHelper.WeChatShareImage("", path);
                this.runAction(cc.sequence(cc.delayTime(0.5), cc.callFunc(function () {
                    btn.setVisible(true);
                    ZJHModel.getInstance().roomToHall();
                })));
            });
        } else if (name == "xlshare") {
            Utils.shareToXL(this, btn);
        } else if (name == "sharezhanji") {
            var sharelist = new ShareList();
            sharelist.initList(this, 1, btn.getPosition());
            this.addChild(sharelist);
        } else if (name == "sharelink") {
            var sharelist = new ShareList();
            sharelist.initList(this, 2, btn.getPosition());
            this.addChild(sharelist);
        }
    },

    //初始化界面
    initUI: function (gameType, roomId, time, startTime, countSum, count) {
        var size = cc.director.getWinSize();
        this.setContentSize(size);
        this.setAnchorPoint(cc.p(0, 0));
        this.setPosition(cc.p(0, 0));

        this.rootNode.getChildByName("roomName").setString(gameType);
        this.rootNode.getChildByName("roomName").ignoreContentAdaptWithSize(true);

        this.rootNode.getChildByName("roomCode").setString(roomId);
        this.rootNode.getChildByName("roomCode").ignoreContentAdaptWithSize(true);

        this.rootNode.getChildByName("jushu").setString(count + "/" + countSum + "局");
        this.rootNode.getChildByName("jushu").ignoreContentAdaptWithSize(true);

        this.rootNode.getChildByName("time_begin").setString("开始时间:" + startTime);
        this.rootNode.getChildByName("time_begin").ignoreContentAdaptWithSize(true);

        this.rootNode.getChildByName("time_end").setString("结束时间:" + time);
        this.rootNode.getChildByName("time_end").ignoreContentAdaptWithSize(true);
    },

    //@ 头像,大赢家，房主，结算信息，总分
    //player.avatar, player.name, player.uid
    addItem: function (avatars, names, ids, isWin, isPao, arrStr, count, score, Ishouse, state) {
        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/gameRecord_Item.json"));
        var node = uiJson.node;
        this.items.push(node);
        if (score > 0) {
            node.getChildByName("bg").setVisible(true);
        }

        if (isWin) {
            node.getChildByName("dayingjia").setVisible(true);
        }

        if (isPao) {
            node.getChildByName("dianpaowang").setVisible(true);
        }

        if (Ishouse) {
            node.getChildByName("fangzhu").setVisible(true);
        }

        var avatar = node.getChildByName("avatar");
        var name = node.getChildByName("name");
        var id = node.getChildByName("id");

        var m_pAvatar = Utils.createCircleAvatar(avatars, getResPath("RoomMJ/mj_public/common/dialog/zhanji/head_default.png"), "Avatars/user4_unlogin.png", cc.size(100, 100));
        avatar.removeAllChildren();
        avatar.addChild(m_pAvatar);
        name.setString(names);
        name.ignoreContentAdaptWithSize(true);

        id.setString("ID:" + ids);
        id.ignoreContentAdaptWithSize(true);

        if (state && state != 0) {
            var bg = new cc.Sprite(getResPath("RoomMJ/mj_public/common/dialog/bigresult/jiesan_state/state_bg.png"));
            bg.setPosition(cc.p(avatar.getContentSize().width / 2, avatar.getContentSize().height / 2));
            avatar.addChild(bg);

            var fg = new cc.Sprite(getResPath("RoomMJ/mj_public/common/dialog/bigresult/jiesan_state/state_" + state + ".png"));
            fg.setPosition(cc.p(avatar.getContentSize().width / 2, avatar.getContentSize().height / 2));
            avatar.addChild(fg);
        }

        for (var i = 0; i < arrStr.length; i++) {
            var title = node.getChildByName("title" + (i + 1));
            var num = node.getChildByName("num" + (i + 1));
            title.setVisible(true);
            num.setVisible(true);

            title.setString(arrStr[i]);
            title.ignoreContentAdaptWithSize(true);

            num.setString(count[i]);
            num.ignoreContentAdaptWithSize(true);

            //title.setColor(score > 0 ? cc.color(222, 182, 120) : cc.color(148, 191, 207));
            //num.setColor(score > 0 ? cc.color(255, 206, 85) : cc.color(222, 222, 222));
        }

        if (score > 0) {
            node.getChildByName("zongfen_win").setVisible(true);
            node.getChildByName("zongfen_win").ignoreContentAdaptWithSize(true);
            node.getChildByName("zongfen_win").setString(":" + Math.abs(score));
        } else {
            node.getChildByName("zongfen_lose").setVisible(true);
            node.getChildByName("zongfen_lose").ignoreContentAdaptWithSize(true);
            node.getChildByName("zongfen_lose").setString(score == 0 ? score : (":" + Math.abs(score)));
        }
        return node;
    },

    addItemNull: function (arrStr) {
        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/gameRecord_Item.json"));
        var node = uiJson.node;
        this.items.push(node);

        var avatar = node.getChildByName("avatar");
        var name = node.getChildByName("name");
        var id = node.getChildByName("id");

        var m_pAvatar = Utils.createCircleAvatar("", getResPath("RoomMJ/mj_public/common/dialog/zhanji/head_default.png"), "Avatars/user4_unlogin.png", cc.size(100, 100));
        avatar.removeAllChildren();
        avatar.addChild(m_pAvatar);
        name.setString("");
        name.ignoreContentAdaptWithSize(true);

        id.setString("ID:" + 0);
        id.ignoreContentAdaptWithSize(true);

        for (var i = 0; i < arrStr.length; i++) {
            var title = node.getChildByName("title" + (i + 1));
            var num = node.getChildByName("num" + (i + 1));
            title.setVisible(true);
            num.setVisible(true);

            title.setString(arrStr[i]);
            title.ignoreContentAdaptWithSize(true);

            num.setString(0);
            num.ignoreContentAdaptWithSize(true);

            //title.setColor(score > 0 ? cc.color(222, 182, 120) : cc.color(148, 191, 207));
            //num.setColor(score > 0 ? cc.color(255, 206, 85) : cc.color(222, 222, 222));
        }

        node.getChildByName("zongfen_lose").setVisible(true);
        node.getChildByName("zongfen_lose").ignoreContentAdaptWithSize(true);
        node.getChildByName("zongfen_lose").setString("0");
        return node;
    },

    refresh: function () {
        var allL = this.items.length;
        var useLayer = null;
        var pos = [];

        if (allL % 2 != 0) {
            useLayer = this.rootNode.getChildByName("player3");
            if (allL == 1) {
                pos.push(1);
            } else if (allL == 3) {
                pos.push(0);
                pos.push(1);
                pos.push(2);
            }
        } else {
            useLayer = this.rootNode.getChildByName("player4");
            if (allL == 2) {
                pos.push(1);
                pos.push(2);
            } else if (allL == 4) {
                pos.push(0);
                pos.push(1);
                pos.push(2);
                pos.push(3);
            }
        }

        for (var i = 0; i < allL; i++) {
            var item = useLayer.getChildByName("player" + pos[i]);
            item.addChild(this.items[i]);
        }
    },
});

var ShareList = cc.Layer.extend({
    tag: "ShareList",
    btns: {},
    bg: null,
    bigresult: null,
    sharetype: 0, //0: 邀请好友 1:分享战绩 2: 分享链接
    ctor: function () {
        this._super();
    },
    // * @param appType 1微信 2支付宝 3钉钉 4闲聊 5乡聊
    initList: function (bigresult, sharetype, position, ischangebg, applist) {
        if (applist == undefined){
            if (sharetype == 0 && MJModel.isSupportOnlineYaoqing){
                applist = [1,5,4,3,2,6];
            } else {
                applist = [1,5,4,3,2];
            }
        }
        if (ischangebg == undefined)ischangebg = false;
        this.bigresult = bigresult;
        this.sharetype = sharetype;

        var size = cc.director.getWinSize();

        var self = this;
        var layout = new ccui.Layout();
        layout.setContentSize(cc.size(10000,10000));
        layout.setAnchorPoint(cc.p(0.5, 0.5));
        layout.setPosition(cc.p(0, 0));
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
            self.removeFromParent(true);
        });
        this.addChild(layout);

        var parentPath = "RoomMJ/platformshare/";
        this.bg = new cc.Sprite(getResPath(parentPath + "share_bg.png"));
        this.bg.setAnchorPoint(0.5, 0);
        this.bg.setPosition(cc.p(position.x, position.y + 35));
        this.addChild(this.bg);

        var dx = (this.bg.getContentSize().width - 80) / 5;
        var count = applist.length;

        var by = this.bg.getPositionY() + this.bg.getContentSize().height / 2 + 20;
        if (ischangebg) {
            this.bg.setTexture(getResPath(parentPath + "share_bg2.png"));
            this.bg.setAnchorPoint(0.5, 0.5);
            this.bg.setPosition(cc.p(size.width / 2, size.height / 2));
            dx = (this.bg.getContentSize().width - 80) / 5;
            by = this.bg.getPositionY();
        }

        this.bg.setScaleX(count / 5);
        var bx = this.bg.getPositionX() - dx * count / 2 + dx / 2;

        var appnames = ["weixin","zhifubao","dingding","xianliao","xiangliao","qingyouquan"];
        for (var i = 0; i < applist.length; i ++){
            var id = applist[i];
            var btn = new ccui.Button(getResPath(parentPath + appnames[id - 1] + ".png"), getResPath(parentPath + appnames[id - 1] + ".png"), "");
            btn.setPosition(cc.p(bx, by));
            this.addChild(btn);
            btn.setName(appnames[id - 1]);
            btn.setTag(id);
            btn.addClickEventListener(function (sender, evt) {
                self.actionCallBack(sender);
            });
            bx+= dx;
        }
    },

    //@param appType 1微信 2支付宝 3钉钉 4闲聊 5乡聊
    actionCallBack: function (btn) {
        this.removeFromParent(true);
        var self = this;
        var name = btn.getName();
        var tag = btn.getTag();
        if (this.sharetype == 0) {
            if (tag == 6){
                require("club/scripts/clubUtils/ClubScene.js");
                ClubScene.showInviteDialog(0.66);
                return;
            }
            Utils.yaoqingToOtherApp(tag);
            return;
        } else if (this.sharetype == 1) {
            Utils.shareRecordToOtherApp(this.bigresult, tag);
            return;
        } else if (this.sharetype == 2) {
            Utils.shareLinksToOtherApp(tag);
            return;
        }
    },
});

var HelpBox = cc.Layer.extend({

    ctor: function () {
        this._super();

        var self = this;
        var size = cc.director.getWinSize();
        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0.5, 0.5));
        layout.setPosition(size.width / 2, size.height / 2);
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
            self.removeFromParent();
        });
        this.addChild(layout, -2);

        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/help.json"));
        var uiNode = uiJson.node;
        var bg = uiNode.getChildByName("bg");
        bg.removeFromParent();
        bg.setPosition(size.width / 2, size.height / 2);

        var bgSize = bg.getContentSize();

        var layout1 = new ccui.Layout();
        layout1.setContentSize(bgSize);
        layout1.setAnchorPoint(cc.p(0.5, 0.5));
        layout1.setPosition(size.width / 2, size.height / 2);
        layout1.setTouchEnabled(true);
        layout1.setSwallowTouches(true);
        layout1.addClickEventListener(function (btn) {
        });
        this.addChild(layout1, -1);

        this.addChild(bg);
        this._bg = bg;

        this.initUI();

        this.showChoice(1);

        this.addUIClickEvt("detailBtn");
        this.addUIClickEvt("configBtn");
        this.addUIClickEvt("closeBtn")
    },

    initUI: function () {
        var webView = new ccui.WebView();
        webView.setName("webView");
        var detailLayout = this.getUI("detailLayout");
        webView.setAnchorPoint(cc.p(0 , 0));
        webView.setContentSize(detailLayout.getContentSize());
        webView.loadURL(ZJHModel.getInstance().gameHelpUrl);
        detailLayout.addChild(webView);

        var configLayout = this.getUI("configLayout");
        var listViewSize = configLayout.getContentSize();
        var ruleListView = ccui.ListView();
        ruleListView.setAnchorPoint(cc.p(0 , 0));
        ruleListView.setBounceEnabled(false);
        ruleListView.setScrollBarEnabled(true);
        ruleListView.setDirection(ccui.ScrollView.DIR_VERTICAL);
        ruleListView.setContentSize(listViewSize);
        ruleListView.setItemsMargin(2);
        ruleListView.setGravity(ccui.ListView.GRAVITY_CENTER_HORIZONTAL);
        configLayout.addChild(ruleListView);

        var roomData = MJModel.roomData["gameRoom"]["innerWayRecommend"][0];
        var fistBao = roomData["gameCustomClassifyVOList"];
        for (var i = 0; i < fistBao.length; i++)
        {
            if (fistBao[i]["platformVisible"] == false) {
                continue;
            }
            var pointJson = fistBao[i]["gameCustomPlayValInfoList"];
            if (!fistBao[i]["platformVisible"])
            {
                continue;
            }

            var isHave = false;

            for (var k = 0; k < pointJson.length; k++)
            {
                if (pointJson[k]["iptValue"] != null)
                {
                    isHave = true;
                    break;
                }
            }


            if (isHave == false)
            {
                continue;
            }

            var allcount = 0;
            for (var j = 0; j < pointJson.length; j++) {
                // 前置条件的判断
                var isHide = false;
                for (var k1 = 0; k1 < fistBao.length; k1++) {
                    var pointData = fistBao[k1]["gameCustomPlayValInfoList"];
                    for (var k2 = 0; k2 < pointData.length; k2++) {
                        if ((pointJson[j]["premisePlayId"] == pointData[k2]["orderPlayId"]) && pointData[k2]["iptValue"] == null) {
                            pointJson[j].isHide = true;
                            isHide = true;
                            break;
                        }
                    }
                }
                if (!isHide){
                    allcount ++;
                }
            }

            var cell = new ccui.Layout();
            var count = allcount%3 == 0 ? allcount/3 : parseInt(allcount/3) + 1;
            cell.setContentSize(cc.size(listViewSize.width, 50 + count * 50));
            ruleListView.addChild(cell);

            var title =  cc.LabelTTF(roomData["gameCustomClassifyVOList"][i]["classifyName"], ".SFUIDisplay-Semibold", 30, cc.size(listViewSize.width, 32), cc.TEXT_ALIGNMENT_LEFT);

            title.setColor(cc.color(0x71, 0x2f, 0x07));
            title.setAnchorPoint(cc.p(0, 0.5));
            title.setPosition(cc.p(20,cell.getContentSize().height - 15));
            cell.addChild(title, 2);

            var count = 0;
            for (var j = 0; j < pointJson.length; j++)
            {
                if (pointJson[j]["isHide"] == true)continue;

                var isSelect = true;
                if (!pointJson[j]["iptValue"])
                {
                    isSelect = false;
                }

                var selecBtn = null;
                if(roomData["gameCustomClassifyVOList"][i]["choiceType"] == 1 || roomData["gameCustomClassifyVOList"][i]["choiceType"] == 2)
                {
                    //1、2单选双选
                    selecBtn = this.selectBtnDraw(pointJson[j]["playName"], isSelect, roomData["gameCustomClassifyVOList"][i]["choiceType"]);
                    selecBtn.setAnchorPoint(cc.p(0, 1));
                    selecBtn.setPosition(cc.p(10 + count%3*(300), cell.getContentSize().height - 60 - parseInt(count/3)*50));
                    cell.addChild(selecBtn, 2);
                }
                count ++;
            }
        }
    },

    //生成对应的checkButton
    selectBtnDraw: function (titleStr, selected, cellType) {

        var btn = new ccui.Button();

        var title = ccui.Text(titleStr, "", 28);
        title.setContentSize(cc.size(110, 36));
        title.setTextColor(cc.color(0x71, 0x2f, 0x07));
        title.setAnchorPoint(cc.p(0, 0.5));
        title.setPosition(cc.p(60, btn.getContentSize().height / 2));
        title.setTextHorizontalAlignment(cc.TEXT_ALIGNMENT_CENTER);
        btn.addChild(title);

        var kongImg = new ccui.ImageView();
        kongImg.setAnchorPoint(cc.p(0, 0.5));
        kongImg.setPosition(cc.p(10, btn.getContentSize().height / 2));
        btn.addChild(kongImg);

        var selelctImg = new ccui.ImageView();
        selelctImg.ignoreAnchorPointForPosition(true);
        selelctImg.setName("selecIcon");
        selelctImg.setAnchorPoint(cc.p(0.5, 0.5));
        kongImg.addChild(selelctImg, 2);
        selelctImg.setVisible(selected);

        if(cellType == 1){
            kongImg.loadTexture(getResPath("RoomMJ/mj_public/common/dialog/help/check1.png"));
            selelctImg.loadTexture(getResPath("RoomMJ/mj_public/common/dialog/help/check2.png"));
        }else {
            kongImg.loadTexture(getResPath("RoomMJ/mj_public/common/dialog/help/check1.png"));
            selelctImg.loadTexture(getResPath("RoomMJ/mj_public/common/dialog/help/check3.png"));
        }
        return btn;
    },

    getUI:function(key) {
        return  Utils.findNode(this._bg,key);
    },

    showChoice:function (type) {
        if(type == 0){
            this.getUI("detailBtn").setEnabled(false);
            this.getUI("configBtn").setEnabled(true);

            this.getUI("detailLayout").setVisible(true);
            this.getUI("webView").setVisible(true);
            this.getUI("configLayout").setVisible(false);
        }else {
            this.getUI("detailBtn").setEnabled(true);
            this.getUI("configBtn").setEnabled(false);

            this.getUI("detailLayout").setVisible(false);
            this.getUI("webView").setVisible(false);
            this.getUI("configLayout").setVisible(true);
        }
    },

    addUIClickEvt:function(key) {
        var self = this;
        var ui = this.getUI(key);

        if(ui) {
            ui.addClickEventListener(function (sender, evt) {
                switch (key) {
                    case "detailBtn": {
                        self.showChoice(0);
                        break;
                    }
                    case "configBtn":{
                        self.showChoice(1);
                        break;
                    }
                    case "closeBtn":{
                        self.removeFromParent(true);
                        break;
                    }
                }
            });
        }
    },

});

var PlayerInfo = cc.Layer.extend({
    tag: "PlayerInfo",
    btns: {},
    warningTip: null,
    players: null,
    julitips: null,
    _bg_size: null,
    _bg: null,
    _isAppear: false,
    _oldData: {},
    _oldGpsData: null,
    ctor: function () {
        this._super();
        var self = this;
        MJModel.gpsInfo = this;
        var size = cc.director.getWinSize();
        this.ignoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.0, 0.0));
        this.setContentSize(cc.size(size.width, size.height));

        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0, 0));
        layout.setPosition(cc.p(0, 0));
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
            self.disappear();
        });
        this.addChild(layout, -2);

        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/gps.json"));
        this._bg = uiJson.node.getChildByName("bg");
        this._bg.removeFromParent();
        this._bg.setPosition(size.width / 2, size.height / 2);
        this.addChild(this._bg);

        this._bg_size = this._bg.getContentSize();

        var layout = new ccui.Layout();
        layout.setContentSize(this._bg_size);
        layout.setAnchorPoint(cc.p(0.5, 0.5));
        layout.setPosition(size.width / 2, size.height / 2);
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
        });
        this.addChild(layout, -1);
        this._oldGpsData = null;
        this._oldData = [];

        //btn
        {
            this.btns = [];
            var btnLayer = this._bg.getChildByName("btns");
            var cs = btnLayer.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addClickEventListener(function (sender, evt) {
                        self.actionCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                }
            }
        }


        var playerNode = null;
        if (MJModel.mj_roomType == 1) {
            playerNode = this._bg.getChildByName("p3");
            this._bg.getChildByName("p4").setVisible(false);
            this._bg.getChildByName("p2").setVisible(false);
        } else if (MJModel.mj_roomType == 2) {
            playerNode = this._bg.getChildByName("p2");
            this._bg.getChildByName("p3").setVisible(false);
            this._bg.getChildByName("p4").setVisible(false);
        } else {
            playerNode = this._bg.getChildByName("p4");
            this._bg.getChildByName("p3").setVisible(false);
            this._bg.getChildByName("p2").setVisible(false);
        }
        playerNode.setVisible(true);
        this.players = playerNode.getChildByName("players");
        this.julitips = playerNode.getChildByName("tips");
        this.warningTip = this._bg.getChildByName("warning");
    },
    actionCallBack: function (btn) {
        var name = btn.getName();
        if (name == "close" || name == "continue") {
            this.disappear();
        } else if (name == "jieshan") {
            this.disappear();
            sendEndRoomREQ(1);
        }
    },
    appear: function () {
        var size = cc.director.getWinSize();
        this._bg.setScale(0);
        this._bg.setPosition(size.width / 2, size.height / 2);
    },
    disappear: function () {
        MJModel.gpsInfo = null;
        this.removeFromParent(true);
    },
    isNoData: function (player) {
        if (player.city == null || player.city == "" || player.latitude == null || player.longitude == null || (player.latitude == 0 && player.longitude == 0)) {
            return true;
        }
        return false;
    },
    getPlayerData: function (uid) {
        for (var i = 0; i < MJModel.gpsData.length; i++) {
            var player = MJModel.gpsData[i];
            if (player.userId == uid) {
                return player;
            }
        }
        return {"isNull": true, "city": null, "latitude": null, "longitude": null};
    },
    updateInfo: function () {
        var hasnocity = false;
        var hastoonear = false;
        var playerNums = 4;
        if (MJModel.mj_roomType == 1) {
            playerNums = 3;
        } else if (MJModel.mj_roomType == 2) {
            playerNums = 2;
        }
        for (var i = 0; i < playerNums; i++) {
            var player = MJModel.players[i];
            var playerData = this.getPlayerData(player.uid);
            var pos = MJModel.getPosBySeatid(i);
            var playerUI = this.players.getChildByName("player" + pos);
            var avatar = playerUI.getChildByName("avatar");
            var name = playerUI.getChildByName("name");
            var city = playerUI.getChildByName("city");
            city.stopAllActions();
            avatar.removeAllChildren();
            name.setString("");
            name.ignoreContentAdaptWithSize(true);

            city.setString("");
            city.ignoreContentAdaptWithSize(true);
            if (player.uid <= 0) {
                city.setString("");
                var m_pAvatar = new cc.Sprite("Avatars/user4_unlogin.png");
                m_pAvatar.setScale(85 / m_pAvatar.getContentSize().width, 85 / m_pAvatar.getContentSize().height);
                avatar.addChild(m_pAvatar);
            } else {
                var m_pAvatar = Utils.createCircleAvatar(player.avatar, "Avatars/user4_unlogin.png", "Avatars/user4_unlogin.png", cc.size(85, 85));
                avatar.addChild(m_pAvatar);
                name.setString(Utils.parseName(8, player.name));
                //city.setColor(cc.color(255, 255, 255));
                if (this.isNoData(playerData)) {
                    hasnocity = true;
                    //city.setColor(cc.color(255, 0, 0));
                    city.setString("未检测到位置");
                    //city.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                } else {
                    city.setString(Utils.parseName(10, playerData.city));
                }
            }
        }
        var cs = this.julitips.getChildren();
        for (var i in cs) {
            var tips = cs[i];
            if (!tips)continue;
            var name = tips.getName();
            var ps = name.split("_");
            var label = tips.getChildByName("num");
            var s1 = MJModel.getSeatidByPos(parseInt(ps[0]));
            var s2 = MJModel.getSeatidByPos(parseInt(ps[1]));
            var p1 = MJModel.players[s1];
            var p2 = MJModel.players[s2];

            tips.getChildByName("hong").setVisible(false);
            tips.getChildByName("lv").setVisible(false);
            tips.getChildByName("hong").setScaleX(1);
            tips.getChildByName("lv").setScaleX(1);
            tips.getChildByName("hong").stopAllActions();
            tips.getChildByName("lv").stopAllActions();
            label.setString("");
            label.ignoreContentAdaptWithSize(true);

            if (!p1 || !p2 || p1.uid <= 0 || p2.uid <= 0) {
                continue;
            }

            var playerData1 = this.getPlayerData(p1.uid);
            var playerData2 = this.getPlayerData(p2.uid);

            if (this.isNoData(playerData1)) {
                continue;
            }

            if (this.isNoData(playerData2)) {
                continue;
            }

            if (playerData1.city != playerData2.city) {
                continue;
            }

            var dis = Utils.getDistance(playerData1.latitude, playerData1.longitude, playerData2.latitude, playerData2.longitude);
            tips.setVisible(true);
            if (dis >= 1000) {
                var tip = tips.getChildByName("lv");
                tip.setVisible(true);
                var dis_f = parseFloat(dis / 1000);
                label.setString(dis_f.toFixed(1) + "千米");
                tip.setScaleX((label.getContentSize().width + 20) / tip.getContentSize().width);
                label.setScaleX(1 / tip.getScaleX());
            } else {
                label.setString(dis + "米");
            }

            if (dis <= 100) {
                tips.getChildByName("hong").setVisible(true);
                //tip.runAction(cc.sequence(cc.moveBy(0.5, cc.p(0, 5)), cc.moveBy(0.5, cc.p(0, -5))).repeatForever());
                hastoonear = true;
            } else {
                tips.getChildByName("lv").setVisible(true);
            }
        }

        this.warningTip.setVisible(false);
        this.btns["jieshan"].setVisible(false);
        this.btns["continue"].setVisible(false);
        this.warningTip.stopAllActions();
        if (hasnocity || hastoonear) {
            this.warningTip.setVisible(true);
            this.btns["jieshan"].setVisible(true);
            this.btns["continue"].setVisible(true);
            this.warningTip.runAction(cc.sequence(cc.delayTime(1), cc.hide(), cc.delayTime(0.1), cc.show()).repeatForever());
            this.warningTip.ignoreContentAdaptWithSize(true);
            if (hasnocity && hastoonear) {
                this.warningTip.setString("* 发现距离过近、未检测到位置的玩家，是否解散？");
            } else if (hasnocity) {
                this.warningTip.setString("* 发现未检测到位置的玩家，是否解散？");
            } else if (hastoonear) {
                this.warningTip.setString("* 发现距离过近的玩家，是否解散？");
            }
        }

        MJModel.mj_table.room_Action.updateGPSTip(hasnocity, hastoonear);
        if (MJModel.mj_table.pre_scene) {
            MJModel.mj_table.pre_scene.updateGPSTip(hasnocity, hastoonear);
        }
    },
});

var SpeedSetting = cc.Layer.extend({
    _bg: null,
    btns: {},
    checkboxs: {},

    mj_speed: 0,

    ctor: function () {
        this._super();
        var size = cc.director.getWinSize();
        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0.5, 0.5));
        layout.setPosition(size.width / 2, size.height / 2);
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
        });
        this.addChild(layout, -1);

        this.mj_speed = MJModel.mj_speed;
        this.initUI();
    },

    initUI: function () {
        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/speed_seeting.json"));
        var uiNode = uiJson.node;
        var self = this;
        var size = cc.director.getWinSize();
        var bg = uiNode.getChildByName("bg");
        bg.removeFromParent();
        bg.setPosition(size.width / 2, size.height / 2);
        this.addChild(bg);
        this._bg = bg;

        var cs = this._bg.getChildren();
        for (var i in cs) {
            var child = cs[i];
            var name = child.getName();
            if (name == "close" || name == "sure") {
                child.addClickEventListener(function (sender, evt) {
                    self.btnsCallBack(sender);
                });
                this.btns[child.getName()] = child;
            } else if (name.indexOf("speed") != -1) {
                child.addEventListener(function (slider, event) {
                    self.setting_selectedStateEvent(slider, event);
                });
                this.checkboxs[child.getName()] = child;

                if (name == "speed_" + this.mj_speed) {
                    child.setSelected(true);
                    child.setEnabled(false);
                } else {
                    child.setEnabled(true);
                    child.setSelected(false);
                }
            }

        }
    },

    btnsCallBack: function (sender) {
        var name = sender.getName();
        if (name == "close") {
            this.removeFromParent();
        } else if (name == "sure") {
            this.removeFromParent();
            cc.log("btnsCallBack:" + this.mj_speed);
            MJModel.mj_speed = this.mj_speed;
            setItem("mj_speed", MJModel.mj_speed);
        }
    },

    setting_selectedStateEvent: function (sender, type) {
        var name = sender.getName();
        switch (type) {
            case ccui.CheckBox.EVENT_SELECTED:
                for (var i in this.checkboxs) {
                    var btn = this.checkboxs[i];
                    var cname = btn.getName();
                    if (cname != name) {
                        btn.setEnabled(true);
                        btn.setSelected(false);
                    }
                }
                sender.setEnabled(false);
                this.mj_speed = parseInt(name.split("_")[1]);
                break;

            default:
                break;
        }
    },
});

var Setting = cc.Layer.extend({
    tag: "Setting",
    _bg: null,
    btns: {},
    checkboxs_setting: {},
    checkboxs_gamesetting: {},
    _settingLayer: null,
    _gameSettingLayer: null,

    mj_font: "yuanrun",
    mj_fontSize: "biaozhun",
    mj_light: "yewan",
    mj_style: "shishang",
    mj_paiban: "horizontal",
    mj_table_view: "2d",
    ctor: function () {
        this._super();
        this.init_ctor();
    },
    init_ctor: function () {
        var size = cc.director.getWinSize();
        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0.5, 0.5));
        layout.setPosition(size.width / 2, size.height / 2);
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
        });
        this.addChild(layout, -1);
        this.mj_font = MJModel.mj_font;
        this.mj_fontSize = MJModel.mj_fontSize;
        this.mj_light = MJModel.mj_light;
        this.mj_style = MJModel.mj_style;
        this.mj_paiban = MJModel.mj_paiban;
        this.mj_table_view = MJModel.mj_table_view;
        this.initUI();
    },
    initUI: function () {
        var uiJson = ccs.load(getResPath("RoomMJ/mj_public/setting.json"));
        var uiNode = uiJson.node;
        var self = this;
        var size = cc.director.getWinSize();
        var bg = uiNode.getChildByName("bg");
        bg.removeFromParent();
        bg.setPosition(size.width / 2, size.height / 2);
        this.addChild(bg);
        this._bg = bg;
        this._settingLayer = bg.getChildByName("setting");
        this._gameSettingLayer = bg.getChildByName("gamesetting");

        //init button
        {
            var btns_node = bg.getChildByName("btns");
            var cs = btns_node.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addClickEventListener(function (sender, evt) {
                        self.btnsCallBack(sender);
                    });
                    this.btns[btn.getName()] = btn;
                }
            }
        }
        this.initSetting();
        this.initGameSetting();
        this.showPaiBanView(MJModel.mj_table_view == "2d");
    },
    btnsCallBack: function (sender) {
        var name = sender.getName();
        if (name == "close") {
            this.removeFromParent();
        } else if (name == "gamesetting") {
            this._settingLayer.setVisible(false);
            this._gameSettingLayer.setVisible(true);
            this.btns["gamesetting"].setEnabled(false);
            this.btns["setting"].setEnabled(true);
        } else if (name == "setting") {
            this._settingLayer.setVisible(true);
            this._gameSettingLayer.setVisible(false);
            this.btns["gamesetting"].setEnabled(true);
            this.btns["setting"].setEnabled(false);
        }
    },

    initSetting: function () {
        var self = this;
        //init slider
        {
            var btns_node = this._settingLayer.getChildByName("slider");
            var cs = btns_node.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addEventListener(function (slider, event) {
                        self.setting_slidersCallBack(slider, event);
                    });

                    if (btn.getName() == "yinxiao") {
                        btn.setPercent(ZJHModel.getInstance().sound * 100);
                    }

                    if (btn.getName() == "yinyue") {
                        btn.setPercent(ZJHModel.getInstance().bgMusic * 100);
                    }
                }
            }
        }

        //init checkboxs
        {
            var btns_node = this._settingLayer.getChildByName("checkbox");
            var cs = btns_node.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addEventListener(function (slider, event) {
                        self.setting_selectedStateEvent(slider, event);
                    });
                    this.checkboxs_setting[btn.getName()] = btn;
                }

                btn.setEnabled(true);
                btn.setSelected(false);

                if (btn.getName().indexOf(MJModel.fangyan) != -1) {
                    btn.setSelected(true);
                    btn.setEnabled(false);
                }

                if (btn.getName().indexOf(MJModel.yinyue) != -1) {
                    btn.setSelected(true);
                    btn.setEnabled(false);
                }
            }
        }

        this.checkboxs_setting["zhendong"].setSelected(ZJHModel.getInstance().vibrate == 1);
        this.checkboxs_setting["hudong"].setSelected(MJModel.hudong == 1);

        this.doSupportFangYan();
        this.doSupportYinYue();

    },

    doSupportYinYue: function () {
    },

    doSupportFangYan: function () {
        this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
        this.checkboxs_setting["fangyan_fangyan1"].setVisible(true);
        this.checkboxs_setting["fangyan_fangyan2"].setVisible(true);

        this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
        this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

        this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
        this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
    },

    showPaiBanView: function (is) {
        this._gameSettingLayer.getChildByName("light_title").setVisible(is);
        this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
        this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
    },

    setting_selectedStateEvent: function (sender, type) {
        var name = sender.getName();
        switch (type) {
            case  ccui.CheckBox.EVENT_UNSELECTED:
                if (name == "zhendong") {
                    setItem("vibrate", 0);
                    ZJHModel.getInstance().vibrate = 0;
                    JsUtils.postNotifi("save_setting");
                }
                else if (name == "hudong") {
                    setItem("hudong", 0);
                    MJModel.hudong = 0;
                }
                break;

            case ccui.CheckBox.EVENT_SELECTED:
                if (name.indexOf("fangyan_") != -1) {
                    for (var i in this.checkboxs_setting) {
                        var btn = this.checkboxs_setting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("fangyan_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    MJModel.fangyan = name.split("_")[1];
                    setItem("mj_fangyan", MJModel.fangyan);
                }
                else if (name.indexOf("yinyue_") != -1) {
                    for (var i in this.checkboxs_setting) {
                        var btn = this.checkboxs_setting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("yinyue_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    MJModel.yinyue = name.split("_")[1];
                    setItem("mj_yinyue", MJModel.yinyue);
                    MJModel.mj_table.reflashBgMusic();
                }
                else if (name == "zhendong") {
                    setItem("vibrate", 1);
                    ZJHModel.getInstance().vibrate = 1;
                    JsUtils.postNotifi("save_setting");
                }
                else if (name == "hudong") {
                    setItem("mj_hudong", 1);
                    MJModel.hudong = 1;
                }
                break;

            default:
                break;
        }
    },

    setting_slidersCallBack: function (slider, event) {
        var name = slider.getName();
        if (name == "yinxiao") {
            var s = slider.getPercent() / 100.0;
            cc.audioEngine.setEffectsVolume(s);
            if (event == 2) {
                setItem("sound", s);
                ZJHModel.getInstance().sound = s;
                JsUtils.postNotifi("save_setting");
            }
        } else if (name == "yinyue") {
            var s = slider.getPercent() / 100.0;
            cc.audioEngine.setMusicVolume(s);
            if (event == 2) {
                setItem("bgMusic", s);
                ZJHModel.getInstance().bgMusic = s;
                JsUtils.postNotifi("save_setting");
            }
        }
    },

    initGameSetting: function () {
        var self = this;
        //init btns
        {
            var btns_node = this._gameSettingLayer.getChildByName("btns");
            var cs = btns_node.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addClickEventListener(function (slider, event) {
                        self.gamesetting_btnsCallBack(slider);
                    });
                }
            }
        }
        //init checkboxs
        {
            var btns_node = this._gameSettingLayer.getChildByName("checkbox");
            var cs = btns_node.getChildren();
            for (var i in cs) {
                var btn = cs[i];
                if (btn) {
                    btn.addEventListener(function (slider, event) {
                        self.gamesetting_selectedStateEvent(slider, event);
                    });
                    this.checkboxs_gamesetting[btn.getName()] = btn;
                }
            }
            this.gamesetting_update();
        }
    },

    gamesetting_reset: function () {
        this.gamesetting_update();
        this.showPaiBanView(this.mj_table_view == "2d");
    },
    gamesetting_update: function () {
        for (var i in this.checkboxs_gamesetting) {
            var btn = this.checkboxs_gamesetting[i];
            btn.setEnabled(true);
            btn.setSelected(false);

            if (btn.getName().indexOf(this.mj_font) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }

            if (btn.getName().indexOf(this.mj_fontSize) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }

            if (btn.getName().indexOf(this.mj_style) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }

            if (btn.getName().indexOf(this.mj_light) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }

            if (btn.getName().indexOf(this.mj_paiban) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }

            if (btn.getName().indexOf(this.mj_table_view) != -1) {
                btn.setSelected(true);
                btn.setEnabled(false);
            }
        }
    },
    gamesetting_btnsCallBack: function (sender) {
        var name = sender.getName();
        if (name == "more") {
        } else if (name == "reset") {
            this.mj_font = "jianjie";
            this.mj_fontSize = "dahao";
            this.mj_light = "baitian";
            this.mj_style = "shishang";
            this.mj_paiban = "horizontal";
            this.mj_table_view = "2d";
            this.gamesetting_reset();
        } else if (name == "ok") {
            MJModel.mj_font = this.mj_font;
            MJModel.mj_fontSize = this.mj_fontSize;
            MJModel.mj_light = this.mj_light;
            MJModel.mj_style = this.mj_style;
            MJModel.mj_paiban = this.mj_paiban;
            MJModel.mj_table_view = this.mj_table_view;

            this.removeFromParent();
            MJModel.saveGameSetting();
            MJModel.mj_table.reflashSetting();
        }
    },

    gamesetting_selectedStateEvent: function (sender, type) {
        var name = sender.getName();
        switch (type) {
            case  ccui.CheckBox.EVENT_UNSELECTED:
                break;

            case ccui.CheckBox.EVENT_SELECTED:
                if (name.indexOf("fontSize_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("fontSize_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_fontSize = name.split("_")[1];
                }
                else if (name.indexOf("font_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("font_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_font = name.split("_")[1];
                }
                else if (name.indexOf("style_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("style_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_style = name.split("_")[1];
                }
                else if (name.indexOf("light_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("light_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_light = name.split("_")[1];
                }
                else if (name.indexOf("paiban_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("paiban_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_paiban = name.split("_")[1];
                }
                else if (name.indexOf("table_") != -1) {
                    for (var i in this.checkboxs_gamesetting) {
                        var btn = this.checkboxs_gamesetting[i];
                        var cname = btn.getName();
                        if (cname != name && cname.indexOf("table_") != -1) {
                            btn.setEnabled(true);
                            btn.setSelected(false);
                        }
                    }
                    sender.setEnabled(false);
                    this.mj_table_view = name.split("_")[1];
                    this.showPaiBanView(this.mj_table_view == "2d");
                }
                break;

            default:
                break;
        }
    },
});


var PassWarn = cc.Layer.extend({
    tag: "PassWarn",
    _callback: null,
    ctor: function () {
        this._super();
        var size = cc.director.getWinSize();
        var layout = new ccui.Layout();
        layout.setContentSize(size);
        layout.setAnchorPoint(cc.p(0, 0));
        layout.setPosition(cc.p(0, 0));
        layout.setTouchEnabled(true);
        layout.setSwallowTouches(true);
        layout.addClickEventListener(function (btn) {
        });
        this.addChild(layout);

        var box = new cc.LayerColor(cc.color(0, 0, 0, 100));
        box.setContentSize(size);
        box.setAnchorPoint(cc.p(0, 0));
        box.setPosition(cc.p(0, 0));
        this.addChild(box);
    },
    setCallback: function (callback) {
        this._callback = callback;
    },
    setChoiceInfos: function (hasGang, hasHu, tips) {
        var size = cc.director.getWinSize();
        var bg = new cc.Sprite(getResPath("RoomMJ/passwarning/bg.png"));
        bg.setPosition(cc.p(size.width / 2, size.height / 2));
        this.addChild(bg);

        var csize = bg.getContentSize();

        var str = "是否确认放弃本次 ";
        if (hasGang)str += "杠牌 ";
        if (hasHu)str += "胡牌 ";
        str += "?";
        if (tips) str = tips;
        var label = new cc.LabelTTF(str, "Thonburi", 30);
        label.setAnchorPoint(cc.p(0.5, 0.5));
        label.setPosition(cc.p(csize.width / 2, csize.height / 2 + 30));
        label.setColor(cc.color(0x98, 0x6d, 0x47));
        bg.addChild(label);

        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("RoomMJ/passwarning/yes1.png"), getResPath("RoomMJ/passwarning/yes2.png"), "");
            btn.addClickEventListener(function (sender, evt) {
                self.removeFromParent();
                if (self._callback)self._callback();
            });
            btn.setPosition(cc.p(csize.width / 2 - 140, 80));
            bg.addChild(btn);
        }

        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("RoomMJ/passwarning/no1.png"), getResPath("RoomMJ/passwarning/no2.png"), "");
            btn.addClickEventListener(function (sender, evt) {
                self.removeFromParent();
            });
            btn.setPosition(cc.p(csize.width / 2 + 140, 80));
            bg.addChild(btn);
        }
    }
});

var BeiJieSanLayer = cc.Layer.extend({
    tag: "BeiJieSanLayer",
    rootNode:null,
    ctor: function () {
        this._super();
        var self = this;
        var size = cc.director.getWinSize();
        this.ignoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.0, 0.0));
        this.setContentSize(cc.size(size.width, size.height));

        var uiJson = ccs.load(getResPath("RoomMJ/beijiesan/black1080.json"));
        var rootNode = uiJson.node;
        rootNode.setScale(0.667);
        rootNode.setPosition(size.width / 2,325*0.667);
        this.addChild(rootNode);
        this.rootNode = rootNode;
    },
    setInfo:function(packet){
        var uid = packet.uid;
        var avatarstr = packet.avatar;
        var clubname = packet.clubname;
        var clubcode = packet.clubcode;
        var closetype = packet.closetype;

        //clubname = "基友圈";
        //clubcode = "5264588";
        //closetype = 1;

        var tip1 = "";
        var tip2 = "";
        var avatar = this.rootNode.getChildByName("avatar");
        avatar.removeAllChildren();
        var m_pAvatar = Utils.createCircleAvatar(avatarstr, "Avatars/user4_unlogin.png", getResPath("RoomMJ/head_bg.png"), cc.size(111, 111));
        avatar.addChild(m_pAvatar);

        var tip1_l = this.rootNode.getChildByName("tip1");
        var tip2_l = this.rootNode.getChildByName("tip2");
        var time_l = this.rootNode.getChildByName("time");
        tip1_l.ignoreContentAdaptWithSize(true);
        tip2_l.ignoreContentAdaptWithSize(true);

        if (clubname != null && clubname != ""){
            tip1 = clubname + "  圈号:" + clubcode;
        }
        if (closetype == 1){
            tip2 = "圈主(ID:" + uid + ")发起解散，游戏解散成功";
        } else if (closetype == 2){
            tip2 = "店小二(ID:" + uid + ")发起解散，游戏解散成功";
        }
        tip1_l.setString(tip1);
        tip2_l.setString(tip2);

        MJModel.isEnterWait = true;
        var self = this;
        var time = 3;
        time_l.setString(time);
        time_l.runAction(cc.sequence(cc.delayTime(1),cc.callFunc(function(){
            time--;
            if (time < 0){
                time = 0;
                MJModel.isEnterWait = false;
                time_l.stopAllActions();
                self.removeFromParent();
            }
            if (time <= 1){
                MJModel.isEnterWait = false;
            }
            time_l.setString(time);
        })).repeat(10));
    },
});