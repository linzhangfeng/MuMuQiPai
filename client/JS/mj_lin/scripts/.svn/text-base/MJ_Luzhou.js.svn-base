/**
 * Created by jesse on 2017/8/4.
 */
loadProtoFile("proto/luzhougameproto.proto");
var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
};
var AddFanType = {
    MJ_FAN_TYPE_PINGHU:17,					//平胡
    MJ_FAN_TYPE_QINGYISE:14,					//清一色
    MJ_FAN_TYPE_QIDUI:36,						//七对
    MJ_FAN_TYPE_LONGQIDUI:27,					//龙七对
    MJ_FAN_TYPE_SHUANGLONGQIDUI:53,           //双龙七对
    MJ_FAN_TYPE_QINGQIDUI:25,					//清七对
    MJ_FAN_TYPE_QINGLONGQIDUI:26,				//清龙七对
    MJ_FAN_TYPE_QINGSHUANGLONGQIDUI:54,       //清双龙七对
    MJ_FAN_TYPE_PENGPENGHU:16,				//碰碰胡
    MJ_FAN_TYPE_QINGDUI:11,					//清对 清一色 + 碰碰胡
    MJ_FAN_TYPE_TIANHU:19,	 //天胡
    MJ_FAN_TYPE_DIHU:20,	 //地胡
    MJ_FAN_TYPE_GANGSHANGHUA:24,	 //杠上开花
    MJ_FAN_TYPE_QIANGGANGHU:22,	 //抢杠胡
    MJ_FAN_TYPE_GUIZIMO:58,                    //闺自摸
    MJ_FAN_TYPE_SHUANGGUIZIMO:59,           //双闺自摸
    MJ_FAN_TYPE_SANGUIZIMO:60,             //三闺自摸

    MJ_FAN_TYPE_QINGGUI:61,            //清闺
    MJ_FAN_TYPE_SHUANGQINGGUI:62,   //双清闺
    MJ_FAN_TYPE_SANQINGGUI:63,   //三清闺

    MJ_FAN_TYPE_GUIDUI:64,  //闺对
    MJ_FAN_TYPE_SHUANGGUIDUI:65,  //双闺对
    MJ_FAN_TYPE_SANGUIDUI:66, //三闺对
    MJ_FAN_TYPE_SIGUIDUI:67, //四闺对
    MJ_FAN_TYPE_QINGGUIDUI:68,  //清闺对
    MJ_FAN_TYPE_QINGSHUANGGUIDUI:69,  //清双闺对
    MJ_FAN_TYPE_QINGSANGUIDUI:70,  //清三闺对
    MJ_FAN_TYPE_QINGSIGUIDUI:71,   //清四闺对

    MJ_FAN_TYPE_SANLONGQIDUI:72,  //三龙七对
    MJ_FAN_TYPE_QINGSANLONGQIDUI:73,  //清三龙七对
    MJ_FAN_TYPE_WUGUI:74,   //无鬼
    MJ_FAN_TYPE_BAOPAI:75,    //报牌
    MJ_FAN_TYPE_GANGSHANGPAO:76,
    MJ_FAN_TYPE_FANGPAOGUI      :77,  //放炮归
};

var AddFanTypeArray = [
    AddFanType.MJ_FAN_TYPE_PINGHU,
    AddFanType.MJ_FAN_TYPE_QINGYISE,
    AddFanType.MJ_FAN_TYPE_QIDUI,
    AddFanType.MJ_FAN_TYPE_LONGQIDUI,
    AddFanType.MJ_FAN_TYPE_SHUANGLONGQIDUI,
    AddFanType.MJ_FAN_TYPE_QINGQIDUI,
    AddFanType.MJ_FAN_TYPE_QINGLONGQIDUI,
    AddFanType.MJ_FAN_TYPE_QINGSHUANGLONGQIDUI,
    AddFanType.MJ_FAN_TYPE_PENGPENGHU,
    AddFanType.MJ_FAN_TYPE_QINGDUI,
    AddFanType.MJ_FAN_TYPE_TIANHU,
    AddFanType.MJ_FAN_TYPE_DIHU,
    AddFanType.MJ_FAN_TYPE_GUIZIMO,
    AddFanType.MJ_FAN_TYPE_SHUANGGUIZIMO,
    AddFanType.MJ_FAN_TYPE_SANGUIZIMO,
    AddFanType.MJ_FAN_TYPE_QINGGUI,
    AddFanType.MJ_FAN_TYPE_SHUANGQINGGUI,
    AddFanType.MJ_FAN_TYPE_SANQINGGUI,
    AddFanType.MJ_FAN_TYPE_GUIDUI,
    AddFanType.MJ_FAN_TYPE_SHUANGGUIDUI,
    AddFanType.MJ_FAN_TYPE_SANGUIDUI,
    AddFanType.MJ_FAN_TYPE_SIGUIDUI,
    AddFanType.MJ_FAN_TYPE_QINGGUIDUI,
    AddFanType.MJ_FAN_TYPE_QINGSHUANGGUIDUI,
    AddFanType.MJ_FAN_TYPE_QINGSANGUIDUI,
    AddFanType.MJ_FAN_TYPE_QINGSIGUIDUI,
    AddFanType.MJ_FAN_TYPE_SANLONGQIDUI,
    AddFanType.MJ_FAN_TYPE_QINGSANLONGQIDUI,
    AddFanType.MJ_FAN_TYPE_FANGPAOGUI,

    AddFanType.MJ_FAN_TYPE_GANGSHANGHUA,					//清一色
    AddFanType.MJ_FAN_TYPE_QIANGGANGHU,				//碰碰胡
    AddFanType.MJ_FAN_TYPE_WUGUI,				//抢杠胡
    AddFanType.MJ_FAN_TYPE_GANGSHANGPAO,				//全求人
];

var AddFanNameArray = [
    "平胡",
    "清一色",
    "七对",
    "龙七对",
    "双龙七对",
    "清七对",
    "清龙七对",
    "清双龙七对",
    "对对胡",
    "清对",
    "天胡",
    "地胡",
    "归自摸",
    "双归",
    "三归",
    "清归",
    "清双归",
    "三清归",
    "归对",
    "双归对",
    "三归对",
    "四归对",
    "清归对",
    "清双归对",
    "清三归对",
    "清四归对",
    "三龙七对",
    "清三龙七对",
    "放炮归",
    "杠上花",
    "抢杠",
    "无鬼",
    "杠上炮",
];

var LZActionType =
{
    TYPE_LAIZI_GANG: 0x10000, //赖子杠
    TYPE_BAOPAI: 0x4000, //报牌
};

var PackgName = {
    luzhouSan: 570,
    luzhouSi: 571,
};

var CHENGDU_CMD = {
    SERVER_CHENGDU_START_DINGQUE: 5070,//开始定缺
    SERVER_CHENGDU_USER_DINGQUE_DONE: 5072,//用户选完定缺色广播
    SERVER_CHENGDU_ALL_DINGQUE_DONE: 5074,//所有人定缺完成

    SERVER_CHENGDU_START_HUANZHANG: 5071,//开始换张
    SERVER_CHENGDU_USER_HUANZHANG_DONE: 5073,//用户选完要换的张广播
    SERVER_CHENGDU_ALL_HUANZHANG_DONE: 5075,//所有人换张完成
}
var MJTable_Luzhou = MJTable.extend({
    tag: "MJTable_Huichuan",
    _lock_card: 0,
    gameDes: "",
    _all_state_tip: [null, null, null, null],
    _all_huType_tip: [null, null, null, null],
    _all_DajiaoType_tip: [null, null, null, null],
    _lackDingque: [null, null, null, null],
    _changeCard: [null, null, null, null],
    _allPaoCard: [[], [], [], []],
    isRecordShow: false,
    mChangeBar: null,
    mPaiSeBar: null,
    _pkg_id: 0,
    _player_hucards: [[], [], [], []],
    _isDelay: false, //判断是否延迟定缺开始 与 给换三张的那张牌单独样式
    _MJShaizi: 0,
    change_hand_card: [],
    _changeEffectNum: 0,
    _guiCard: 65,
    _all_OpType_tip:[null,null,null,null],
    ctor: function () {
        this._super();
    },
    //playerClickCallback: function (pos) {
    //    var seatid = MJModel.getSeatidByPos(pos);
    //    if (seatid == MJModel.seatid) {
    //        this.release();
    //        ZJHModel.getInstance().roomToHall();
    //    }
    //    else {
    //        this._super(pos);
    //    }
    //},
    initRoom: function () {
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 570 || this._pkg_id == 621) {
                this._pkg_id = PackgName.luzhouSan;
            }
            if (this._pkg_id == 571 || this._pkg_id == 622) {
                this._pkg_id = PackgName.luzhouSi;
            }

        } catch (e) {
            Log(this, e);
        }
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;

        MJModel.mj_style = 1;
        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_card_lib_type = 1;
        MJModel.Is_yipaoduoxiang = true;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_hu_type = 1;
        MJModel.mj_layout = 0;
        MJModel.scmjType = 1;
        MJModel.shareType = 1;
        // MJModel.chi_layout = 3;
        if (this._pkg_id == PackgName.luzhouSan) {
            MJModel.mj_roomType = 1;
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }

        var size = cc.director.getWinSize();
        this._init_extend();
        this._super();
        var self = this;
        this.mPaiSeBar = new CHENGDU_Paise();
        this.mPaiSeBar.setVisible(false);
        this.mPaiSeBar.addClickEventListener(function (node) {
            self.onPaiSeClick(node);
        });
        this.mChangeBar = new MJChange();
        this.mChangeBar.setVisible(false);
        this.mChangeBar.addClickEventListener(function (node) {
            self.onChangeClick(node);
        });
        this.addChild(this.mChangeBar,100);
        this.addChild(this.mPaiSeBar,100);
        this._createWaitLack();
        this._createWaitchange();
        this.room_Action.setGPSVisible(true);
        this._init_ui();



        //this.schedule(this.test, 1.0);
    },
    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            //var packet = {"gameend":{"UserCard":[{"ChangeableCardsLen":8,"ChangeableCards":[5,6,7,38,38,38,39,40],"FixedCardsLen":2,"stFixedCards":[{"CardData":33,"state":65540,"chairID":3,"LaiziNum":1},{"CardData":1,"state":65537,"chairID":3,"LaiziNum":1}]},{"ChangeableCardsLen":8,"ChangeableCards":[17,17,17,22,23,24,25,65],"FixedCardsLen":2,"stFixedCards":[{"CardData":20,"state":1,"chairID":3,"LaiziNum":0},{"CardData":21,"state":65540,"chairID":0,"LaiziNum":1}]},{"ChangeableCardsLen":7,"ChangeableCards":[1,2,3,3,4,5,8],"FixedCardsLen":2,"stFixedCards":[{"CardData":24,"state":65537,"chairID":0,"LaiziNum":1},{"CardData":18,"state":1,"chairID":0,"LaiziNum":0}]},{"ChangeableCardsLen":5,"ChangeableCards":[2,4,6,6,65],"FixedCardsLen":3,"stFixedCards":[{"CardData":7,"state":65544,"chairID":3,"LaiziNum":1},{"CardData":37,"state":1,"chairID":1,"LaiziNum":0},{"CardData":34,"state":1,"chairID":0,"LaiziNum":0}]}],"Score":[-40,75,-50,15],"EndState":0,"EndGangInfo":[],"faninfo":[{"chairid":0,"SpecialType":1,"FanNum":1,"addfan":[{"AddType":58,"AddNum":1,"AddType2":1}],"hucard":40,"DianPao":[]},{"chairid":1,"SpecialType":1,"FanNum":4,"addfan":[{"AddType":61,"AddNum":4,"AddType2":1}],"hucard":65,"DianPao":[]},{"chairid":2,"SpecialType":0,"FanNum":0,"addfan":[],"hucard":0,"DianPao":[]},{"chairid":3,"SpecialType":1,"FanNum":1,"addfan":[{"AddType":58,"AddNum":1,"AddType2":1}],"hucard":65,"DianPao":[]}],"money":[99960,100075,99950,100015]},"baopai":[0,0,0,0],"huorder":[3,2,255,1],"dajiaoinfo":[],"xiqian":[0,0,0,0],"arrdianpaopai":[{"paopai":[]},{"paopai":[]},{"paopai":[]},{"paopai":[]}]};
            //this.handler_server_game_end_bc(packet, true);

            var dd = createRubCardEffectLayer(getResPath("test/jianjie_debug.plist","hand0/00.png","hand0/01.png"));
            this.addChild(dd,1000000);
        }
    },
    handler_server_player_timeout_bc: function (data, canDelay) {
        var jpacket = parsePacket("proto.game.AckUserOvertimeState", data);
        var seatid = jpacket.chairid;
        var state = jpacket.state;

        if (state == 1) {
            var pos = MJModel.getPosBySeatid(seatid);
            if (this.players[pos])this.players[pos].setTimeOut(true);
        }
    },
    _init_ui: function () {
        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("luzhougui/action/baopai1.png"), getResPath("luzhougui/action/baopai2.png"), "");
            this.room_Action.actions["baopai"] = btn;
            btn.setName("baopai");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }
    },
    _removeAllScoreEffect: function () {
        try {
            while (this.getChildByName("hubeimj_score_effect")) {
                this.removeChildByName("hubeimj_score_effect");
            }
        } catch (e) {

        }
    },
    resetGame: function (allClean) {
        this._super(allClean);
        this._hide_all_tip();
        this._isShowWaitLack(false);
        this._isShowWaitchange(false);
        if (this.mChangeBar.getChildByName("sureChoice") != undefined) {
            this.mChangeBar.getChildByName("sureChoice").setEnabled(false);
        }
        this._clearAllPaoCard();
        MJModel.mj_lockcard_type = 0;
        this._MJShaizi = 0;
        this._removeAllScoreEffect();
    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.luzhouguimj.tagCDGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.luzhouguimj.AckCDGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CHENGDU_CMD.SERVER_CHENGDU_START_HUANZHANG) {
            //开始换牌
            this._handler_server_change_start(jpacket, canDelay);
        } else if (cmd == CHENGDU_CMD.SERVER_CHENGDU_USER_HUANZHANG_DONE) {
            //换牌中
            this._handler_server_change(jpacket, canDelay);
        } else if (cmd == CHENGDU_CMD.SERVER_CHENGDU_ALL_HUANZHANG_DONE) {
            //换牌结束
            this._handler_server_change_end(jpacket, canDelay);
        } else if (cmd == CHENGDU_CMD.SERVER_CHENGDU_START_DINGQUE) {
            //定缺开始
            this._handler_server_lack_start(jpacket, canDelay);
        } else if (cmd == CHENGDU_CMD.SERVER_CHENGDU_USER_DINGQUE_DONE) {
            //定缺中
            this._handler_server_lack(jpacket, canDelay);
        } else if (cmd == CHENGDU_CMD.SERVER_CHENGDU_ALL_DINGQUE_DONE) {
            //定缺结束
            this._handler_server_lack_end(jpacket, canDelay);
        } else if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },

    _checkAddCardFlag: function (pos, card) {
        try {
            if (MJModel.mj_style != 1)return;
            // card.setStoreColor(cc.color(255, 249, 137));
            var p = card.getChildByName("sprite");
            p.removeChildByName("huanpai_flag");
            var frompos = 0;
            var effect = this._get_huanpai_direction();
            if (pos == 0) {
                if (effect == 0) { //顺时针
                    frompos = 1;
                } else if (effect == 1) { //逆时针
                    frompos = 3;
                } else if (effect == 2) { //对家
                    frompos = 2;
                }
            } else if (pos == 1) {
                if (effect == 0) { //顺时针
                    frompos = 2;
                } else if (effect == 1) { //逆时针
                    frompos = 0;
                } else if (effect == 2) { //对家
                    frompos = 3;
                }
            } else if (pos == 2) {
                if (effect == 0) { //顺时针
                    frompos = 3;
                } else if (effect == 1) { //逆时针
                    frompos = 1;
                } else if (effect == 2) { //对家
                    frompos = 0;
                }
            } else if (pos == 3) {
                if (effect == 0) { //顺时针
                    frompos = 0;
                } else if (effect == 1) { //逆时针
                    frompos = 2;
                } else if (effect == 2) { //对家
                    frompos = 1;
                }
            }

            if (p) {
                var flag = new cc.Sprite(getResPath("huichuan/flag/point/point" + frompos + ".png"));
                var m_size = p.getContentSize();
                flag.setPosition(cc.p(m_size.width / 2, m_size.height));
                flag.setAnchorPoint(cc.p(0.5, 1));
                flag.setScale(0.6);
                flag.setName("huanpai_flag");
                p.addChild(flag);
                if (pos == 1) {
                    flag.setPosition(cc.p(-10, m_size.height / 2 + 10));
                    flag.setAnchorPoint(cc.p(0, 0.5));
                } else if (pos == 2) {
                    flag.setPosition(cc.p(m_size.width / 2, 0));
                    flag.setAnchorPoint(cc.p(0.5, 0));
                } else if (pos == 3) {
                    flag.setPosition(cc.p(m_size.width + 10, m_size.height / 2 + 10));
                    flag.setAnchorPoint(cc.p(1, 0.5));
                }
                if (MJModel.isOnVideo && pos == 0) {
                    flag.setPosition(cc.p(m_size.width / 2, m_size.height + 10));
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },
    _showShaiZiEffect: function (restore, saizi1) {

        this.removeChildByName("shaizi_effect");
        this.removeChildByName("shaizi_effect");
        this.removeChildByName("shaizi_effect");
        var size = cc.director.getWinSize();
        var self = this;
        var addX = 200;
        if (restore) {
            var sp1 = new cc.Sprite(__String.createWithFormat(getResPath("huichuan/effect/shaizi/%1.png"), saizi1));
            var radius = 15;
            var M_PI = 3.14159;
            var rotation = Utils.Random(0, 360);
            sp1.setPosition(size.width / 2 + addX + radius * Math.cos((-90.0 + rotation) / 180.0 * M_PI), 380 + radius * Math.sin((-90.0 + rotation) / 180.0 * M_PI));
            sp1.setName("shaizi_effect");
            this.addChild(sp1, 10000);
            sp1.setScale(1.2);
            return;
        }
        var showShaizi = cc.CallFunc(function () {
            ccs.armatureDataManager.addArmatureFileInfo(getResPath("huichuan/effect/shaizi/effects_mjxtouziyige.ExportJson"));
            var armature = new ccs.Armature("effects_mjxtouziyige");
            armature.setScale(1.2);
            armature.setName("shaizi_effect");

            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(0);
                    }
                }
                armature.setPosition(640 + addX, 380);
                self.addChild(armature, 10000);

                var removeEffect = cc.CallFunc(function () {
                    self.removeChildByName("shaizi_effect");
                });
                var callback = cc.CallFunc(function () {
                    var sp1 = new cc.Sprite(__String.createWithFormat(getResPath("huichuan/effect/shaizi/%1.png"), saizi1));
                    var radius = 15;
                    var M_PI = 3.14159;
                    var rotation = Utils.Random(0, 360);
                    sp1.setPosition(size.width / 2 + addX + radius * Math.cos((-90.0 + rotation) / 180.0 * M_PI), 380 + radius * Math.sin((-90.0 + rotation) / 180.0 * M_PI));
                    sp1.setName("shaizi_effect");
                    self.addChild(sp1, 10000);
                    sp1.setScale(1.2);
                });
                self.runAction(cc.sequence(cc.delayTime(1), removeEffect, callback));
                Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/touzi.mp3")));
            }
        });
        this.runAction(cc.sequence(showShaizi));
    },
    _removeShaiZiEffect: function () {
        this.removeChildByName("shaizi_effect");
        this.removeChildByName("shaizi_effect");
        this.removeChildByName("shaizi_effect");
        this.removeChildByName("shaizi_effect");
    },
    _showChangeEffect: function (effect) {
        try {
            var size = cc.director.getWinSize();
            var self = this;
            {
                var bg = new cc.Sprite(getResPath("huichuan/tip/changeBg.png"));
                bg.setName("huanpaiBg");
                bg.setPosition(cc.p(size.width / 2, size.height / 2));
                this.addChild(bg);

                var huanpaiTip = new cc.Sprite(getResPath("huichuan/tip/changeText.png"));
                huanpaiTip.setPosition(cc.p(bg.getContentSize().width / 2, bg.getContentSize().height / 2 + 25));
                bg.addChild(huanpaiTip);

                var huanpaiText = new cc.Sprite(__String.createWithFormat(getResPath("huichuan/tip/huanpai_%1.png"), effect));
                huanpaiText.setPosition(cc.p(bg.getContentSize().width / 2, bg.getContentSize().height / 2 - 40));
                bg.addChild(huanpaiText);

                var removeEffect = cc.CallFunc(function () {
                    self.removeChildByName("huanpaiBg");
                });
            }

            ccs.armatureDataManager.addArmatureFileInfo(getResPath("huichuan/effect/change/effectsfszzmjxh.ExportJson"));
            var armature = new ccs.Armature("effectsfszzmjxh");
            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(effect);
                        // animation.play(effect);
                        armature.setPosition(cc.p(size.width / 2, size.height / 2));
                        this.addChild(armature, 10000);
                        armature.runAction(cc.sequence(cc.delayTime(1.5), removeEffect, cc.removeSelf()));
                    }
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },
    _handler_server_change_start: function (data, canDelay) {
        var changeInfo = parsePacket("proto.game.luzhouguimj.StartChangeCard", data);
        // var changecard = changeInfo.card;
        // var changetime = changeInfo.hsz_time;
        // changetime = changetime - 2;
        //初始化换牌数据
        this.change_hand_card = [];
        for (var i = 0; i < MJModel.Play_num; i++) {
            var a = [];
            this.change_hand_card.push(a);
        }

        // this._removeShaiZiEffect();

        {
            MJModel.canChoiceMore = true;
            MJModel.canTouchCard = true;
            // this.room_Info.showTime(changetime);
            this.mChangeBar.setVisible(true);
            this._isShowWaitchange(true);
        }

        // {
        //     if (changecard.length != 3) return;
        //     var cardtype = parseInt(changecard[0] / 16);
        //     for (var i = 0; i < changecard.length; i++) {
        //         var cardtype2 = parseInt(changecard[i] / 16);
        //         if (cardtype2 != cardtype) return;
        //     }
        //
        //     for (var i = 0; i < changecard.length; i++) {
        //         for (var j = this.room_Card.hand_card[0].length - 1; j >= 0; j--) {
        //             var card = this.room_Card.hand_card[0][j];
        //             if (card.getValue() == changecard[i] && card.isUp == false) {
        //                 this.room_Card.hand_card[0][j].setUp(true);
        //                 break;
        //             }
        //         }
        //     }
        //
        //     var upCards = this.room_Card.getChoiceCards();
        //     if (upCards.length == 3) {
        //         this.room_Card.setCurChoiceType(cardtype);
        //         this.mChangeBar.getChildByName("sureChoice").setEnabled(true);
        //     } else {
        //         this.room_Card.setUp(false);
        //         this.mChangeBar.getChildByName("sureChoice").setEnabled(false);
        //     }
        // }
    },
    _handler_server_change: function (data, canDelay) {
        var ackLackOk = parsePacket("proto.game.luzhouguimj.AckChooseChangeCardOk", data);
        var seatid = ackLackOk.ChairID;
        var isOk = ackLackOk.isOk;
        if (isOk) {
            var pos = MJModel.getPosBySeatid(seatid);
            if (pos == 0) {
                this.mChangeBar.setVisible(false);
            }
            if (this._changeCard[pos]) {
                this._changeCard[pos].setTexture(getResPath("luzhougui/action/ok.png"));
            }
        }

    },
    _handler_server_change_end: function (data, canDelay) {
        var changeCard = parsePacket("proto.game.luzhouguimj.AckChangeCardCompleted", data);
        var self = this;
        {
            self.mChangeBar.setVisible(false);
            MJModel.canChoiceMore = false;
            MJModel.canTouchCard = false;
            self.room_Card.setUp(false);
            var pos = MJModel.getPosBySeatid(changeCard.SeatId);
            var oldcard = changeCard.oldCard;
            var newcard = changeCard.Card;
            for (var i = 0; i < oldcard.length; i++) {
                self.room_Card.removeHandCard(pos, oldcard[i]);
            }
            for (var i = 0; i < newcard.length; i++) {
                if (self.change_hand_card[pos] != undefined) {
                    self.change_hand_card[pos].push(newcard[i]);
                }
                self.room_Card.addHandCard(pos, newcard[i]);
            }

            self.room_Card.reflashHandCard(pos, true);
            self.room_Card.setCurChoiceType(-1);
            this._isShowWaitchange(false);

            //起手庄家摸牌与手牌隔空
            var mo_card = null;
            if (self.room_Card.isDuoPai(0)) {
                mo_card = self.room_Card.hand_card[0][0];
                self.room_Card.hand_card[0].splice(0, 1);
            }
            self.room_Card.reflashHandCard(0, true, false, true);

            if (mo_card) {
                mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                self.room_Card.hand_card[0].push(mo_card);
                MJModel.mj_mo_cards[pos] = mo_card.getValue();
            }
        }


        // var shaizi1 = 0;
        // if (changeCard.shaizi) {
        //     shaizi1 = changeCard.shaizi;
        //     this._MJShaizi = shaizi1;
        // }
        // this.mChangeBar.setVisible(false);
        // this._isDelay = true;
        // var self = this;
        // //录像时只播一次动画
        // self._changeEffectNum++;
        // var effect = this._get_huanpai_direction();
        // if (MJModel.seatid != -1 && canDelay) {
        //
        //     if (changeCard.chair_id == 0 || !MJModel.isOnVideo) {
        //         this._removeShaiZiEffect();
        //         //播放换牌动画
        //         var callback = cc.CallFunc(function () {
        //             if (self._MJShaizi) {
        //                 self._showShaiZiEffect(false, self._MJShaizi);
        //             }
        //         });
        //         var callback3 = cc.CallFunc(function () {
        //             self._removeShaiZiEffect();
        //         });
        //         var callback1 = cc.CallFunc(function () {
        //             self._showChangeEffect(effect);
        //         });
        //         var callback2 = cc.CallFunc(function () {
        //             //在座位上
        //             self.mChangeBar.setVisible(false);
        //             MJModel.canChoiceMore = false;
        //             MJModel.canTouchCard = false;
        //             self.room_Card.setUp(false);
        //             var pos = MJModel.getPosBySeatid(changeCard.chair_id);
        //             for (var i = 0; i < changeCard.oldcard.length; i++) {
        //                 self.room_Card.removeHandCard(pos, changeCard.oldcard[i]);
        //             }
        //             for (var i = 0; i < changeCard.card.length; i++) {
        //                 if (self.change_hand_card[pos] != undefined) {
        //                     self.change_hand_card[pos].push(changeCard.card[i]);
        //                 }
        //                 self.room_Card.addHandCard(pos, changeCard.card[i]);
        //                 //给换的牌添加换牌标志
        //                 var len = self.room_Card.hand_card[pos].length;
        //                 var card = self.room_Card.hand_card[pos][len - 1];
        //                 self._checkAddCardFlag(pos, card);
        //             }
        //
        //             self.room_Card.reflashHandCard(pos, true);
        //             self.room_Card.setCurChoiceType(-1);
        //         });
        //
        //         this.runAction(cc.sequence(callback, cc.delayTime(1), callback1, cc.delayTime(1.5), callback3, callback2));
        //     } else {
        //         //在座位上
        //         self.mChangeBar.setVisible(false);
        //         MJModel.canChoiceMore = false;
        //         MJModel.canTouchCard = false;
        //         self.room_Card.setUp(false);
        //         var pos = MJModel.getPosBySeatid(changeCard.chair_id);
        //         for (var i = 0; i < changeCard.oldcard.length; i++) {
        //             self.room_Card.removeHandCard(pos, changeCard.oldcard[i]);
        //         }
        //         for (var i = 0; i < changeCard.card.length; i++) {
        //             if (self.change_hand_card[pos] != undefined) {
        //                 self.change_hand_card[pos].push(changeCard.card[i]);
        //             }
        //             self.room_Card.addHandCard(pos, changeCard.card[i]);
        //             //给换的牌添加换牌标志
        //             var len = self.room_Card.hand_card[pos].length;
        //             var card = self.room_Card.hand_card[pos][len - 1];
        //             self._checkAddCardFlag(pos, card);
        //         }
        //
        //         self.room_Card.reflashHandCard(pos, true);
        //         self.room_Card.setCurChoiceType(-1);
        //     }
        // } else if (MJModel.seatid != -1) {
        //     if (self._MJShaizi && this._changeEffectNum == 1) {
        //         self._showShaiZiEffect(true, self._MJShaizi);
        //     }
        //     //在座位上
        //     this.mChangeBar.setVisible(false);
        //     MJModel.canChoiceMore = false;
        //     MJModel.canTouchCard = false;
        //     var changeCard = parsePacket("proto.game.huichuanmj.AckChangeCard", data);
        //     this.room_Card.setUp(false);
        //     var pos = MJModel.getPosBySeatid(changeCard.chair_id);
        //     for (var i = 0; i < changeCard.oldcard.length; i++) {
        //         this.room_Card.removeHandCard(pos, changeCard.oldcard[i]);
        //     }
        //     for (var i = 0; i < changeCard.card.length; i++) {
        //         if (this.change_hand_card[pos] != undefined) {
        //             this.change_hand_card[pos].push(changeCard.card[i]);
        //         }
        //         this.room_Card.addHandCard(pos, changeCard.card[i]);
        //         //给换的牌添加换牌标志
        //         var len = this.room_Card.hand_card[pos].length;
        //         var card = this.room_Card.hand_card[pos][len - 1];
        //         this._checkAddCardFlag(pos, card);
        //     }
        //
        //     this.room_Card.reflashHandCard(pos, true);
        //     this.room_Card.setCurChoiceType(-1);
        // }
        // this._isShowWaitchange(false);
    },
    _get_huanpai_direction: function () {
        var effect = 0; //默认顺时针
        var shaizi = this._MJShaizi;
        if (MJModel.mj_roomType == 0) {
            if (shaizi == 3 || shaizi == 4) {
                //逆时针
                effect = 1;
            } else if (shaizi == 5 || shaizi == 6) {
                //对家交换
                effect = 2;
            }
        } else if (MJModel.mj_roomType == 1) {
            if (shaizi == 4 || shaizi == 5 || shaizi == 6) {
                //逆时针
                effect = 1;
            }
        }
        return effect;
    },
    _handler_server_lack_start: function (data, canDelay) {
        var startlack = parsePacket("proto.game.luzhouguimj.StartChooseLack", data);
        if (this.mPaiSeBar) {
            this.mPaiSeBar.setVisible(true);
            var goodpaise = this.room_Card.getGoodPaiSe();
            this.mPaiSeBar.setGoodPaiSe(goodpaise);
        }
        this._isShowWaitLack(true);

        // var self = this;
        // if (canDelay) {
        //     if (this._isDelay) {
        //         var callback = cc.CallFunc(function () {
        //             self._removeShaiZiEffect();
        //             if (MJModel.seatid != -1) {
        //                 self._isShowWaitLack(true);
        //                 if (canDelay) {
        //                     self.room_Info.showTime(lacktime);
        //                     self.mPaiSeBar.setGoodPaiSe(lacktype);
        //                     self.mPaiSeBar.setVisible(true);
        //                 }
        //             }
        //         });
        //         this.runAction(cc.sequence(cc.delayTime(3), callback));
        //     } else {
        //         if (MJModel.seatid != -1) {
        //             this._isShowWaitLack(true);
        //             if (canDelay) {
        //                 this.room_Info.showTime(lacktime);
        //                 this.mPaiSeBar.setGoodPaiSe(lacktype);
        //                 this.mPaiSeBar.setVisible(true);
        //             }
        //         }
        //     }
        // } else {
        //     self._removeShaiZiEffect();
        //     if (MJModel.seatid != -1) {
        //         this._isShowWaitLack(true);
        //         if (canDelay) {
        //             this.room_Info.showTime(lacktime);
        //             this.mPaiSeBar.setGoodPaiSe(lacktype);
        //             this.mPaiSeBar.setVisible(true);
        //         }
        //     }
        // }
    },
    _handler_server_lack: function (data, canDelay) {
        var ackLackOk = parsePacket("proto.game.luzhouguimj.AckChooseLackOk", data);
        var seatid = ackLackOk.ChairID;
        var pos = MJModel.getPosBySeatid(seatid);
        if (pos == 0) {
            this.mPaiSeBar.setVisible(false);
        }
        if (this._lackDingque[pos]) {
            this._lackDingque[pos].setTexture(getResPath("luzhougui/action/ok.png"));
        }
    },
    _handler_server_lack_end: function (data, canDelay) {
        this.mPaiSeBar.setVisible(false);
        this._isDelay = false;
        var self = this;
        var LackComplete = parsePacket("proto.game.luzhouguimj.AckChooseLackComplete", data);
        var lackType = LackComplete.LackType;
        for (var i = 0; i < lackType.length; i++) {
            var lack = lackType[i];
            var pos = MJModel.getPosBySeatid(i);
            this.players[pos].setLackType(lack);
            if (MJModel.seatid == i) {
                MJModel.lackType = lack;
                this.room_Card.reflashHandCard(0);
            }
        }
        // this._MJShaizi = 0;
        this._isShowWaitLack(false);

        //起手庄家摸牌与手牌隔空
        var mo_card = null;
        if (self.room_Card.isDuoPai(0)) {
            mo_card = self.room_Card.hand_card[0][0];
            self.room_Card.hand_card[0].splice(0, 1);
        }
        self.room_Card.reflashHandCard(0, true, false, true);
        if (mo_card) {
            mo_card.setMyPosition(MJConfig.getMoCardPos(0));
            self.room_Card.hand_card[0].push(mo_card);
            MJModel.mj_mo_cards[pos] = mo_card.getValue();
        }
    },

    _setGameScore: function () {
        this.removeChildByName("numberScore");
        this.removeChildByName("qizhuangScore");

        var size = cc.director.getWinSize();

        var p = this._gameType_sp.getPosition();
        p.x += this._gameType_sp.getContentSize().width / 2;
        p.y -= this._gameType_sp.getContentSize().height;
        var buf = "" + Math.abs(MJModel.base_money);
        var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ/difen/number.png"), 16, 21, '0');
        //var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ2/info2/time_num_2.png"), 20 , 30, '0');
        numberScore.setName("numberScore");
        numberScore.setAnchorPoint(cc.p(0.0, 0.0));
        this.addChild(numberScore);

        var qizhuangScore = new cc.Sprite(getResPath("RoomMJ/difen/icon.png"));
        qizhuangScore.setAnchorPoint(cc.p(0.0, 0.0));
        qizhuangScore.setName("qizhuangScore");
        this.addChild(qizhuangScore);

        //var allL = numberScore.getContentSize().width + qizhuangScore.getContentSize().width;
        //qizhuangScore.setPosition(cc.p(size.width / 2 - allL / 2 + qizhuangScore.getContentSize().width / 2, size.height - 140));
        //numberScore.setPosition(cc.p(size.width / 2 - allL / 2 + qizhuangScore.getContentSize().width + numberScore.getContentSize().width / 2, size.height - 140));

        numberScore.setPosition(cc.p(p.x, p.y + 2));
        qizhuangScore.setPosition(cc.p(numberScore.getPositionX() + numberScore.getContentSize().width, p.y - 2));
    },

    _setGameType: function () {
        if (this._gameType_sp == null) {
            var pkg_id = 1;
            if (MJModel.mj_roomType == 1) pkg_id = 2;
            var play_id = [];
            if (MJModel.RoomConfigID.indexOf(1016001) != -1)play_id.push(9);//40颗
            if (MJModel.RoomConfigID.indexOf(1016002) != -1)play_id.push(10);//80颗
            if (MJModel.RoomConfigID.indexOf(1017001) != -1)play_id.push(7);//8鬼
            if (MJModel.RoomConfigID.indexOf(1017002) != -1)play_id.push(8);//12鬼
            if (MJModel.RoomConfigID.indexOf(1018001) != -1)play_id.push(1);//可点炮
            if (MJModel.RoomConfigID.indexOf(1018002) != -1)play_id.push(2);//仅自摸
            if (MJModel.RoomConfigID.indexOf(1019001) != -1)play_id.push(3);//开局定缺
            if (MJModel.RoomConfigID.indexOf(1019002) != -1)play_id.push(4);//胡牌缺一门
            if (MJModel.RoomConfigID.indexOf(1020001) != -1)play_id.push(5);//换三张
            if (MJModel.RoomConfigID.indexOf(1020002) != -1)play_id.push(11);//喜钱
            if (MJModel.RoomConfigID.indexOf(1020003) != -1)play_id.push(12);//爆叫
            if (MJModel.RoomConfigID.indexOf(1020004) != -1)play_id.push(6);//5颗起胡
            var size = cc.director.getWinSize();
            this._gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("luzhougui/flag/pkgid%1.png"), pkg_id));
            this._gameType_sp.setAnchorPoint(cc.p(0.5, 1));
            this._gameType_sp.setPosition(cc.p(size.width / 2, size.height / 2 + (play_id.length > 0 ? 215 : 240)));
            this.addChild(this._gameType_sp);

            var allL = 0;
            var allPlayId = [];
            for (var i = 0; i < play_id.length; i++) {
                var _gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("luzhougui/flag/playId%1.png"), play_id[i]));
                _gameType_sp.setAnchorPoint(cc.p(0.5, 0));
                this.addChild(_gameType_sp);
                allL += _gameType_sp.getContentSize().width + 10;
                allPlayId.push(_gameType_sp);
            }

            var curP = 0;
            for (var i = 0; i < play_id.length; i++) {
                var _gameType_sp = allPlayId[i];
                _gameType_sp.setPosition(cc.p(size.width / 2 - allL / 2 + curP + _gameType_sp.getContentSize().width / 2, size.height - 140));
                curP += _gameType_sp.getContentSize().width + 10;
            }
        }
    },
    myselfOpenOutCard: function (IsMoCard, showTip) {
        this._super(IsMoCard, showTip);
        this.checkAutoOutCard();
    },
    checkAutoOutCard:function(){
      if (MJModel.isMyPlayer(MJModel.cur_seat) && this.room_Card.isDuoPai(0) && MJModel.mj_lockcard_type == 2){

          this.autoOutCard();
      }
    },
    autoOutCard: function () {
        this.schedule(this.autoOutCardTimeOut, 0.5);
    },
    autoOutCardTimeOut: function (dt) {
        if (MJModel.TouPiaoING == true) return;//投票期间 该功能不起作用
        this.unschedule(this.autoOutCardTimeOut);
        var operate = MJModel.curOperate;
        if (( operate & ActionType.TYPE_LISTEN) == ActionType.TYPE_LISTEN) {
            operate = operate - ActionType.TYPE_LISTEN;
        }

        if (operate > 0) {
            var type = ActionType.TYPE_PASS;
            if ((operate & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                //type = ActionType.TYPE_HU;
                //sendOperateCard(type, 0);
                return;
            }
            if (this.room_Action) this.room_Action.setOperator(-1);
        }
        sendOutCard(MJModel.curOperateCard);
    },
    handler_server_scene_info_uc: function (chengdu_scene, canDelay) {
        var ackGameFree = chengdu_scene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        this.mPaiSeBar.setVisible(false);
        this.mChangeBar.setVisible(false);
        MJModel.mj_hu_flag = [0, 0, 0, 0];
        //定缺
        var lack = chengdu_scene.dingquese;
        if (sceneStatus == 3) {
            for (var i = 0; i < lack.length; i++) {
                var lackType = lack[i];
                var pos = MJModel.getPosBySeatid(i);
                this.players[pos].setLackType(lackType);
                if (i == MJModel.seatid) {
                    MJModel.lackType = lack[i];
                }
            }
        }
        //恢复胡牌标志 （炮胡，自摸）
         if (chengdu_scene.nHuType) {
             for (var i = 0; i < chengdu_scene.nHuType.length; i++) {
                 var pos = MJModel.getPosBySeatid(i);
                 var type = chengdu_scene.nHuType[i];
                 this._show_hu_tip(pos, type);
                 if (type == 1) {
                     MJModel.mj_hu_flag[pos] = 1;
                 }
             }
         }

        if (chengdu_scene.baopai) {
            var singdance = chengdu_scene.baopai;
            for (var i = 0; i < singdance.length; i++) {
                var seatid = i;
                var pos = MJModel.getPosBySeatid(seatid);
                if (singdance[seatid] == 1){
                    this.players[pos].setLiangPaiVisible(true);
                    if (MJModel.isMyPlayer(seatid))MJModel.mj_lockcard_type = 2;
                }
            }
        }
        this._super(ackGameFree, canDelay);
        this._setGameType();
        this._setGameScore();
        if (sceneStatus == 2) {
            this.mPaiSeBar.setGoodPaiSe(this.room_Card.getGoodPaiSe());
            this.mPaiSeBar.setVisible(true);
            var cont = 0;
            var lackOk = chengdu_scene.dingqueisok;
            for (var i = 0; i < lackOk.length; i++) {
                if (lackOk[i]) {
                    cont++;
                }
            }
            if (cont != 4) {
                this._isShowWaitLack(true);
                MJModel.canChoiceMore = false;
                MJModel.canTouchCard = false;
                for (var i = 0; i < lackOk.length; i++) {
                    if (lackOk[i]) {
                        var pos = MJModel.getPosBySeatid(i);
                        if (this._lackDingque[pos]) {
                            this._lackDingque[pos].setTexture(getResPath("luzhougui/action/ok.png"));
                        }
                        //如果自己已定缺完成，隐藏定缺界面
                        if (i == MJModel.seatid) {
                            this.mPaiSeBar.setVisible(false);
                        }
                    }
                }
            }
        }
        if (this.mChangeBar.getChildByName("sureChoice") != undefined) {
            this.mChangeBar.getChildByName("sureChoice").setEnabled(false);
        }
        if (sceneStatus == 1) {
            this.mChangeBar.setVisible(true);
            MJModel.canTouchCard = true;
            MJModel.canChoiceMore = true;
            cont = 0
            var changeOk = chengdu_scene.huanzhangisok;
            for (var i = 0; i < changeOk.length; i++) {
                if (changeOk[i]) {
                    cont++;
                }
            }
            if (cont != 4) {
                this._isShowWaitchange(true);
                for (var i = 0; i < changeOk.length; i++) {
                    if (changeOk[i]) {
                        var pos = MJModel.getPosBySeatid(i);
                        if (this._changeCard[pos]) {
                            this._changeCard[pos].setTexture(getResPath("luzhougui/action/ok.png"));
                        }
                        //如果自己换牌完成，隐藏换牌界面
                        if (i == MJModel.seatid) {
                            MJModel.canChoiceMore = false;
                            MJModel.canTouchCard = false;
                            this.mChangeBar.setVisible(false);
                        }
                    }
                }
            }
        }
        // //给炮胡那张牌在出牌区给出颜色
        // if (chengdu_scene.nDianPaoPaiShunXu) {
        //     for (var i = 0; i < chengdu_scene.nDianPaoPaiShunXu.length; i++) {
        //         var pos = MJModel.getPosBySeatid(i);
        //         var pos_num = chengdu_scene.nDianPaoPaiShunXu[i];
        //         if (pos_num != 255 && pos_num != null) {
        //             var card = this.room_Card.out_card[pos][pos_num - 1];
        //             card.setStoreColor(cc.color(234, 147, 147));
        //         }
        //     }
        // }
        if (chengdu_scene.nDianPaoHuCard) {
            for (var i = 0; i < chengdu_scene.nDianPaoHuCard.length; i++) {
                if (chengdu_scene.nDianPaoHuCard[i] != 255) {
                    var paohuSeatId = MJModel.getPosBySeatid(i);
                    this._show_pahu_card(paohuSeatId, chengdu_scene.nDianPaoHuCard[i], -1);
                }
            }
        }
        //自摸牌倒出来
        //if (chengdu_scene.nZiMoHuCard) {
        //    for (var i = 0; i < chengdu_scene.nZiMoHuCard.length; i++) {
        //        if (chengdu_scene.nZiMoHuCard[i] != 255) {
        //            var huCard = chengdu_scene.nZiMoHuCard[i];
        //            var pos = MJModel.getPosBySeatid(i);
        //            this.room_Card.removeHandCard(pos, huCard);
        //            this.room_Card.initMoCard(pos, huCard, true);
        //            var length = this.room_Card.hand_card[pos].length;
        //            this.room_Card.hand_card[pos][length - 1].setValue(huCard, pos, CardType.Card_End, length - 1);
        //        }
        //    }
        //}

        var opType = ackGameFree.OpType;
        var zimo = this.room_Card.isDuoPai(0);
        if (( opType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG || ( opType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG || ( opType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
            if (( opType & ActionType.TYPE_HU) == ActionType.TYPE_HU && zimo) {
                this._openHandCard();
            } else if (( opType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG || ( opType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                this._openHandCard();
            }
        }
    },

    _hide_all_tip: function () {
        for (var i = 0; i < this._all_huType_tip.length; i++) {
            if (this._all_huType_tip[i]) this._all_huType_tip[i].setVisible(false);
        }
    },
    _init_extend: function () {
        var self_table = this;
        var super_setId = MJPlayer.prototype.setId;
        MJPlayer.prototype.setId = function (id) {
            super_setId.call(this, id);
            this.liangpai_flag = new cc.Sprite(getResPath("luzhougui/action/baopai1.png"));
            this.liangpai_flag.setScale(0.3);
            this.liangpai_flag.setVisible(false);
            if (id == 1) {
                this.liangpai_flag.setPosition(cc.p(-this.banker_flag.getBoundingBox().width / 2 + 10, this.liangpai_flag.getBoundingBox().height / 2 - 5 + 50));
            }
            else {
                this.liangpai_flag.setPosition(cc.p(this.m_size.width + this.liangpai_flag.getBoundingBox().width / 2 - 30, this.liangpai_flag.getBoundingBox().height / 2 - 5 + 50));
            }
            this.addChild(this.liangpai_flag,100000);
        };

        MJPlayer.prototype.setLiangPaiVisible = function (v) {
            if (this.liangpai_flag) {
                this.liangpai_flag.setVisible(v);
            }
        };

        var super_reset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function () {
            super_reset.call(this);
            this.setLiangPaiVisible(false);
        };
        MJCards.prototype.setUp = function (isUp) {
            for (var i = 0; i < self_table.room_Card.hand_card[0].length; i++) {
                var fcard = self_table.room_Card.hand_card[0][i];
                if (fcard.isUp != isUp) {
                    fcard.setUp(isUp);
                }
            }
        };
        //Cards 碰杠去掉闪电
        MJCards.prototype.showLightAnim = function (position) {
        };
        //不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
        var supersetId = MJPlayer.prototype.setId;
        MJPlayer.prototype.setId = function (id) {
            supersetId.call(this, id);
            this.lack_flag = new cc.Sprite(getResPath("luzhougui/action/tiao_icon.png"));
            this.lack_flag.setAnchorPoint(cc.p(0.5, 0.5));
            if (id == 1) {
                this.lack_flag.setPosition(cc.p(-this.lack_flag.getContentSize().width / 2, this.lack_flag.getContentSize().height / 2));
            } else {
                this.lack_flag.setPosition(cc.p(this.m_size.width + this.lack_flag.getContentSize().width / 2, this.lack_flag.getContentSize().height / 2 - 3));
            }
            this.lack_flag.setVisible(false);
            this.addChild(this.lack_flag, 100);
        };
        MJPlayer.prototype.setLackType = function (lack) {
            this.lack_flag.setVisible(true);
            if (lack == MJ_TYPE.MJ_TYPE_TIAO) {
                this.lack_flag.setTexture(getResPath("luzhougui/action/tiao_icon.png"));
            }
            else if (lack == MJ_TYPE.MJ_TYPE_TONG) {
                this.lack_flag.setTexture(getResPath("luzhougui/action/tong_icon.png"));
            }
            else if (lack == MJ_TYPE.MJ_TYPE_WAN) {
                this.lack_flag.setTexture(getResPath("luzhougui/action/wan_icon.png"));
            }
            else {
                this.lack_flag.setVisible(false);

            }
        };
        var superreset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function () {
            superreset.call(this);
            this.setLackType(-1);
        };

        MJCards.prototype.getGoodPaiSe = function () {
            var wanCount = 0;
            var tiaoCount = 0;
            var tongCount = 0;
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var card = this.hand_card[0][i];
                var paiSe = parseInt(card.getValue() / 16);
                switch (paiSe) {
                    case MJ_TYPE.MJ_TYPE_WAN:
                        wanCount++;
                        break;
                    case MJ_TYPE.MJ_TYPE_TIAO:
                        tiaoCount++;
                        break;
                    case MJ_TYPE.MJ_TYPE_TONG:
                        tongCount++;
                        break;
                    default:
                        break;
                }

            }
            cc.log("wanCount:" + wanCount + "tiaoCount:" + tiaoCount + "tongCount:" + tongCount);
            if (wanCount <= tiaoCount && wanCount <= tongCount) {
                return MJ_TYPE.MJ_TYPE_WAN;
            }
            else if (tiaoCount <= wanCount && tiaoCount <= tongCount) {
                return MJ_TYPE.MJ_TYPE_TIAO;
            }
            else {
                return MJ_TYPE.MJ_TYPE_TONG;
            }
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat) {
            this.removeChildByName("ChooseGang_selectLayer");
            if (operat == -1 || operat == 0 || operat == null || operat == undefined) {
                for (var i = 0; i < this.opBtns.length; i++) {
                    this.opBtns[i].setVisible(false);
                }
                return false;
            }
            if ((operat & LZActionType.TYPE_BAOPAI) == LZActionType.TYPE_BAOPAI) {
                if (this.actions["baopai"]) {
                    this.actions["baopai"].setVisible(true);
                }
            }

            super_setOperator.call(this, operat);

            if (operat != -1 && self_table.room_Card.isDuoPai(0) && ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU || (operat & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG || (operat & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG)) {
                //if (this.actions["pass"]) {
                //    this.actions["pass"].setVisible(false);
                //}
                MJModel.mj_table.myselfOpenOutCard(true, false);
                var tips = "tianmen/flag/qg.png";
                var hasTwo = false;
                if ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU && ((operat & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG || (operat & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG)) {
                    tips = "tianmen/flag/qgh.png";
                    hasTwo = true;
                } else if ((operat & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                    tips = "tianmen/flag/qh.png";
                }

                var size = cc.director.getWinSize();
                var selectLayer = new cc.Sprite(getResPath(tips));
                selectLayer.setName("ChooseGang_selectLayer");
                selectLayer.setPosition(cc.p(size.width / 2, 200 + (hasTwo ? 70 : 0)));
                this.addChild(selectLayer, 10000);
            }
            this.reflashOpBtns();
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);

            if (name == "baopai") {
                var type = LZActionType.TYPE_BAOPAI;
                sendOperateCard(type, 0);
                this.setOperator(-1);
                return;
            }
            super_btnCallback.call(this, ref);
        };

        MJCards.prototype.openHuaZhuClickOnly = function () {
            var lackType = MJModel.lackType;
            if (lackType == -1) {
                return;
            }
            var hasHuaZhu = false;
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var card = this.hand_card[0][i];
                var paiSe = parseInt(card.getValue() / 16);
                if (lackType != -1 && paiSe == lackType) {
                    hasHuaZhu = true;
                    break;
                }
            }

            if (hasHuaZhu) {
                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    var paiSe = parseInt(card.getValue() / 16);
                    if (lackType != -1 && paiSe == lackType) {
                        card.setCardTouchEnable(true);
                        card.setBlackVis(false);
                    } else {
                        card.setCardTouchEnable(false);
                        card.setBlackVis(true);
                    }

                }
            } else {
                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    card.setCardTouchEnable(true);
                    card.setBlackVis(false);
                }
            }
        };

        MJCards.prototype.setSomeCardClickState = function () {
            if (MJModel.mj_lockcard_type == 1) {
                var listen_cards = [];
                for (var i = 0; i < MJModel.listen_info.length; i++) {
                    var lsi = MJModel.listen_info[i];
                    listen_cards.push(lsi.OutCard);
                }

                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var card = this.hand_card[0][i];
                    if (listen_cards.indexOf(card.getValue()) == -1) {
                        card.setBlackVis(true);
                        card.setCardTouchEnable(false);
                    }
                }
            } else if (MJModel.mj_lockcard_type == 2) {
                if (this.isDuoPai(0) == false) return;
                for (var i = 0; i < this.hand_card[0].length - 1; i++) {
                    var card = this.hand_card[0][i];
                    card.setBlackVis(true);
                    card.setCardTouchEnable(false);
                }
            } else {
                this.openHuaZhuClickOnly();
            }
        };

        MJCards.prototype.closeHuaZhuClickOnly = function () {
            if (MJModel.isAutoOutCard || MJModel.isBaoting || MJModel.lackType == -1) {
                return;
            }
            for (var i = 0; i < this.hand_card[0].length; i++) {
                var card = this.hand_card[0][i];
                card.setBlackVis(false);
            }
        };

        MJCards.prototype.setCurChoiceType = function (type) {
            this.curChoiceType = type;
            if (this.curChoiceType == -1) {
                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var handCard = this.hand_card[0][i];
                    if (handCard) {
                        handCard.setCardTouchEnable(true);
                        handCard.setBlackVis(false);
                    }
                }
            } else {
                for (var i = 0; i < this.hand_card[0].length; i++) {
                    var handCard = this.hand_card[0][i];
                    if (handCard && parseInt(handCard.getValue() / 16) != this.curChoiceType) {
                        handCard.setCardTouchEnable(false);
                        handCard.setBlackVis(true);
                    }
                }
            }
        };

        MJCards.prototype.getChoiceCards = function () {
            var cards = [];

            for (var i = 0; i < this.hand_card[0].length; i++) {
                var fcard = this.hand_card[0][i];
                if (fcard) {
                    if (fcard.isUp) {
                        cards.push(fcard.getValue());
                    }
                }
            }
            return cards;
        };

        MJCards.prototype.clickHandCardCallback = function (n) {
            if (MJModel.canTouchCard == false) {
                return;
            }
            var card = n;
            if (MJModel.canChoiceMore) {
                if (card.isUp) {
                    card.setUp(false);
                    var upCards = this.getChoiceCards();
                    if (upCards.length == 0) {
                        this.setCurChoiceType(-1);
                    }
                    if (self_table.mChangeBar.getChildByName("sureChoice") != undefined) {
                        if (upCards.length < 3) {
                            self_table.mChangeBar.getChildByName("sureChoice").setEnabled(false);
                        } else {
                            self_table.mChangeBar.getChildByName("sureChoice").setEnabled(true);
                        }
                    }
                }
                else {
                    var upCards = this.getChoiceCards();
                    if (upCards.length == 0) {
                        this.setCurChoiceType(parseInt(card.getValue() / 16))
                    }
                    if (upCards.length < 3) {
                        card.setUp(true);
                    }
                    if (self_table.mChangeBar.getChildByName("sureChoice") != undefined) {
                        if (upCards.length < 2) {
                            self_table.mChangeBar.getChildByName("sureChoice").setEnabled(false);
                        } else {
                            self_table.mChangeBar.getChildByName("sureChoice").setEnabled(true);
                        }
                    }
                }
                return;
            }

            var preCard = null;

            for (var i = 0; i < this.hand_card[0].length; i++) {
                var fcard = this.hand_card[0][i];
                if (fcard) {
                    if (fcard.isUp) preCard = fcard;
                    fcard.setUp(false);
                }
            }

            if (this.outCardBtn) this.outCardBtn.setVisible(false);

            if (preCard && preCard == card) {
                if (MJModel.mj_double_click_style == 1) this.outHandCardCallback(n);
                return;
            }

            card.setUp(true);

            var hasTingPaiInfo = false;

            try {
                MJModel.mj_table.removeChildByName("tingpai_layer");
                for (var i = 0; i < MJModel.listen_info.length; i++) {
                    var tli = MJModel.listen_info[i];
                    if (card.getValue() == tli.OutCard) {
                        if (tli.HuInfo.length >= 10) {
                            break;
                        }
                        var curTingPaiLayer = new TingPaiLayer();
                        curTingPaiLayer.show2(tli.HuInfo);

                        curTingPaiLayer.setName("tingpai_layer");
                        MJModel.mj_table.addChild(curTingPaiLayer, 100);
                        hasTingPaiInfo = true;
                        break;
                    }
                }
            } catch (e) {
                Log(this, e);
            }


            if (this.outCardBtn == null) {
                this.createOutCardBtn();
            }
            else {
                this.outCardBtn.setVisible(true);
            }

            if (this.outCardBtn) {
                var size = cc.director.getWinSize();
                this.outCardBtn.setPosition(cc.p(size.width - 120, 189));
            }
        };

        //碰杠牌处理 lq
        MJCards.prototype.addPengCard = function (pos, type, value, out_pos, OpType, specialCard,yaojiNum) {
            var card = new MJPeng();
            this.peng_card[pos].push(card);
            card.setValue(type, pos, value, this.peng_card[pos].length - 1, out_pos, false, OpType,specialCard, yaojiNum);
            card.setPosition(MJConfig.getPengKangCardPos(pos, this.peng_card[pos].length - 1));
            card.setScale(MJConfig.getScale_new(pos, CardType.Card_Peng, this.peng_card[pos].length - 1, false));
            this.addChild(card, MJConfig.getPengKangCardOrder(pos, this.peng_card[pos].length - 1));
        };
        var super_mjpengsetValue = MJPeng.prototype.setValue;
        MJPeng.prototype.setValue = function (type, pos, value, index, out_pos, isEnd, OpType, specialCard,yaojiNum) {
            this.laiziNums = yaojiNum;
            //cc.log("---type----: " + type + "-----yaojiNum----: " + yaojiNum);
            if (yaojiNum == undefined || yaojiNum == 0 || yaojiNum == 4) {//四个幺鸡杠的时候，当正常杠处理
                super_mjpengsetValue.call(this, type, pos, value, index, out_pos, isEnd, OpType);
                return;
            }
            var yaojiCard = self_table._guiCard;
            var values = [];
            for (var i = 0; i < 4; i++) {
                if (type == PengType.Peng_Peng) {
                    if (i == 3) break;
                    if ((i + yaojiNum) >= 3) {
                        values.push(yaojiCard);
                    } else {
                        values.push(value);
                    }

                } else if (type == PengType.Peng_Kang) {
                    if (yaojiNum == 1) {
                        values.push((i == 3) ? yaojiCard : value);
                    } else if (yaojiNum == 2) {
                        values.push((i == 0 || i == 2) ? yaojiCard : value);
                    } else {
                        values.push((i == 3) ? value : yaojiCard);
                    }
                } else if (type == PengType.Peng_AnKang) {
                    if (pos == 3) {
                        if (i == 2) {
                            values.push(value);
                        } else if (i == 3) {
                            values.push(yaojiCard);
                        } else {
                            values.push(0);
                        }
                    } else {
                        if (i == 0) {
                            values.push(value);
                        } else if (i == 3) {
                            values.push(yaojiCard);
                        } else {
                            values.push(0);
                        }
                    }
                }
            }
            // if (type == PengType.Peng_Kang || type == PengType.Peng_AnKang) {
            //     values.push(value);
            // }

            this.showUI(type, pos, values, index, out_pos, isEnd, OpType, value,null, yaojiNum);
        };
        var super_showUI = MJPeng.prototype.showUI;
        MJPeng.prototype.showUI = function (type, pos, values, index, out_pos, isEnd, OpType, value,value1, yaojiNum) {
            super_showUI.call(this, type, pos, values, index, out_pos, isEnd, OpType, value,value1);
            if (yaojiNum == undefined || yaojiNum == 0) return;
            //cc.log("---yaojiNum----: " + yaojiNum);
            for (var i = 0; i < this.cardList.length; i++) {
                var card = null;
                card = this.cardList[i];
                if (card && card.getValue() == self_table._guiCard) {
                    card.setStoreColor(cc.color(67, 205, 128, 255));
                }
                if (card && type == PengType.Peng_AnKang) {
                    card.setCascadeOpacityEnabled(true);
                    if (pos == 3) {
                        if (yaojiNum == 3) {
                            if (i == 1 || i == 0) card.setStoreColor(cc.color(0, 139, 0, 255));
                        } else if (yaojiNum == 2) {
                            if (i == 0) card.setStoreColor(cc.color(0, 139, 0, 255));
                        }
                    } else {
                        if (yaojiNum == 3) {
                            if (i == 1 || i == 2) card.setStoreColor(cc.color(0, 139, 0, 255));
                        } else if (yaojiNum == 2) {
                            if (i == 2) card.setStoreColor(cc.color(0, 139, 0, 255));
                        }
                    }

                    if (i == 3) {
                        card.setStoreColor(cc.color(67, 205, 128, 255));
                        card.setOpacity(230);
                    }
                }
            }
        };
        MJCards.prototype.changPengCard = function (pos, type, value, out_pos, OpType, specialCard ,yaojiNum) {
            var isOK = false;
            for (var i = 0; i < this.peng_card[pos].length; i++) {
                if (this.peng_card[pos][i].pengType == PengType.Peng_Peng && this.peng_card[pos][i].getValue() == value) {
                    this.peng_card[pos][i].setValue(type, pos, value, i, this.peng_card[pos][i].out_pos, false, OpType,specialCard, yaojiNum);
                    isOK = true;
                    break;
                }
            }
            return isOK;
        };
        // MJCards.prototype.tiaoChangeGang = function (pos, value, out_pos, yaojiNum) {
        //     for (var i = 0; i < this.peng_card[pos].length; i++) {
        //         var type = this.peng_card[pos][i].pengType;
        //         if ((type == PengType.Peng_AnKang || type == PengType.Peng_Kang) && this.peng_card[pos][i].getValue() == value) {
        //             this.peng_card[pos][i].setValue(type, pos, value, i, out_pos, false, 0, yaojiNum);
        //             break;
        //         }
        //     }
        // };
        MJCards.prototype.changeAnGang = function (pos, type, value, out_pos, yaojiNum) {
            for (var i = 0; i < this.peng_card[pos].length; i++) {
                if (this.peng_card[pos][i].pengType == PengType.Peng_AnKang && this.peng_card[pos][i].getValue() == 0) {
                    this.peng_card[pos][i].setValue(type, pos, value, i, out_pos, false, 0,null, yaojiNum);
                    break;
                }
            }
        };
        MJCards.prototype.changeWanGang = function (pos, type, value, yaojiNum, isback) {
            if (isback == undefined) {
                for (var i = 0; i < this.peng_card[pos].length; i++) {
                    if (this.peng_card[pos][i].pengType == PengType.Peng_Kang && this.peng_card[pos][i].getValue() == value) {
                        this.peng_card[pos][i].setValue(type, pos, value, i, this.peng_card[pos][i].out_pos, false, 0,null, yaojiNum);
                        break;
                    }
                }
            } else {
                for (var i = this.peng_card[pos].length; i > 0; i--) {
                    if (this.peng_card[pos][i - 1].pengType == PengType.Peng_Kang && this.peng_card[pos][i - 1].getValue() == value) {
                        this.peng_card[pos][i - 1].setValue(type, pos, value, i - 1, this.peng_card[pos][i - 1].out_pos, false, null,yaojiNum);
                        break;
                    }
                }
            }
        };
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };
    },

    handler_server_end_room_bc: function (data, canDelay) {
        this._super(data, canDelay);
        //房间解散时，如果有结算界面，缩小隐藏
        if (this.getChildByName("RoomMJResultDetail")) {
            var result = this.getChildByName("RoomMJResultDetail");
            result.getChildByName("bg").runAction(cc.scaleTo(0.17, 0));
            result.getChildByName("show").setVisible(true);
            result.getChildByName("layout2").setVisible(false);
        }
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            //花猪放在最右边
            if (av == this._guiCard && bv != this._guiCard)return 1;//幺鸡放在最前边
            if (av != this._guiCard && bv == this._guiCard)return -1;//幺鸡放在最前边

            var lackType = MJModel.lackType;
            if (lackType != -1) {
                var paiSea = parseInt(av / 16);
                var paiSeb = parseInt(bv / 16);
                if (paiSea == lackType && paiSeb != lackType)return -1;
                if (paiSea != lackType && paiSeb == lackType)return 1;
            }

            return bv - av;
        } catch (e) {
            return 0;
        }
    },
    _createWaitLack: function () {
        for (var i = 0; i < 4; i++) {
            if (this._lackDingque[i] == null) {
                if (i == 0) {
                    this._lackDingque[i] = new cc.Sprite();
                } else {
                    this._lackDingque[i] = new cc.Sprite(getResPath("luzhougui/action/waitDingque.png"));
                }
                this._lackDingque[i].setVisible(false);
                this._lackDingque[i].setPosition(this._showLackChangePos(i));
                this.addChild(this._lackDingque[i],1);
            }
        }
    },
    _isShowWaitLack: function (flag) {
        if (flag) {
            for (var i = 0; i < 4; i++) {
                if (this._lackDingque[i]) {
                    this._lackDingque[i].setVisible(true);
                }
            }
        } else {
            for (var i = 0; i < 4; i++) {
                if (this._lackDingque[i]) {
                    if (i == 0) {
                        this._lackDingque[i].setTexture("");
                    } else {
                        this._lackDingque[i].setTexture(getResPath("luzhougui/action/waitDingque.png"));
                    }
                    this._lackDingque[i].setVisible(false);
                }
            }
        }
        if (MJModel.mj_roomType == 1) {
            if (this._lackDingque[2]) {
                this._lackDingque[2].setVisible(false);
            }
        }
    },
    _createWaitchange: function () {
        for (var i = 0; i < 4; i++) {
            if (this._changeCard[i] == null) {
                if (i == 0) {
                    this._changeCard[i] = new cc.Sprite();
                } else {
                    this._changeCard[i] = new cc.Sprite(getResPath("luzhougui/action/waitXuanpai.png"));
                }
                this._changeCard[i].setVisible(false);
                this._changeCard[i].setPosition(this._showLackChangePos(i));
                this.addChild(this._changeCard[i],1);
            }
        }
    },
    _isShowWaitchange: function (flag) {
        if (flag) {
            for (var i = 0; i < 4; i++) {
                if (this._changeCard[i]) {
                    this._changeCard[i].setVisible(true);
                }
            }
        } else {
            for (var i = 0; i < 4; i++) {
                if (this._changeCard[i]) {
                    if (i == 0) {
                        this._changeCard[i].setTexture("");
                    } else {
                        this._changeCard[i].setTexture(getResPath("luzhougui/action/waitXuanpai.png"));
                    }
                    this._changeCard[i].setVisible(false);
                }
            }
        }
        if (MJModel.mj_roomType == 1) {
            if (this._changeCard[2]) {
                this._changeCard[2].setVisible(false);
            }
        }
    },
    //等待定缺，等待换牌，坐标
    _showLackChangePos: function (pos) {
        var size = cc.director.getWinSize();
        var begin = cc.p(0, 0);
        if (MJModel.isOnVideo) {
            if (pos == 0) {
                begin.x = size.width / 2;
                begin.y = 195;
            } else if (pos == 1) {
                begin.x = size.width - 275;
                begin.y = 400;
            } else if (pos == 2) {
                begin.x = size.width / 2;
                begin.y = size.height - 170;
            } else {
                begin.x = 275;
                begin.y = 400;
            }
        } else {
            if (pos == 0) {
                begin.x = size.width / 2;
                begin.y = 195;
            } else if (pos == 1) {
                begin.x = size.width - 260;
                begin.y = 400;
            } else if (pos == 2) {
                begin.x = size.width / 2;
                begin.y = size.height - 145;
            } else {
                begin.x = 255;
                begin.y = 400;
            }
        }
        return begin;
    },
    //杠不立即结算
    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {
    },

    _show_op_effect: function (pos, name) {
        try {
            var begin;
            {
                begin = MJConfig.getOperatorTipPos(pos);

                var armature = null;
                var effect_name = "";
                if (name == "baopai") {
                    effect_name = "effects_mjxxbaopai";
                    ccs.armatureDataManager.addArmatureFileInfo(getResPath("luzhougui/effect/langqi/effects_mjxxbaopai.ExportJson"));
                }
                armature = new ccs.Armature(effect_name);
                if (armature != null) {
                    animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0);

                            armature.setPosition(begin);
                            this.room_Tip.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },

    _show_pahu_card: function (pos, cardValue) {
        var card = new MJCard();
        this._player_hucards[pos].push(card);
        card.setValue(cardValue, pos, CardType.Card_End, 0);
        card.setPosition(MJConfig.getEndCardMoPos(pos));
        card.setStoreColor(cc.color(234, 147, 147));
        this.room_Card.addChild(card, MJConfig.getMoCardOrder(pos));

    },
    _update_paohu_card:function(){
        for (var i = 0; i < this._player_hucards.length; i ++){
            for (var j = 0; j < this._player_hucards[i].length; j ++){
                var card = this._player_hucards[i][j];
                card.reflashUI();
                card.setStoreColor(cc.color(234, 147, 147));
                card.setPosition(MJConfig.getEndCardMoPos(i));
            }
        }

    },
    //设置背景
    getBgStr: function () {
        if ( MJModel.mj_style != "shishang" && MJModel.mj_style != "huaijiu" && MJModel.mj_style != "jingdian"){
            MJModel.mj_style = "shishang";
        }
        return __String.createWithFormat("RoomMJ/bgs/%1_%2.png", MJModel.mj_style, MJModel.mj_table_view);
    },

    updateBg: function (isInit) {
        if (isInit == undefined)isInit = false;
        this._super(isInit);
        if (isInit)return;
        this._update_paohu_card();
    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        this.room_Tip.showTextTip("");
        this.check_tip_operate_card(0, 0);
        var ackBcOpResult = parsePacket("proto.game.luzhouguimj.AckBcLuZhouOpResult", data);
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;
        var yaojiNum = (ackBcOpResult.GuiNum != null) ? ackBcOpResult.GuiNum : 0;
        var scores = ackBcOpResult.Score;
        var yaojiCard = this._guiCard;
        this.handler_gang_scores(scores, OpType, OpType2, canDelay);

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setOperator(-1);
        }

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);

        if ((OpType & ActionType.TYPE_PASS) == ActionType.TYPE_PASS) {
            if (MJModel.isMyPlayer(seatid) && seatid == out_seatid && this.room_Card.isDuoPai(0))//如果是我自己摸的牌  自己过 则放开选牌功能
            {
                this.room_Info.showTime(MJModel.outCardTime);
                MJModel.cur_seat = seatid;
                this.myselfOpenOutCard(true);
            }
            return;
        }

        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & LZActionType.TYPE_BAOPAI) == LZActionType.TYPE_BAOPAI) {
            var player = MJModel.players[seatid];
            var effect = "baopai";
            if (player && canDelay) {
                Sound.getInstance().playEffect(getResPath("RoomMJ/sound/give.mp3"));
                this._show_op_effect(pos, effect);
            }
            this.players[pos].setLiangPaiVisible(true);
            if (MJModel.isMyPlayer(seatid)) {
                MJModel.mj_lockcard_type = 2;
            }
            return;
        }

        var needRemoveOutCard = false;
        var needOpenOutCard = false;
        var car_num = 0;
        cc.log("--yaojiNum----: " + yaojiNum);

        if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
            var pos = MJModel.getPosBySeatid(seatid);
            var zimo = this.room_Card.isDuoPai(pos);
            var player = MJModel.players[seatid];
            var type = 2;
            if (zimo) type = 1;
            this._show_hu_tip(pos, type);
            var qiangganghuType = ackBcOpResult.IsQiangganghu;
            if (qiangganghuType == 1 || OpType2 == HuType.HU_QIANG_GANG) {
                if (player && canDelay) {
                    //没有杠成功
                    var out_card = card;
                    if (this.room_Card.isDuoPai(out_pos)){
                        var result = this.room_Card.removeHandCard(out_pos, card, 1);//多删除一次手牌 防止出错 理乱上抢杠的时候 他的手牌上已经没有这个牌 所以多删除一次也没有bug
                        //手中并没有这张牌 说明是用红中杠的 需要修改碰 把手中的红中放到碰中
                        if (result == false){
                            out_card = this._guiCard;
                            for (var i = 0; i < this.room_Card.peng_card[out_pos].length; i++) {
                                if (this.room_Card.peng_card[out_pos][i].pengType == PengType.Peng_Peng && this.room_Card.peng_card[out_pos][i].getValue() == card && this.room_Card.peng_card[out_pos][i].laiziNums != 3) {
                                    this.room_Card.peng_card[out_pos][i].setValue(PengType.Peng_Peng, out_pos, this.room_Card.peng_card[out_pos][i].getValue(), i, this.room_Card.peng_card[out_pos][i].out_pos, false, 0, this.room_Card.peng_card[out_pos][i].laiziNums + 1);
                                    out_card = card;
                                    break;
                                }
                            }
                            this.room_Card.removeHandCard(out_pos,this._guiCard,1);
                        }
                    }else{
                        //之前已经杠成功了，需要修改杠
                        for (var i = 0; i < this.room_Card.peng_card[out_pos].length; i++) {
                            if (this.room_Card.peng_card[out_pos][i].pengType == PengType.Peng_Kang && this.room_Card.peng_card[out_pos][i].getValue() == card) {
                                //四个都是红中的话 就是抢的红中
                                if (this.room_Card.peng_card[out_pos][i].laiziNums == 4){
                                    out_card = this._guiCard;
                                }
                                this.room_Card.peng_card[out_pos][i].setValue(PengType.Peng_Peng, out_pos, this.room_Card.peng_card[out_pos][i].getValue(), i, this.room_Card.peng_card[out_pos][i].out_pos, false, 0, (out_card == this._guiCard ? this.room_Card.peng_card[out_pos][i].laiziNums - 1 : this.room_Card.peng_card[out_pos][i].laiziNums));
                                break;
                            }
                        }
                    }

                    //避免双抢杠的时候 会出两次牌
                    if (this.room_Card.out_card[out_pos].length == 0 || this.room_Card.out_card[out_pos][this.room_Card.out_card[out_pos].length - 1].getValue() != card) {
                        var hu_Card = this.room_Card.addOutCard(out_pos, out_card);
                        // hu_Card.setStoreColor(cc.color(234, 147, 147));
                    }
                    var effect = "qianggang";
                    this._show_hu_effect(pos, effect);
                    card = out_card;
                }
            }

            if (zimo == 1) {
                //暂时去掉胡牌的时候亮牌这个过程
                //var length = this.room_Card.hand_card[pos].length;
                //if (this.room_Card.hand_card[pos][length - 1].getPositionX() != MJConfig.getMoCardPos(pos).x){
                //    this.room_Card.removeHandCard(pos,ackBcOpResult.Card,1);
                //    this.room_Card.reflashHandCard(pos,true,false);
                //    this.room_Card.initMoCard(pos,ackBcOpResult.Card,false);
                //}
                //
                //this.room_Card.hand_card[pos][length - 1].setValue(ackBcOpResult.Card, pos, CardType.Card_End, length - 1);
            } else {
                //有可能一炮多响 重复删
                if (this.room_Card.out_card[out_pos].length != 0 && this.room_Card.out_card[out_pos][this.room_Card.out_card[out_pos].length - 1].getValue() == card) {
                    this.room_Card.removeOutCard(out_pos, card, false);
                    this.room_Card.setCurCardTip(false);
                }
                this._show_pahu_card(pos, card);
            }
            if (MJModel.isMyPlayer(seatid)){
                this.myselfCloseOutCard();
            }
            if (qiangganghuType == 1 || OpType2 == HuType.HU_QIANG_GANG) {
                return;
            }
        }
        else if ((OpType & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
            car_num = 4 - yaojiNum;
            this.room_Card.addPengCard(pos, PengType.Peng_AnKang, card, out_pos, OpType, null,yaojiNum);
            if (car_num) this.room_Card.removeHandCard(pos, card, car_num);
            if (yaojiNum) this.room_Card.removeHandCard(pos, yaojiCard, yaojiNum);
        }
        else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
            car_num = 2 - yaojiNum;
            this.room_Card.addPengCard(pos, PengType.Peng_Peng, card, out_pos, OpType, null, yaojiNum);
            this.room_Card.removeHandCard(pos, card, car_num);
            this.room_Card.removeHandCard(pos, yaojiCard, yaojiNum);
            needRemoveOutCard = true;
            needOpenOutCard = true;
        }
        else if ((OpType & ActionType.TYPE_ZHIGANG) == ActionType.TYPE_ZHIGANG) {
            car_num = 3 - yaojiNum;
            this.room_Card.addPengCard(pos, PengType.Peng_Kang, card, out_pos, OpType, null,yaojiNum);
            this.room_Card.removeHandCard(pos, card, car_num);
            this.room_Card.removeHandCard(pos, yaojiCard, yaojiNum);
            needRemoveOutCard = true;
        }
        else if ((OpType & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG) {
            var isOK = this.room_Card.changPengCard(pos, PengType.Peng_Kang, card, out_pos, OpType, null,yaojiNum);
            var RemoveYaoji = false;
            for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                var handCard = this.room_Card.hand_card[0][i];
                if (handCard.getValue() == card) {
                    RemoveYaoji = true;
                }
            }
            if (RemoveYaoji) {
                if (isOK) this.room_Card.removeHandCard(pos, card, 1);
            } else {
                if (isOK) this.room_Card.removeHandCard(pos, yaojiCard, 1);
            }

            //抢杠胡 胡的人点过之后 不需要再播一次杠的动画
            if (OpType2 == 2) {
                return;
            }
        } else {
            return;
        }

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            MJModel.isAutoOutCard = false;
            this.room_Card.setAutoOutCard(false);
        }

        if (needRemoveOutCard) {
            MJModel.cur_seat = seatid;
            this.room_Card.removeOutCard(out_pos, card, canDelay);
            this.room_Card.setCurCardTip(false);
        }

        if (needOpenOutCard) {
            this.room_Info.showDirectionTip(pos);
            if (MJModel.isMyPlayer(seatid)) {
                this.myselfOpenOutCard();
            }
        }

        var player = MJModel.players[seatid];
        if (player && canDelay) {

            var effect = "gang";
            if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                var zimo = this.room_Card.isDuoPai(pos);
                effect = "hu";
                if (zimo) {
                    effect = "zimo";
                }

                if (OpType2 == 5 || OpType2 == 11) {
                    effect = "qiangganghu";
                }
            }
            else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                effect = "peng";
            }
            else if ((OpType & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI || (OpType & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI || (OpType & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                effect = "chi";
            }
            this.handler_op_sound(pos, player.sex, OpType, OpType2, effect);
            this.handler_op_effect(pos, out_pos, player.sex, OpType, OpType2);
        }
    },

    _show_hu_effect: function (pos, name) {
        var effect_name = "";
        if (name == "qianggang") {
            effect_name = "effects_mjxqgh";
            ccs.armatureDataManager.addArmatureFileInfo(getResPath("RoomMJ/effect2/qghu/effects_mjxqgh.ExportJson"));
        }
        try {
            if (effect_name != "") {
                var armature = new ccs.Armature(effect_name);
                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0, -1, 0);

                            var begin = MJConfig.getOperatorTipPos(pos);
                            armature.setPosition(begin);
                            armature.setName("hu_effect");
                            this.room_Tip.addChild(armature, 10000);
                        }
                    }
                    armature.runAction(cc.sequence(cc.delayTime(2), cc.removeSelf()));
                }
            }
        } catch (e) {
        }
    },

    _show_hu_tip: function (pos, type, canDelay) {
        if (pos == -1) return;
        var tip_sp = this._all_huType_tip[pos];
        if (tip_sp == null) {
            tip_sp = new ccui.ImageView();
            this._all_huType_tip[pos] = tip_sp;
            this.addChild(tip_sp, 50);
        }
        if (tip_sp) {
            var tip_sp_name = "";
            if (type == 2) {
                tip_sp_name = "luzhougui/tip/ph.png";
            } else if (type == 1) {
                tip_sp_name = "luzhougui/tip/zm.png";
            }
            if (tip_sp_name != "") {
                tip_sp.loadTexture(getResPath(tip_sp_name));
                tip_sp.setVisible(false);
                var begin = MJConfig.getPlayerPos(pos);
                if (pos == 2) {
                    begin.y -= 75;
                } else {
                    begin.y += 80;
                }
                tip_sp.setScale(0.7);
                tip_sp.setPosition(begin);

                var show_hu = cc.callFunc(function () {
                    tip_sp.setVisible(true);
                });
                var dl = 0;
                if (canDelay) {
                    dl = 2.4;
                }
                this.runAction(cc.sequence(cc.delayTime(dl), show_hu));
            }
        }
    },

    _clearAllPaoCard: function () {
        try {
            for (var i = 0; i < 4; i++) {
                for (var j = 0; j < this._allPaoCard[i].length; j++) {
                    this._allPaoCard[i][j].removeFromParent(true);
                }
                this._allPaoCard[i] = [];
            }
        } catch (e) {

        }
    },

    handler_server_operate_notify_bc: function (data, canDelay) {
        var ackOpNotify = parsePacket("proto.game.AckOpNotify", data);
        var seatid = ackOpNotify.ChairID;
        var operat = ackOpNotify.OpType;
        var card = ackOpNotify.Card;

        this._super(data, canDelay);

        if (MJModel.isMyPlayer(seatid)) {
            this._check_tip_operate_card(operat, card);
        }
    },
    handler_server_game_end_bc: function (chengduGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = chengduGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            this.room_Card.hideOutCardBtn();
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                var result = new MJResult_LuZhou();
                result.updateContentView(chengduGameEnd);
                result.setName("reset_remove");
                self.addChild(result, 100000);

                return;
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(1), callback5, cc.delayTime(0), callback2, cc.delayTime(0), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },

    timeEnd: function (dt) {
        if (MJModel.isEnd)return;
        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._gameType;
        var gameType = "泸州鬼麻将·四人玩法";
        if (MJModel.mj_roomType == 1) gameType = "泸州鬼麻将·三人玩法";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        gameType += "·" + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "杠牌次数", "超时次数"];
            //次数
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.GangTimes, recoreInfo.outtime_num];
            if (player && player.uid != -1 && player.uid != 0) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);
        if (has_result) {
            if ((MJModel.mj_roomType == 0 && PlayerNumber != 4) || (MJModel.mj_roomType == 1 && PlayerNumber != 3) || (MJModel.mj_roomType == 2 && PlayerNumber != 2)) {
                ERROR(this, "pId:" + pkgId + "type:" + MJModel.mj_roomType + "num:" + PlayerNumber + "d:" + data);
            }
        }
        this.release();
    },
    _check_tip_operate_card: function (operat, value) {
        try {
            if ((operat & ActionType.TYPE_PENG) == ActionType.TYPE_PENG || (operat & ActionType.TYPE_ZHIGANG) == ActionType.TYPE_ZHIGANG) {
                for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                    var card = this.room_Card.hand_card[0][i];
                    if (card.getValue() == value) {
                        card.setChoiceTipShow(true);
                    }
                }
                return;
            }

            if ((operat & ActionType.TYPE_WANGANG) == ActionType.TYPE_WANGANG || (operat & ActionType.TYPE_ANGANG) == ActionType.TYPE_ANGANG) {
                for (var j = 0; j < MJModel.gang_info.length; j++) {
                    for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                        var card = this.room_Card.hand_card[0][i];
                        if (card.getValue() == MJModel.gang_info[j].curCard) {
                            card.setChoiceTipShow(true);
                        }
                    }
                }
                return;
            }

            for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                var card = this.room_Card.hand_card[0][i];
                card.setChoiceTipShow(false);
            }
        } catch (e) {
            Log(this, e);
        }
    }
    ,
    //定花色点击事件回调
    onPaiSeClick: function (ref) {
        var name = ref.getName();

        var type;
        if (name == "tiaoChoice") {
            type = MJ_TYPE.MJ_TYPE_TIAO;
        } else if (name == "tongChoice") {
            type = MJ_TYPE.MJ_TYPE_TONG;
        } else if (name == "wanChoice") {
            type = MJ_TYPE.MJ_TYPE_WAN;
        }
        sendLackCard(type);
        this.mPaiSeBar.setVisible(false);

    },
    //换牌点击事件回调
    onChangeClick: function (ref) {
        var name = ref.getName();
        var upCards = this.room_Card.getChoiceCards();
        sendChangeCard(upCards);
        this.mChangeBar.setVisible(false);
        MJModel.canChoiceMore = false;
        MJModel.canTouchCard = false;
    },
    myselfCloseOutCard: function () {
        this._super();
        this.room_Card.closeHuaZhuClickOnly();
    },

});
var CHENGDU_Paise = cc.Layer.extend({
    tiaoBtn: null,
    tongBtn: null,
    wanBtn: null,
    goodPaiSe: -1,
    opAnim: null,
    ctor: function () {
        this._super();
        var wsize = cc.director.getWinSize();

        var csize = cc.size(630, 110);

        this.setIgnoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.5, 0));
        this.setContentSize(csize);
        this.setPosition(cc.p(wsize.width / 2, 158));

        ccs.armatureDataManager.addArmatureFileInfo(getResPath("luzhougui/effect/effectsmajtishilizi.ExportJson"));
        this.opAnim = new ccs.Armature("effectsmajtishilizi");
        var animation = this.opAnim.getAnimation();
        if (animation) {
            if (typeof animation.playWithIndex === "function") {
                this.opAnim.setAnchorPoint(cc.p(0.5, 0.5));
                animation.play("effectsmajtishilizi", 0, true);
                this.addChild(this.opAnim);
            }
        }
        this.wanBtn = new ccui.Button(getResPath("luzhougui/action/wan1.png"), getResPath("luzhougui/action/wan2.png"));
        this.wanBtn.setName("wanChoice");
        this.wanBtn.setAnchorPoint(cc.p(0, 0));
        this.wanBtn.setPosition(cc.p(0, 0));
        this.addChild(this.wanBtn);

        this.tiaoBtn = new ccui.Button(getResPath("luzhougui/action/tiao1.png"), getResPath("luzhougui/action/tiao2.png"));
        this.tiaoBtn.setName("tiaoChoice");
        this.tiaoBtn.setAnchorPoint(cc.p(0, 0));
        this.tiaoBtn.setPosition(cc.p(csize.width / 2 - (this.tiaoBtn.getContentSize()).width / 2, 0));
        this.addChild(this.tiaoBtn);

        this.tongBtn = new ccui.Button(getResPath("luzhougui/action/tong1.png"), getResPath("luzhougui/action/tong2.png"));
        this.tongBtn.setName("tongChoice");
        this.tongBtn.setAnchorPoint(cc.p(0, 0));
        this.tongBtn.setPosition(cc.p(csize.width - (this.tongBtn.getContentSize()).width, 0));
        this.addChild(this.tongBtn);
    },
    setGoodPaiSe: function (goodPaiSe) {
        this.goodPaiSe = goodPaiSe;
        cc.log("goodPaiSe : " + goodPaiSe);

        var temp = null;

        if (goodPaiSe == MJ_TYPE.MJ_TYPE_TIAO) {
            temp = this.tiaoBtn;
        } else if (goodPaiSe == MJ_TYPE.MJ_TYPE_TONG) {
            temp = this.tongBtn;
        } else if (goodPaiSe == MJ_TYPE.MJ_TYPE_WAN) {
            temp = this.wanBtn;
        }

        if (temp) {
            var point = temp.getPosition();
            var size = temp.getContentSize();
            this.opAnim.setVisible(true);
            this.opAnim.setPosition(cc.p(point.x + size.width / 2 + 10, point.y + size.height / 2));
        } else {
            this.opAnim.setVisible(false);
        }

    },
    addClickEventListener: function (callback) {
        this.tiaoBtn.addClickEventListener(callback);
        this.tongBtn.addClickEventListener(callback);
        this.wanBtn.addClickEventListener(callback);
    },
});

var MJChange = cc.Layer.extend({
    cancelChoiceBtn: null,
    sureChoiceBtn: null,
    ctor: function () {
        this._super();
        var wsize = cc.director.getWinSize();

        var csize = cc.size(530, 140);

        this.setIgnoreAnchorPointForPosition(false);
        this.setAnchorPoint(cc.p(0.5, 0));
        this.setContentSize(csize);
        this.setPosition(cc.p(wsize.width / 2, 158));

        var tipIvSize = cc.size(450, 45);
        var tipIV = new ccui.ImageView();
        tipIV.loadTexture(getResPath("RoomMJ/text_bg.png"));
        tipIV.setAnchorPoint(cc.p(0.5, 1));
        tipIV.setContentSize(tipIvSize);
        tipIV.ignoreContentAdaptWithSize(false);
        tipIV.setPosition(cc.p(csize.width / 2, csize.height));
        this.addChild(tipIV);

        var tip = new ccui.Text("请选同花色的三张牌进行交换", "", 25);
        tip.setTextColor(cc.color(0xff, 0xff, 0xff, 255));
        tip.setAnchorPoint(cc.p(0.5, 0.5));
        tip.setPosition(cc.p(tipIvSize.width / 2, tipIvSize.height / 2));
        tipIV.addChild(tip);


        // this.cancelChoiceBtn = new ccui.Button(getResPath("sichuanmj/scmj/cancel_choice1.png"), getResPath("sichuanmj/scmj/cancel_choice2.png"));
        // this.cancelChoiceBtn.setName("cancelChoice");
        // this.cancelChoiceBtn.setAnchorPoint(cc.p(0, 0));
        // this.cancelChoiceBtn.setPosition(cc.p(0, 0));
        // this.addChild(this.cancelChoiceBtn);

        this.sureChoiceBtn = new ccui.Button(getResPath("luzhougui/action/sure_choice1.png"), getResPath("luzhougui/action/sure_choice2.png"), getResPath("luzhougui/action/sure_choice3.png"));
        this.sureChoiceBtn.setEnabled(false);
        this.sureChoiceBtn.setName("sureChoice");
        this.sureChoiceBtn.setAnchorPoint(cc.p(1, 0));
        this.sureChoiceBtn.setPosition(cc.p(csize.width - 140, 0));
        this.addChild(this.sureChoiceBtn);
        cc.log("---this.sureChoiceBtn---: " + this.sureChoiceBtn);
    },
    addClickEventListener: function (callback) {
        //this.cancelChoiceBtn.addClickEventListener(callback);
        this.sureChoiceBtn.addClickEventListener(callback);
    },
});

var sendLackCard = function (v) {
    var packet = createPacket("proto.game.luzhouguimj.ReqChooseLack");
    packet.LackType = v;
    sendPacket(packet, CMD.CLIENT_MJ_CHOOSE_LACKTYPE);
}

var sendChangeCard = function (cardlist) {
    var packet = createPacket("proto.game.luzhouguimj.ReqChangeCard");
    packet.Card = [];
    for (var i in cardlist) {
        cc.log("---cardlist[i]---: " + cardlist[i]);
        packet.Card.push(cardlist[i]);
    }
    sendPacket(packet, CMD.CLIENT_MJ_CHANGE_CARD);
}

var MJResult_LuZhou = MJCommonResult.extend({
    _sort_fun: function (a, b) {
        return a.nums - b.nums;
    },
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        var play_id = [];
        if (MJModel.RoomConfigID.indexOf(1016001) != -1) {
            play_id.push("40颗");
        }
        if (MJModel.RoomConfigID.indexOf(1016002) != -1) {
            play_id.push("80颗");
        }
        if (MJModel.RoomConfigID.indexOf(1017001) != -1) {
            play_id.push("8鬼");
        }
        if (MJModel.RoomConfigID.indexOf(1017002) != -1) {
            play_id.push("12鬼");
        }
        if (MJModel.RoomConfigID.indexOf(1018001) != -1) {
            play_id.push("可点炮");
        }
        if (MJModel.RoomConfigID.indexOf(1018002) != -1) {
            play_id.push("仅自摸");
        }
        if (MJModel.RoomConfigID.indexOf(1019001) != -1) {
            play_id.push("开局定缺");
        }
        if (MJModel.RoomConfigID.indexOf(1019002) != -1) {
            play_id.push("胡牌缺一门");
        }
        if (MJModel.RoomConfigID.indexOf(1020001) != -1) {
            play_id.push("换三张");
        }
        if (MJModel.RoomConfigID.indexOf(1020002) != -1) {
            play_id.push("喜钱");
        }
        if (MJModel.RoomConfigID.indexOf(1020003) != -1) {
            play_id.push("爆叫");
        }
        if (MJModel.RoomConfigID.indexOf(1020004) != -1) {
            play_id.push("5颗起胡");
        }

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id - 1) {
                gameDes += " ";
            }
        }
        var DescStr = new cc.LabelTTF(gameDes, "Thonburi",20);
        DescStr.setAnchorPoint(cc.p(0, 0));
        DescStr.setPosition(cc.p(35, 75));
        //DescStr.setColor(cc.color(21, 45, 53));
        this.addChild(DescStr);

    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd.endinfo;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("luzhougui/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 18;
                    }
                }
            }
        }


        x += 10;
        //查叫，大叫分
        var dajiaoScore = [0,0,0,0];
        for (var i = 0; i < this.shanxiGameEnd.dajiaoinfo.length; i++) {
            dajiaoScore[i] = this.shanxiGameEnd.dajiaoinfo[i].dajiaofenshu;
        }
        //var dajiaoScore = this.shanxiGameEnd.dajiaoinfo[seatid].dajiaofenshu;
        if (dajiaoScore[seatid] != 0 && dajiaoScore) {
            var txt = "查叫分  +";
            if (dajiaoScore[seatid] < 0) {
                txt = "大叫分  ";
            }
            var dajiaofen = new cc.LabelTTF(txt + dajiaoScore[seatid], "Arial", 20);
            dajiaofen.setColor(this.leftColor);
            dajiaofen.setAnchorPoint(cc.p(0, 0));
            dajiaofen.setPosition(cc.p(x, y + 10));
            layer.addChild(dajiaofen);
            x += dajiaofen.getContentSize().width + 10;
        }

        x += 10;
        //爆叫分
        var baojiaoScore = this.shanxiGameEnd.baopai[seatid];
        if (baojiaoScore[seatid] == 1 && baojiaoScore) {
            var txt = "爆叫  +";
            if (baojiaoScore < 0) {
                txt = "爆叫  ";
            }
            var baojiaofen = new cc.LabelTTF(txt + baojiaoScore, "Arial", 20);
            baojiaofen.setColor(this.leftColor);
            baojiaofen.setAnchorPoint(cc.p(0, 0));
            baojiaofen.setPosition(cc.p(x, y + 10));
            layer.addChild(baojiaofen);
            x += baojiaofen.getContentSize().width + 10;
        }

        x += 10;
        //喜钱分
        var xiqianScore = this.shanxiGameEnd.xiqian[seatid];
        if (xiqianScore[seatid] != 0 && xiqianScore) {
            var txt = "喜钱分  +";
            if (xiqianScore < 0) {
                txt = "喜钱分  ";
            }
            var xiqianfen = new cc.LabelTTF(txt + xiqianScore, "Arial", 20);
            xiqianfen.setColor(this.leftColor);
            xiqianfen.setAnchorPoint(cc.p(0, 0));
            xiqianfen.setPosition(cc.p(x, y + 10));
            layer.addChild(xiqianfen);
            x += xiqianfen.getContentSize().width + 10;
        }

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                var add_type =addfan[i].AddType;
                var add_value = addfan[i].AddNum;

                if (AddFanTypeArray.indexOf(add_type) != -1) {
                    var fanType = new cc.LabelTTF(AddFanNameArray[AddFanTypeArray.indexOf(add_type)]+" " + add_value + "番", "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 5;
                }
                //if (add_value) {
                //    var fanValue = new cc.LabelTTF(add_value+"番", "Arial", 20);
                //    fanValue.setColor(this.leftColor);
                //    fanValue.setAnchorPoint(cc.p(0, 0));
                //    fanValue.setPosition(cc.p(x, y + 10));
                //    layer.addChild(fanValue);
                //    x += fanValue.getContentSize().width + 5;
                //}
            }
        }

        //点炮的牌
        var dianpaoCount = 0;

        var dianpaocard =  this.shanxiGameEnd.arrdianpaopai;
        var cards = dianpaocard[seatid].paopai;

        var typeLabel = new cc.LabelTTF("点炮", "Arial", 20);
        typeLabel.setColor(this.leftColor);
        typeLabel.setAnchorPoint(cc.p(0, 0));
        typeLabel.setPosition(cc.p(x, y + 10));
        typeLabel.setVisible(false);
        layer.addChild(typeLabel);
        x += typeLabel.getContentSize().width;

        for (var k = 0; k < cards.length; k++) {
            var smallCard = null;
            var c = Utils.toHex2(cards[k]);
            smallCard = new cc.Sprite(__String.createWithFormat(getResPath("luzhougui/smallCard/%1.png"), c));
            if (smallCard != undefined) {
                typeLabel.setVisible(true);
                smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                smallCard.setPosition(cc.p(x, y));
                layer.addChild(smallCard);
            }
            x += 28;
        }
        return layer;
    },

    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();
        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];
        var width = 0;
        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0 ) scoredes = "" ;
        cc.log("createScoreLayer：" + path);
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.0, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);
        cc.log("createScoreLayer end");


        var fanscore =0;
        if (this.ackGameEnd.faninfo && this.ackGameEnd.faninfo.length > seatid){
            fanscore = this.ackGameEnd.faninfo[seatid].FanNum;
        }
        var fanpath = getResPath("luzhougui/fan_num.png");
        var fanscoreLabel = new cc.LabelAtlas(fanscore + ":" , fanpath, 28, 29, '0');

        fanscoreLabel.setAnchorPoint(cc.p(0.0, 0.5));

        fanscoreLabel.setPosition(cc.p(width, 30));
        fanscoreLabel.setName("fanscoreLabel");
        layer.addChild(fanscoreLabel);


        return layer;
    },


    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "luzhougui/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "luzhougui/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "luzhougui/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "luzhougui/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "luzhougui/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "luzhougui/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "luzhougui/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "明杠";
                break;
            case 4:
                str = "明杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被明杠";
                break;
            case 32:
                str = "被明杠";
                break;
            case 64:
                str = "点杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});

