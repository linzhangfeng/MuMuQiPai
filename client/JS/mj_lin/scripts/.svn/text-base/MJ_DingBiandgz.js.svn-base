loadProtoFile("proto/dingbiandgzgameproto.proto");
loadProtoFile("proto/yulindgzgameproto.proto");
var PackgName = {
    dajushu: 148,
    daquanshu: 149,//202  149，线上157
};
var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_HeiMo: 2,
    Hu_RuanMo: 1,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
};
var AddFanType = {
    14: "清一色",
    16: "碰碰胡",
    17: "平胡",
    22: "抢杠胡",
    24: "杠上开花",
    36: "七对",
    131: "特殊碰碰胡",
    132: "特殊抢杠胡",
    133: "被查大叫",
    134: "查大叫",
    135: "跟牌",
};

var MJTable_DingBianDaGuoZi = MJTable.extend({
    tag: "MJTable_DaGuoZi",
    isRecordShow: false,
    _pkg_id: 0,
    currentplaynum: 1,
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];

            //if (this._pkg_id == 3266 || this._pkg_id == 2356) {//定边打锅子4人
            //    MJModel.mj_roomType = 0;
            //} else if (this._pkg_id == 3267 || this._pkg_id == 2356) {//定边打锅子3人
            //    MJModel.mj_roomType = 1;
            //} else if (this._pkg_id == 3268 || this._pkg_id == 2356) {//定边打锅子2人
            //    MJModel.mj_roomType = 2;
            //}
            MJModel.mj_roomType = 0;
            if (this._pkg_id == 3267 || this._pkg_id == 2356) {
                //    this._pkg_id = PackgName.dajushu;
                //}else{
                this._pkg_id = PackgName.daquanshu;
            }
        } catch (e) {
            Log(this, e);
        }
        MJModel.isDaQuan = true;
        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_style = 1;
        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_gps_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.choiceMoreGang_stlye = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.shareType = 1;
        var size = cc.director.getWinSize();
        this._init_extend();
        this._super();
        var self = this;
        this._setFastChat();
        //this.schedule(this.test, 1.0);
        try {
            var help = this.roomPublic.getChildByName("game_help");
            help.setVisible(false);
        } catch (e) {

        }
        //this._init_public();
    },
    //_init_public: function () {
    //    if (this.roomPublic && this._pkg_id != PackgName.dajushu) {
    //        this.jushu = this.roomPublic.getChildByName("time_label");
    //        this.jushu.setString(__String.createWithFormat("第%1局", 1));
    //    }
    //},
    _set_public: function (curQuan, curQu) {
        if (this._pkg_id == PackgName.dajushu)return;
        this.currentplaynum = curQu;
        MJModel.currentCount = curQu;
        this.roomPublic.updateJuShu();
        //this.jushu = this.roomPublic.getChildByName("time_label");
        //if (this.jushu)this.jushu.setString(__String.createWithFormat("第%1局", curQu));
    },

    _handler_server_quanshu_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.yulindgz.AckUpdateInfo", data);
        if (MJModel.isOnVideo) {
            if (packet.quannums != null && packet.playnums != 0) {
                MJModel.mj_roominfo_type = 1;
            } else {
                MJModel.mj_roominfo_type = 0;
            }
        }
        this._set_public(packet.quannums, packet.playnums);
    },
    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 0) {
            pkg_id = 8;
        } else if (MJModel.mj_roomType == 1) {
            pkg_id = 7;
        } else if (MJModel.mj_roomType == 2) {
            pkg_id = 6;
        }
        return __String.createWithFormat(getResPath("daguozi/flag/pkgid%1.png"), pkg_id);
    },
    test: function (d) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            var packet = {
                "gameend": {
                    "UserCard": [{
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 6, 22, 39],
                        "FixedCardsLen": 0,
                        "stFixedCards": [],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [1, 4, 17, 18, 18, 19, 19, 21, 21, 24, 24, 38, 41],
                        "FixedCardsLen": 0,
                        "stFixedCards": [],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [21, 22, 23, 23, 24, 35, 35, 36, 36, 37, 37, 38, 41],
                        "FixedCardsLen": 0,
                        "stFixedCards": [],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 13,
                        "ChangeableCards": [6, 17, 19, 22, 23, 23, 24, 35, 37, 37, 37, 38, 40],
                        "FixedCardsLen": 0,
                        "stFixedCards": [],
                        "stFenZhangCard": null
                    }],
                    "Score": [0, 0, 0, 0],
                    "EndState": 1,
                    "EndGangInfo": [{"Gang": [], "TotalGangScore": 0}, {"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [],
                        "TotalGangScore": 0
                    }, {"Gang": [], "TotalGangScore": 0}],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 1,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 2,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {"chairid": 3, "SpecialType": 0, "FanNum": 0, "addfan": [], "hucard": 0, "DianPao": []}],
                    "money": [100000, 100000, 100000, 100000],
                    "ts": null,
                    "md5": []
                }, "huscore": [], "genscore": []
            }
            this.handler_server_game_end_bc(packet);
        }
    },
    fastChat5: ["我等的花都谢了", "让我再想想", "我们交个朋友吧", "我有一百种办法胡你", "下次咱们再玩吧", "怎么又断线了", "我要离开一会儿"],
    _setFastChat: function () {
        MJModel.mj_fastChat = this.fastChat5;
    },
    resetGame: function (allClean, isGameStart) {
        if (isGameStart == undefined) {
            isGameStart = false;
        }
        this._super(allClean, isGameStart);
        this._removeAllScoreEffect();
        MJModel.mj_lockcard_type = 0;
        this._isgameending = false;
    },
    _removeAllScoreEffect: function () {
        try {
            while (this.getChildByName("hubeimj_score_effect")) {
                this.removeChildByName("hubeimj_score_effect");
            }
        } catch (e) {

        }
    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.wanbeidingbiandgz.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.wanbeidingbiandgz.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == 4028) {
            this._handler_server_quanshu_bc(jpacket, canDelay);
            return;
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },
    //_gameType_sp: null,
    _setGameType: function () {
        //if (this._gameType_sp == null) {
            MJModel.play_id_str = [];
            //甩字胡不可炮胡
            if (MJModel.RoomConfigID.indexOf(1324001) != -1) {
                MJModel.play_id_str.push("打锅子100分");
            }
            if (MJModel.RoomConfigID.indexOf(1324002) != -1) {
                MJModel.play_id_str.push("打锅子200分");
            }
            if (MJModel.RoomConfigID.indexOf(2022001) != -1) {
                MJModel.play_id_str.push("0个鱼");
            }
            if (MJModel.RoomConfigID.indexOf(2022002) != -1) {
                MJModel.play_id_str.push("1个鱼");
            }
            if (MJModel.RoomConfigID.indexOf(2022003) != -1) {
                MJModel.play_id_str.push("半条鱼");
            }
            if (MJModel.RoomConfigID.indexOf(2022004) != -1) {
                MJModel.play_id_str.push("2个鱼");
            }
            if (MJModel.RoomConfigID.indexOf(2022005) != -1) {
                MJModel.play_id_str.push("1个鱼+1个炸弹");
            }
            if (MJModel.RoomConfigID.indexOf(2023001) != -1) {
                MJModel.play_id_str.push("带风");
            }
            if (MJModel.RoomConfigID.indexOf(2023002) != -1) {
                MJModel.play_id_str.push("投骰子开局");
            }
            //if (MJModel.RoomConfigID.indexOf(2000001) != -1 || MJModel.RoomConfigID.indexOf(2000002) != -1 || MJModel.RoomConfigID.indexOf(2000003) != -1) {
            //    MJModel.play_id_str.push("可少人开局");
            //}

            var gameDes = "";
            for (var i = 0; i < MJModel.play_id_str.length; i++) {
                gameDes += MJModel.play_id_str[i];
                if (i != MJModel.play_id_str.length - 1) {
                    gameDes += ",";
                }
            }
            cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);

            MJModel.ConfigStr = gameDes;
            var size = cc.director.getWinSize();
            var allL = 0;
            var allPlayId = [];
            for (var i = 0; i < MJModel.play_id_str.length; i++) {
                // var _gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("hanchuan/flag/playid%1.png"), play_id[i]));
                var _gameType_sp = new cc.LabelTTF(MJModel.play_id_str[i], "Arial", 22);
                _gameType_sp.setColor(cc.color(0x10, 0x35, 0x38));
                _gameType_sp.setAnchorPoint(cc.p(0.5, 0));
                //MJModel.mj_ui.rootNode.getChildByName("roomConfig").addChild(_gameType_sp, 0);
                allL += _gameType_sp.getContentSize().width + 10;
                allPlayId.push(_gameType_sp);
            }
            var curP = 0;
            for (var i = 0; i < MJModel.play_id_str.length; i++) {
                var _gameType_sp = allPlayId[i];
                _gameType_sp.setPosition(cc.p(size.width / 2 - allL / 2 + curP + _gameType_sp.getContentSize().width / 2, size.height / 2 + 210));
                curP += _gameType_sp.getContentSize().width + 10;
            }

            MJModel.play_id_str.push(MJModel.base_money + "分底");
        //}
    },
    _setGameScore: function () {
        this.removeChildByName("numberScore");
        this.removeChildByName("qizhuangScore");

        var size = cc.director.getWinSize();

        //var p = this._gameType_sp.getPosition();
        //p.x += this._gameType_sp.getContentSize().width / 2;
        //p.y -= this._gameType_sp.getContentSize().height;
        //var buf = "" + Math.abs(MJModel.base_money);
        //var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ/difen/number.png"), 16, 21, '.');
        ////var numberScore = new cc.LabelAtlas(buf, getResPath("RoomMJ2/info2/time_num_2.png"), 20 , 30, '0');
        //numberScore.setName("numberScore");
        //numberScore.setAnchorPoint(cc.p(0.0, 0.0));
        //this.addChild(numberScore);
        //
        //var qizhuangScore = new cc.Sprite(getResPath("RoomMJ/difen/icon.png"));
        //qizhuangScore.setAnchorPoint(cc.p(0.0, 0.0));
        //qizhuangScore.setName("qizhuangScore");
        //this.addChild(qizhuangScore);
        //
        //numberScore.setPosition(cc.p(p.x, p.y + 2));
        //qizhuangScore.setPosition(cc.p(numberScore.getPositionX() + numberScore.getContentSize().width, p.y - 2));
    },
    handler_server_scene_info_uc: function (gamescene, canDelay) {
        var ackGameFree = gamescene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        //if (ackGameFree.RoomConfigID.indexOf(2000001) != -1)MJModel.changMode = 1;
        //if (ackGameFree.RoomConfigID.indexOf(2000002) != -1)MJModel.changMode = 2;
        //if (ackGameFree.RoomConfigID.indexOf(2000003) != -1)MJModel.changMode = 3;
        if (ackGameFree.RoomConfigID.indexOf(1324001) != -1) {
            MJModel.take_in = MJModel.take_in - 100;
        }
        if (ackGameFree.RoomConfigID.indexOf(1324002) != -1) {
            MJModel.take_in = MJModel.take_in - 200;
        }
        this._super(ackGameFree, canDelay);
        this._setGameType();
        this._setGameScore();

        var jushu = 1;
        var quanshu = 1;
        if (gamescene.playnums)jushu = gamescene.playnums;
        if (gamescene.quannums)quanshu = gamescene.quannums;
        this._set_public(quanshu, jushu);
    },

    _init_extend: function () {
        var self_table = this;

        //不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };
        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        //初始化界面
        CommonTotalResult.prototype.initUI = function (gameType, roomId, time, startTime, countSum, count) {
            var size = cc.director.getWinSize();
            this.setContentSize(size);
            this.setAnchorPoint(cc.p(0, 0));
            this.setPosition(cc.p(0, 0));

            this.rootNode.getChildByName("roomName").setString(gameType);
            this.rootNode.getChildByName("roomName").ignoreContentAdaptWithSize(true);

            this.rootNode.getChildByName("roomCode").setString(roomId);
            this.rootNode.getChildByName("roomCode").ignoreContentAdaptWithSize(true);

            this.rootNode.getChildByName("jushu").setString("共" + count + "局");
            this.rootNode.getChildByName("jushu").ignoreContentAdaptWithSize(true);

            this.rootNode.getChildByName("time_begin").setString("开始时间:" + startTime);
            this.rootNode.getChildByName("time_begin").ignoreContentAdaptWithSize(true);

            this.rootNode.getChildByName("time_end").setString("结束时间:" + time);
            this.rootNode.getChildByName("time_end").ignoreContentAdaptWithSize(true);
        };

        MJPublic.prototype.showJuShuTip = function () {
            this.jushu.setString("第" + self_table.currentplaynum + "局" );
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self_table._sortCard(a, b);
        };

        //var super_setSomeCardClickState = MJCards.prototype.setSomeCardClickState;
        //MJCards.prototype.setSomeCardClickState = function () {
        //    super_setSomeCardClickState.call(this);
        //    if (MJModel.mj_lockcard_type == 1) {
        //        var listen_cards = [];
        //        for (var i = 0; i < MJModel.listen_info.length; i++) {
        //            var lsi = MJModel.listen_info[i];
        //            for (var j = 0; j < lsi.HuInfo.length; j++) {
        //                var vi = parseInt(lsi.HuInfo[j].Card / 16);
        //                var vj = parseInt(lsi.HuInfo[j].Card % 16);
        //                if (vi > 2 || vj > 5) {
        //                    listen_cards.push(lsi.OutCard);
        //                    break;
        //                }
        //            }
        //        }
        //
        //        for (var i = 0; i < this.hand_card[0].length; i++) {
        //            var card = this.hand_card[0][i];
        //            if (listen_cards.indexOf(card.getValue()) == -1) {
        //                card.setBlackVis(true);
        //                card.setCardTouchEnable(false);
        //            }
        //        }
        //    }
        //};
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        var effect = "gang";
        if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
            effect = "hu";
        }
        else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
            effect = "peng";
        }
        else if ((OpType & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI || (OpType & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI || (OpType & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
            effect = "chi";
        }
        Sound.getInstance().playEffect(getResPath("RoomMJ/sound/give.mp3"));
        if (MJModel.mj_sound_use == 1 && MJModel.mj_suport_fangyan == 1) {
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("daguozi/sound/operator/sc_%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "man" : "woman", effect));
        } else {
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/operator/%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w", effect));
        }
    },
    myselfCloseOutCard: function () {
        this._super();
        this.room_Card.resetAllCardClickState();
    },

    handler_server_out_card_bc: function (data, canDelay) {
        this._super(data, canDelay);
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var card = userOutCard.Card;
        var da_type = userOutCard.da_type;
        var istinging = false;
        if (da_type && da_type == 1) {
            istinging = true;
        }
        if (istinging) {
            var pos = MJModel.getPosBySeatid(seatId);
            this.players[pos].setLiangPaiVisible(true);
            if (canDelay)this.room_Tip.showOtherEffect(pos, "daguozi/effect/ting/effects_mjxxting.ExportJson", "effects_mjxxting", 1);
            if (MJModel.isMyPlayer(seatId)) {
                MJModel.mj_lockcard_type = 2;
            }
        }

        var can_show_listen_info = true;
        for (var j = 0; j < MJModel.final_listen_info.length; j++) {
            if (MJModel.final_listen_info[j].Card == 255) {
                can_show_listen_info = false;
                break;
            }
        }
        if (MJModel.isMyPlayer(seatId))MJModel.mj_table.removeChildByName("tingpai_layer");
        if (MJModel.final_listen_info.length > 0 && can_show_listen_info && MJModel.isMyPlayer(seatId)) {
            MJModel.mj_listenLayer_autoshow = true;
            var selectLayer = new TingPaiLayer();
            selectLayer.show2(MJModel.final_listen_info);
            selectLayer.setName("tingpai_layer");
            MJModel.mj_table.addChild(selectLayer, 100);//一定要在MJAction下边
        } else {
            cc.eventManager.dispatchCustomEvent("tingpai_info_notice_reflash");
        }
    },

    //handler_server_peng_kang_bc: function (data, canDelay) {
    //    this._super(data, canDelay);
    //    var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
    //    var seatid = ackBcOpResult.ChairID;
    //    if (MJModel.isMyPlayer(seatid)) {
    //        MJModel.mj_table.removeChildByName("tingpai_layer");
    //    } else {
    //        cc.eventManager.dispatchCustomEvent("tingpai_info_notice_reflash");
    //    }
    //},

    gameend_showAllScoreEffect: function (ackGameEnd) {
        this.room_Tip.resetRemove();
        for (var i = 0; i < ackGameEnd.huscore.length; i++) {
            var score = ackGameEnd.huscore[i] + ackGameEnd.genscore[i];
            var pos = MJModel.getPosBySeatid(i);
            var player = MJModel.players[i];
            if (player.uid > 0) {
                this.showScoreEffect(pos, score, true);
                if (pos == 0) {
                    if (score > 0) {
                        Sound.getInstance().playEffect(getResPath("RoomMJ/sound/win.mp3"));
                    } else if (score < 0) {
                        Sound.getInstance().playEffect(getResPath("RoomMJ/sound/loss.mp3"));
                    }
                }
            }
        }
    },

    handler_game_time_over_bc: function (data, canDelay) {
        if(this._isgameending){

        }else {
            MJModel.state = MJ_STATUS.MJ_GAME_FREE;
        }
        this.startTimeEnd();
        // PlatformHelper.showToast("服务器通知房间结束！");
    },

    _isgameending: false,
    handler_server_game_end_bc: function (ackGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            this._isgameending = true;
            //this._super(ackGameEnd.gameend, canDelay);
            var self = this;
            this.room_Card.setAutoOutCard(false);
            this.room_Card.hideOutCardBtn();
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd.gameend);
            });

            var state = ackGameEnd.gameend.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd.gameend);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                // if (state == 1) {
                //     return;
                // }
                var result = new MJResult_DingBian();
                result.setName("hubeimj_score_effect");
                self.addChild(result, 5000000);
                result.updateContentView(ackGameEnd);
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback2, callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(1), callback5, cc.delayTime(0), callback2, cc.delayTime(1), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },
    handler_out_card_sound: function (sex, card) {
        if (MJModel.mj_sound_use == 1 && MJModel.mj_suport_fangyan == 1) {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("daguozi/sound/chupai/sc_%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "man" : "woman", Utils.toHex2(card)));
        } else {
            this._super(sex, card);
        }
    },
    handler_server_game_start_bc: function (data, canDelay) {
        MJModel.roomState = 1;
        this.resetGame(false);
        this.room_Info.setVisible(true);
        if (this.room_Action.actions["yaoqing"]) {
            this.room_Action.actions["yaoqing"].setVisible(false);
        }
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }

        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }

        if (canDelay) this.room_Tip.ShowGameState(1);
        MJModel.state = MJ_STATUS.MJ_GAME_PLAYING;
        var gameStart = parsePacket("proto.game.AckGameStart", data);
        MJModel.banker_seatid = gameStart.ChairID;
        MJModel.mj_public_sz1 = gameStart.TouZiInfo[0];
        MJModel.mj_public_sz2 = gameStart.TouZiInfo[1];
        if (gameStart.totalcount != null && gameStart.totalcount != 0) {
            MJModel.RoomCountSum = gameStart.totalcount;
            MJModel.currentCount = gameStart.currentcount;
            MJModel.mj_roominfo_type = 1;
        } else {
            MJModel.mj_roominfo_type = 0;
        }

        if (canDelay && this.room_Card.isSupportPublicCard() && (MJModel.RoomConfigID.indexOf(2021001) != -1 || MJModel.RoomConfigID.indexOf(2023002) != -1)) {
            var self = this;
            var show_public_card_effect = cc.callFunc(function () {
                self.room_Info.showPublicCardEffect();
            });

            var show_shaizi_effect = cc.callFunc(function () {
                self.room_Info.showShaiZiEffect();
                self.room_Info.showShaiZiEffect2D();
            });

            var init_public_Card = cc.callFunc(function () {
                self.room_Info.resetPublicCard();
                self.room_Card.initPublicCard();
            });

            MJModel.isEnterWait = true;
            var callback2 = cc.callFunc(function () {
                MJModel.isEnterWait = false;
            });
            this.runAction(cc.sequence(show_public_card_effect, cc.delayTime(0.5), show_shaizi_effect, cc.delayTime(0), init_public_Card, cc.delayTime(0), callback2));
        } else {
            this.room_Card.initPublicCard();
        }

        var pos = MJModel.getPosBySeatid(MJModel.banker_seatid);
        var player = this.players[pos];
        if (player) {
            player.setBankerFlag(true);
        }

        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;
        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    isRecordShow: false,
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "定边打锅子";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        cc.director.getRunningScene().addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        //gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "点炮次数", "超时次数"];
            //次数
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.Ex1, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },
});

var MJResult_DingBian = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            //this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            if (this.shanxiGameEnd.huscore && this.shanxiGameEnd.huscore[seatid]) {
                // 胡牌分
                var scoreLayer = this.createScoreLayer2(seatid, this.shanxiGameEnd.huscore[seatid], "胡分");
                scoreLayer.setPosition(cc.p(startX + 870, startY + 40));
                this.bgSpr.addChild(scoreLayer);
            }
            if (this.ackGameEnd.EndState != 1) {
                // 跟分
                var scoreLayer = this.createScoreLayer2(seatid, this.shanxiGameEnd.genscore[seatid], "跟牌");
                scoreLayer.setPosition(cc.p(startX + 1000, startY + 40));
                this.bgSpr.addChild(scoreLayer);
            } else {
                var scoreLayer = this.createScoreLayer2(seatid, 0, "跟牌");
                scoreLayer.setPosition(cc.p(startX + 1000, startY + 40));
                this.bgSpr.addChild(scoreLayer);
            }

            // 杠分
            //var scoreLayer = this.createScoreLayer2(seatid, this.ackGameEnd.EndGangInfo[seatid].TotalGangScore, "杠分");
            //scoreLayer.setPosition(cc.p(startX + 1050, startY + 40));
            //this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },

    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();

        var width = 65;
        var nameLabel = new cc.LabelTTF("总分", "Arial", 32);
        nameLabel.setColor(this.leftColor);
        nameLabel.setAnchorPoint(cc.p(0.5, 0.5));
        nameLabel.setPosition(cc.p(width, 40));
        layer.addChild(nameLabel);

        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];

        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.5, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },

    createScoreLayer2: function (seatid, score, text) {
        var layer = new cc.Layer();

        var width = 0;
        var nameLabel = new cc.LabelTTF(text, "Arial", 32);
        nameLabel.setColor(this.leftColor);
        nameLabel.setAnchorPoint(cc.p(0.5, 0.5));
        nameLabel.setPosition(cc.p(width, 40));
        layer.addChild(nameLabel);

        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.5, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        //if (Math.abs(score) >= 10000) {
        scoreLabel.setScale(0.8);
        //}
        return layer;
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("daguozi/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }

        //下鱼
        x += 10;
        //if (this.ackGameEnd.faninfo[seatid].hucard && this.ackGameEnd.faninfo[seatid].hucard != 255) {
        var xiaoyuscore = 0;
        if (MJModel.RoomConfigID.indexOf(2022002) != -1) {
            xiaoyuscore = "1个鱼";
        }
        if (MJModel.RoomConfigID.indexOf(2022004) != -1) {
            xiaoyuscore = "2个鱼";
        }
        if (MJModel.RoomConfigID.indexOf(2022003) != -1) {
            xiaoyuscore = "半条鱼";
        }
        if (MJModel.RoomConfigID.indexOf(2022005) != -1) {
            xiaoyuscore = "1个鱼+1个炸弹";
        }
        var xiaoyufen = new cc.LabelTTF(xiaoyuscore, "Arial", 20);
        xiaoyufen.setColor(this.leftColor);
        xiaoyufen.setAnchorPoint(cc.p(0, 0));
        xiaoyufen.setPosition(cc.p(x, y + 10));
        layer.addChild(xiaoyufen);
        x += xiaoyufen.getContentSize().width + 10;
        //}

        x += 10;
        //杠牌分
        var gangScore = this.ackGameEnd.EndGangInfo[seatid].TotalGangScore;
        cc.log("ningjiebiaogangScore" + gangScore);
        if (gangScore) {
            var txt = "杠牌分 +";
            if (gangScore < 0) {
                txt = "杠牌分 ";
            }
            var gangfen = new cc.LabelTTF(txt + gangScore, "Arial", 20);
            gangfen.setColor(this.leftColor);
            gangfen.setAnchorPoint(cc.p(0, 0));
            gangfen.setPosition(cc.p(x, y + 10));
            layer.addChild(gangfen);
            x += gangfen.getContentSize().width + 10;
        }

        x += 10;
        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        var str = MJModel.ConfigStr;
        var size = cc.director.getWinSize();
        var _gameType_sp = new cc.LabelTTF(str, "Arial", 23);
        _gameType_sp.setColor(cc.color("#A3BD4F"));
        _gameType_sp.setAnchorPoint(cc.p(0.5, 0.5));
        _gameType_sp.setPosition(cc.p(size.width / 7, 50));
        this.addChild(_gameType_sp);
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5抢杠胡 6被抢杠 7一炮多响
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "daguozi/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "daguozi/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "daguozi/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "daguozi/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "daguozi/result-detail/result_detail_qiangganghu.png";
                    break;
                case 6:
                    path = "daguozi/result-detail/result_detail_beiqianggang.png";
                    break;
                case 7:
                    path = "daguozi/result-detail/result_detail_dianpao.png";
                    break;
                default:
                    break;
                //cc.log("SpecialTypeningjiebiao" + fanInfo.SpecialType);
            }
            if (fanInfo.SpecialType == HuType.HU_GANG_SHANG_HUA) {
                path = "daguozi/result-detail/result_detail_hangkaihua.png";
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "弯杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被弯杠";
                break;
            case 32:
                str = "被放杠";
                break;
            case 64:
                str = "放杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
});
