loadProtoFile("proto/jianligameproto.proto");
var SHANXI_SERVER_CMD = {
    SERVER_SHANXI_START_PAOZI: 6113,
    SERVER_SHANXI_USER_XIAPAOZI_DONE: 6114,
    SERVER_SHANXI_USER_XIAPAOZI_AllDONE: 6117,
    SERVER_SHANXI_CLIENT_LAIZIPAI: 5078,
}
var MJPao = cc.Layer.extend(
    {
        _allpao: [],
        ctor: function () {
            this._super();
            this.initPao();
        },
        initPao: function () {
            var size = cc.director.getWinSize();
            var dx = 172;
            var by = 206;
            var bx = size.width / 2 - 2 * dx;
            for (var i = 0; i < 4; i++) {
                var pao = new ccui.Button(getResPath("jianlimj/zeng/btn_ge_" + i + "_1.png"), getResPath("jianlimj/zeng/btn_ge_" + i + "_2.png"));
                pao.setPosition(cc.p(bx + dx * i, by));
                pao.setTag(i);
                this.addChild(pao);
                this._allpao[i] = pao;
            }
        },
        addClickEventListener: function (callback) {
            this._allpao[0].addClickEventListener(callback);
            this._allpao[1].addClickEventListener(callback);
            this._allpao[2].addClickEventListener(callback);
            this._allpao[3].addClickEventListener(callback);
        }
    });


var MJTable_jianli = MJTable.extend({

    mPaoBar: null,
    isRecordShow: false,
    _allBeiShu: [null, null, null, null],
    _curLaizi_bg: null,
    _curLaizi: 0,
    _isgang: false,
    gameDes: "",
    _pkgid: 0,
    zengNum:0,
    ctor: function () {
        this._super();
    },

    initRoom: function () {
        this._init_extend();

        MJModel.mj_bg_use = 1;
        MJModel.mj_suport_change_bg = 0;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        //MJModel.mj_public_style = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.mj_chat_style = 1;
        MJModel.mj_public_style = 1;
        MJModel.mj_chat_style = 5;
        MJModel.mj_touch_tip = 1;

        MJModel.mj_suport_fangyan = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;
        MJModel.mj_suport_fangyan = 0;
        MJModel.shareType = 1;

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 2298 ||this._pkg_id == 2286 ) {
                MJModel.mj_roomType = 1;
            }

        } catch (e) {
            Log(this, e);
        }
        try {
            if (!MJModel.isOnVideo) {
                var game_help = this.roomPublic.getChildByName("game_help");
                if (game_help !== null) {
                    game_help.setVisible(false);
                }
            }
        } catch (e) {

        }
        this._super();
        MJModel.mj_paiban = "horizontal";
        var self = this;
        this.mPaoBar = new MJPao();
        this.mPaoBar.setVisible(false);
        this.mPaoBar.addClickEventListener(function (node) {
            self.onPaoClick(node);
        });
        this.addChild(this.mPaoBar);
    },

    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            this._curLaizi = 65;
            var packet = {
                "gameend": {
                    "UserCard": [{
                        "ChangeableCardsLen": 8,
                        "ChangeableCards": [5, 6, 65, 38, 38, 38, 39, 40, 65],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 33, "state": 65540, "chairID": 3, "LaiziNum": 1}, {
                            "CardData": 1,
                            "state": 65537,
                            "chairID": 3,
                            "LaiziNum": 1
                        }]
                    }, {
                        "ChangeableCardsLen": 8,
                        "ChangeableCards": [17, 17, 17, 22, 65, 24, 25, 65],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 20, "state": 1, "chairID": 3, "LaiziNum": 0}, {
                            "CardData": 21,
                            "state": 65540,
                            "chairID": 0,
                            "LaiziNum": 1
                        }]
                    }, {
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [1, 2, 3, 3, 4, 5, 8],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{"CardData": 24, "state": 65537, "chairID": 0, "LaiziNum": 1}, {
                            "CardData": 18,
                            "state": 1,
                            "chairID": 0,
                            "LaiziNum": 0
                        }]
                    }, {
                        "ChangeableCardsLen": 5,
                        "ChangeableCards": [2, 4, 6, 6, 65],
                        "FixedCardsLen": 3,
                        "stFixedCards": [{"CardData": 7, "state": 65544, "chairID": 3, "LaiziNum": 1}, {
                            "CardData": 37,
                            "state": 1,
                            "chairID": 1,
                            "LaiziNum": 0
                        }, {"CardData": 34, "state": 1, "chairID": 0, "LaiziNum": 0}]
                    }],
                    "Score": [-40, 75, -50, 15],
                    "EndState": 0,
                    "EndGangInfo": [],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 1,
                        "FanNum": 1,
                        "addfan": [{"AddType": 58, "AddNum": 1, "AddType2": 1}],
                        "hucard": 40,
                        "DianPao": []
                    }, {
                        "chairid": 1,
                        "SpecialType": 1,
                        "FanNum": 4,
                        "addfan": [{"AddType": 61, "AddNum": 4, "AddType2": 1}],
                        "hucard": 65,
                        "DianPao": []
                    }, {
                        "chairid": 2,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0,
                        "DianPao": []
                    }, {
                        "chairid": 3,
                        "SpecialType": 1,
                        "FanNum": 1,
                        "addfan": [{"AddType": 58, "AddNum": 1, "AddType2": 1}],
                        "hucard": 65,
                        "DianPao": []
                    }],
                    "money": [99960, 100075, 99950, 100015]
                },
                "baopai": [0, 0, 0, 0],
                "huorder": [3, 2, 255, 1],
                "dajiaoinfo": [],
                "xiqian": [0, 0, 0, 0],
                "arrdianpaopai": [{"paopai": []}, {"paopai": []}, {"paopai": []}, {"paopai": []}]
            };
            this.handler_server_game_end_bc(packet, true);
        }
    },

    handler_server_game_end_bc: function (shanxiGameEnd, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = shanxiGameEnd.gameend;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();

            var callback0 = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var callback2 = cc.callFunc(function () {
                if (state == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
                else {
                }
            });

            var callback4 = cc.callFunc(function () {
                self.room_Tip.reset();
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var callback5 = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var callback3 = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new MJResult_JianLi();
                    result.updateContentView(shanxiGameEnd);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.room_Action.setReady2Visible(true);
                }
            });

            if (MJModel.isOnVideo) {
                if (canDelay) {
                    this.runAction(cc.sequence(callback4, cc.delayTime(1), callback5, cc.delayTime(2), callback3));
                } else {
                    this.runAction(cc.sequence(callback5, cc.delayTime(2), callback3));
                }
                return;
            }

            this.runAction(cc.sequence(cc.delayTime(0), callback0, cc.delayTime(0), callback4, cc.delayTime(0), callback5, cc.delayTime(0.5), callback2, cc.delayTime(0.5), callback3));
        } catch (e) {
            ERROR(this, e);
        }
    },
    _init_extend: function () {
        var self = this;
        MJCard.prototype.check_addFlag = function () {
            self._checkAddCardFlag(this);
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(false);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言1");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        Setting.prototype.showPaiBanView = function (is) {
            is = false;
            this._gameSettingLayer.getChildByName("light_title").setVisible(is);
            this.checkboxs_gamesetting["paiban_horizontal"].setVisible(is);
            this.checkboxs_gamesetting["paiban_vertical"].setVisible(is);
        };

        //湖北麻将不要自动胡牌功能
        MJAction.prototype.setAutoOutCardVis = function (value) {
        };

        var superOutMyCard = MJCards.prototype.outMyCard;
        MJCards.prototype.outMyCard = function (card) {
            if (self._isHuaPai(card.getValue())) {
                if (card) {
                    if (this.outCardBtn) this.outCardBtn.setVisible(false);
                }
                return;
            }
            superOutMyCard.call(this, card);
            cc.log("outMyCard:" + MJModel.SpeedTime);
            //if (MJModel.SpeedTime == 1)this.outMyCard1(card);
            //if (MJModel.SpeedTime == 2)this.outMyCard2(card);
            //if (MJModel.SpeedTime == 3)this.outMyCard3(card);
        };

        var superaddOutCard = MJCards.prototype.addOutCard;
        MJCards.prototype.addOutCard = function (pos, value) {
            if (self._isHuaPai(value)) {
                this.addHuCard(pos, value);
            } else {
                var card = superaddOutCard.call(this, pos, value);
                return card;
            }
        };

        MJCards.prototype.sortCard = function (a, b) {
            return self._sortCard(a, b);
        };

    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        //
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.jianlimj.tagCurGameScence", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.jianlimj.AckCurGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == SHANXI_SERVER_CMD.SERVER_SHANXI_START_PAOZI) {
            this._handler_server_start_piao(jpacket, canDelay);
            return;
        }
        if (cmd == SHANXI_SERVER_CMD.SERVER_SHANXI_USER_XIAPAOZI_DONE) {
            this._handler_server_piaoOk(jpacket, canDelay);
            return;
        }
        if (cmd == SHANXI_SERVER_CMD.SERVER_SHANXI_USER_XIAPAOZI_AllDONE) {
            this._handler_server_AllpiaoOk(jpacket, canDelay);
            return;
        }
        if (cmd == SHANXI_SERVER_CMD.SERVER_SHANXI_CLIENT_LAIZIPAI) {
            //this.handler_server_get_guipai(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
        }
        if (cmd == CMD.SERVER_CHANGE_CARD) {
            //补花
            this.handler_server_buhua_bc(jpacket, canDelay);
            return;
        }
        this._super(cmd, jpacket, canDelay, svrid);
    },
    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },
    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("-_handler_game_record-");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var gameType = "监利麻将(经典玩法)";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }

        for (var i = 0; i < gameRecord.MostWinScoreUser.length; i++) {
            var seatId = gameRecord.MostWinScoreUser[i];
            if (seatId != 255) {
                _winSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var player = MJModel.players[i];
            var arrStr = ["坐庄次数", "胡牌次数", "赢分次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.WinCounts, recoreInfo.outtime_num];

            if (player && player.uid != -1) {
                addX = 39 + (i * 302);
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, _winSeatid[i], _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }

            if (recoreInfo.totalscore != 0) {
                has_result = true;
            }

        }
        bigResult.refresh(PlayerNumber);

        this.release();
    },
    resetGame: function (allClean,isGameStart) {
        this._super(allClean);
        if (isGameStart == undefined ||isGameStart == null)isGameStart = true;
        if (allClean || !isGameStart)this._clearAllScore();
    },

    getMjTypePath: function () {
        var pkg_id = 1;
        if (MJModel.mj_roomType == 1) pkg_id = 2;
        return __String.createWithFormat(getResPath("jianlimj/flag/pkgid%1.png"), pkg_id);

    },

    handler_server_buhua_bc: function (data, canDelay) {
        var userOutCard = parsePacket("proto.game.jianlimj.Hua", data);
        var seatId = userOutCard.chairid;
        var outcard = userOutCard.hua;
        var incard = userOutCard.getcard;
        var pos = MJModel.getPosBySeatid(seatId);

        this.room_Card.removePublicCardByNums(userOutCard.hua.length, false);
        if (canDelay == false) {
            for (var i = 0; i < outcard.length; i++) {
                this.room_Card.addOutCard(pos, outcard[i]);
                this.room_Card.removeHandCard(pos, outcard[i]);
            }
            for (var i = 0; i < incard.length; i++) {
                this.room_Card.addHandCard(pos, incard[i]);
            }
            this.room_Card.reflashHandCard(pos, true, false, true);
            return;
        }

        cc.log("handler_server_buhua_bc:" + pos);
        for (var i = 0; i < outcard.length; i++){
            this.room_Card.addOutCard(pos, outcard[i]);
            if (MJModel.isMyPlayer(seatId) || MJModel.isOnVideo)this.room_Card.removeHandCard(pos, outcard[i]);
        }

        if (MJModel.isMyPlayer(seatId) || MJModel.isOnVideo) {
            for (var i = 0; i < incard.length; i++){
                this.room_Card.initMoCard(pos, incard[i]);
            }
            var mo_card = null;
            if (this.room_Card.isDuoPai(0)) {
                mo_card = this.room_Card.hand_card[0][this.room_Card.hand_card[0].length - 1];
                this.room_Card.hand_card[0].splice(this.room_Card.hand_card[0].length - 1, 1);
            }
            this.room_Card.reflashHandCard(pos,true,false,true);
            if (mo_card) {
                mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                this.room_Card.hand_card[0].push(mo_card);
                MJModel.mj_mo_cards[pos] = mo_card.getValue();
            }
        }
        this._ShowEffect("buhua", pos);
        var player = MJModel.players[seatId];

        this.handler_out_card_sound(player.sex,"buhua" );
        MJModel.isEnterWait = true;
        var self = this;
        var callback = cc.callFunc(function () {
            MJModel.isEnterWait = false;
        });
        this.runAction(cc.sequence(cc.delayTime(1), callback));

    },

    _isHuaPai: function (card) {
        try {
            if(MJModel.RoomConfigID.indexOf(1111001) != -1 && (card == 0x41)){
                return true;

            }else if(MJModel.RoomConfigID.indexOf(1111002) != -1 && (card == 0x41||card == 0x42||card == 0x43)){
                return true;
            }
            else {
                return false;
            }
        } catch (e) {
            return false;
        }

    },

    handler_gang_scores: function (scores, OpType, OpType2, canDelay) {
        if (this._isgang) {
            this._super(scores, OpType, OpType2, canDelay);
        }
    },


    handler_out_card_sound: function (sex, card) {
        if (card=="buhua"){
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/operator/%1_buhua.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w"));
        }
        else{
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("RoomMJ/sound/chupai/%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w", Utils.toHex2(card)));
        }
    },
    //
    handler_op_sound: function (pos, sex, OpType, OpType2, effect) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.mj_sound_use == 1) {

        } else {
            this._super(pos, sex, OpType, OpType2, effect);
        }
    },




    handler_server_scene_info_uc: function (gameScene, canDelay) {
        var ackGameFree = gameScene.GameSence;
        var sceneStatus = ackGameFree.SceneStatus;
        this._super(ackGameFree, canDelay);
        this._setGameType();
        this.mPaoBar.setVisible(false);
        if (gameScene.ispaotouing == false) {
            for (var i = 0; i < gameScene.Userpaotou.length; i++) {
                var piao = gameScene.Userpaotou[i];
                var pos = MJModel.getPosBySeatid(i);
                if (piao != -1 && piao != 255) {
                    this._setScore(pos, piao)
                }
                ;
            }
        }else{
            MJModel.roomState = 1;
            this.resetGame(false);
            this.room_Info.setVisible(true);
        }
        for (var i = 0; i < gameScene.ispaotouok.length; i++) {
            var pos = MJModel.getPosBySeatid(i);
            if (gameScene.ispaotouing && pos == 0 && gameScene.ispaotouok[i] == 0) {
                this.mPaoBar.setVisible(true);
            }
        }


    },
    handler_server_peng_kang_bc: function (data, canDelay) {
        this._super(data, canDelay);
        try {
            var hasHua = false;
            for (var i = 0; i < this.room_Card.hand_card[0].length; i++) {
                if (this._isHuaPai(this.room_Card.hand_card[0][i].getValue())) {
                    hasHua = true;
                    break;
                }
            }
            if (hasHua) {
                MJModel.isEnterWait = true;
                var out_card_over = cc.callFunc(function () {
                    MJModel.isEnterWait = false;
                });

                this.runAction(cc.sequence(cc.delayTime(1), out_card_over));
            }
        } catch (e) {

        }
    },
    _ShowEffect: function (name, pos) {
        try {
            var begin = MJConfig.getOperatorTipPos(pos);
            var armature = null;
            var effect_name = "";
            if (name == "buhua") {
                effect_name = "effects_mjxxbuhuax";
                ccs.armatureDataManager.addArmatureFileInfo(getResPath("jianlimj/effect/buhua/effects_mjxxbuhuax.ExportJson"));
            }
            armature = new ccs.Armature(effect_name);
            if (armature != null) {
                var animation = armature.getAnimation();
                if (animation) {
                    if (typeof animation.playWithIndex === "function") {
                        animation.playWithIndex(0);

                        armature.setPosition(begin);
                        this.room_Tip.addChild(armature, 10000);
                    }
                }
                armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
            }
            // Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
        } catch (e) {
            Log(this, e);
        }
    },

    _setGameType: function () {
        //监利麻将
        if (this._gameType_sp == null) {
            //var pkg_id = 1;
            //if (this._pkg_id == 2298 ||this._pkg_id == 2286 ) {
            //    pkg_id = 2;
            //}
            var play_id = [];
            if (MJModel.RoomConfigID.indexOf(1111001) != -1) {
                play_id.push("红中");
            }
            if (MJModel.RoomConfigID.indexOf(1111002) != -1) {
                play_id.push("中发白");
            }
            if (MJModel.RoomConfigID.indexOf(1112001) != -1) {
                play_id.push("自摸胡");
            }
            if (MJModel.RoomConfigID.indexOf(1112002) != -1) {
                play_id.push("点炮胡");
            }
            if (MJModel.RoomConfigID.indexOf(1113001) != -1) {
                play_id.push("坑庄");
            }
            if (MJModel.RoomConfigID.indexOf(1113002) != -1) {
                play_id.push("坑增");
            }
            if (MJModel.RoomConfigID.indexOf(1113003) != -1) {
                play_id.push("加增");
            }
            if (MJModel.RoomConfigID.indexOf(1114001) != -1) {
                play_id.push("增1分");
            }
            if (MJModel.RoomConfigID.indexOf(1114002) != -1) {
                play_id.push("增2分");
            }
            if (MJModel.RoomConfigID.indexOf(1114003) != -1) {
                play_id.push("增3分");
            }
            if (MJModel.RoomConfigID.indexOf(1115001) != -1) {
                play_id.push("条筒万");
            }
            if (MJModel.RoomConfigID.indexOf(1115002) != -1) {
                play_id.push("条筒");
            }
            if (MJModel.RoomConfigID.indexOf(1116001) != -1) {
                play_id.push("1分");
            }
            if (MJModel.RoomConfigID.indexOf(1116002) != -1) {
                play_id.push("2分");
            }
            if (MJModel.RoomConfigID.indexOf(1116003) != -1) {
                play_id.push("5分");
            }

        //var size = cc.director.getWinSize();
        //this._gameType_sp = new cc.Sprite(__String.createWithFormat(getResPath("jianlimj/flag/pkgid%1.png"), pkg_id));
        //this._gameType_sp.setAnchorPoint(cc.p(0.5, 1));
        //// this._gameType_sp.setPosition(cc.p(size.width / 2, size.height / 2 + (MJModel.play_id_str.length > 0 ? 240 - 0 : 240)));
        //this._gameType_sp.setPosition(cc.p(MJConfig.getInfoPos().x, MJConfig.getInfoPos().y + 180));
        //this.addChild(this._gameType_sp);

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id - 1) {
                gameDes += " ";
            }
        }

        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
    }

    },

    _showHandcardFlag: function (isEndShow) {
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },
    _checkAddCardFlag: function (card) {
        try {
            if (card.pos != 0)return;
            if (card.value == 0)return;
            if (card.type != CardType.Card_Hand && card.type != CardType.Card_End) return;
            var isEnd = (card.type == CardType.Card_End);
            card.removeChildByName("hubei_flag");
            var flag = null;
            if (card.getValue() == this._curLaizi) {
                flag = new cc.Sprite(getResPath("jianlimj/lai_flag.png"));
            }
            if (flag) {
                flag.setAnchorPoint(cc.p(0, 0));
                flag.setPosition(cc.p(2, isEnd ? 30 : 3));
                flag.setName("hubei_flag");
                card.addChild(flag);
            }
        } catch (e) {
            cc.log("_checkAddCardFlag",e);
        }
    },
    _handler_server_start_piao: function (data, canDelay) {
        var piaoInfo = parsePacket("proto.game.jianlimj.AckStartPaoTou", data);
        MJModel.roomState = 1;
        this.resetGame(false);
        this.room_Info.setVisible(true);
        JsUtils.postNotifi("notify_game_check_end");//为了刷新局数 或者  开始倒计时
        cc.eventManager.dispatchCustomEvent("hide_copy_room");
        if (this.room_Action.actions["yaoqing"]) {
            this.room_Action.actions["yaoqing"].setVisible(false);
        }
        if (this.room_Action.actions["copyshare"]) {
            this.room_Action.actions["copyshare"].setVisible(false);
        }

        if (this.pre_scene) {
            this.pre_scene.removeFromParent(true);
            this.pre_scene = null;
        }

        this.room_Info.showTime(1);
        if (MJModel.seatid != -1 && canDelay) {
            this.mPaoBar.setVisible(true);
        }
    },
    _handler_server_piaoOk: function (data, canDelay) {
        var broadPiao = parsePacket("proto.game.jianlimj.AckBroadPaoTou", data);
        var seatId = broadPiao.chairid;
        //var pao_nums = broadPiao.UserPaoTou;
        var pos = MJModel.getPosBySeatid(seatId);
        this._setScore(pos);
        if (MJModel.isOnVideo && pos == 0) {
            if (canDelay) this.mPaoBar.setVisible(false);
        }
    },
    _handler_server_AllpiaoOk: function (data, canDelay) {
        var PaoNum = parsePacket("proto.game.jianlimj.AckBroadPaoTouDone", data);
        for (var i = 0; i < PaoNum.paotounum.length; i++) {
            var piao = PaoNum.paotounum[i];
            var pos = MJModel.getPosBySeatid(i);
            if (piao != -1 && piao != 255) {
                this._setScore(pos, piao)
            }

        }
    },
    handler_server_game_start_bc2: function (data, canDelay) {
        this._super(data, canDelay);
        if (MJModel.seatid != -1 && canDelay) {
            this.mPaoBar.setVisible(false);
        }
    },
    _clearAllScore: function () {
        try {
            for (var i = 0; i < this._allBeiShu.length; i++) {
                var iscore = this._allBeiShu[i];
                if (iscore) {
                    iscore.setVisible(false);
                }
            }
        } catch (e) {

        }
    },
    _setScore: function (pos, score) {
        if (score == null)return;
        try {
            var iscore = this._allBeiShu[pos];
            if (iscore == null) {
                var bei = new cc.Sprite(getResPath("jianlimj/zeng/flag_ge_"+score+".png"));
                var ppos = MJConfig.getPlayerPos(pos);
                bei.setPosition(cc.p(pos == 2 ? ppos.x + 65 : ppos.x, pos == 2 ? ppos.y+30: ppos.y + 65));
                this.addChild(bei);
                this._allBeiShu[pos] = bei;
            } else {
                if (score != -1) {
                    if (iscore){
                        iscore.setTexture(getResPath("jianlimj/zeng/flag_ge_" + score + ".png"));
                        iscore.setVisible(true);
                    }
                }
                else{
                    iscore.setVisible(false);
                }
            }
        } catch (e) {
        }
    },
    _sortCard: function (a, b) {
        try {
            var av = a;
            var bv = b;
            if (typeof a === "object") av = a.getValue();
            if (typeof b === "object") bv = b.getValue();
            if (av == this._curLaizi && bv != this._curLaizi)return 1;//赖子放在最前边
            if (av != this._curLaizi && bv == this._curLaizi)return -1;//赖子放在最前边
            return bv - av;
        } catch (e) {
            return 0;
        }
    },

    onPaoClick: function (ref) {
        var nums = ref.getTag();
        if (this.mPaoBar) {
            this.mPaoBar.setVisible(false);
        }
        sendPaoNums(nums);
    },
    _ResultAddHandCardFlag: function (card) {
        try {
            card.removeChildByName("hubei_flag2");
            var flag = null;
            if (card.getValue() == this._curLaizi) {
                flag = new cc.Sprite(getResPath("jianlimj/lai_flag.png"));
            }
            if (flag) {
                flag.setAnchorPoint(cc.p(0, 0));
                flag.setPosition(cc.p(10, 30));
                flag.setName("hubei_flag2");
                card.addChild(flag);
            }
        } catch (e) {

        }
    },
});

var SX_CLIENT_CMD = {
    CLIENT_MJ_CHOOSE_PIAO: 1113,
};

var sendPaoNums = function (v) {
    var packet = createPacket("proto.game.jianlimj.ReqChoosePaoTou");
    packet.paotounum = v;
    sendPacket(packet, SX_CLIENT_CMD.CLIENT_MJ_CHOOSE_PIAO);
};

var AddFanType = {
    77: "胡258",
    78: "将258",
    14: "清一色",
    17: "平胡",
    36: "七对",
};

var MJResult_JianLi = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.gameend;
        this.shanxiGameEnd = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }

        var play_id = [];
        if (MJModel.RoomConfigID.indexOf(1111001) != -1) {
            play_id.push("红中");
        }
        if (MJModel.RoomConfigID.indexOf(1111002) != -1) {
            play_id.push("中发白");
        }
        if (MJModel.RoomConfigID.indexOf(1112001) != -1) {
            play_id.push("自摸胡");
        }
        if (MJModel.RoomConfigID.indexOf(1112002) != -1) {
            play_id.push("点炮胡");
        }
        if (MJModel.RoomConfigID.indexOf(1113001) != -1) {
            play_id.push("坑庄");
        }
        if (MJModel.RoomConfigID.indexOf(1113002) != -1) {
            play_id.push("坑增");
        }
        if (MJModel.RoomConfigID.indexOf(1113003) != -1) {
            play_id.push("加增");
        }
        if (MJModel.RoomConfigID.indexOf(1114001) != -1) {
            play_id.push("增1分");
        }
        if (MJModel.RoomConfigID.indexOf(1114002) != -1) {
            play_id.push("增2分");
        }
        if (MJModel.RoomConfigID.indexOf(1114003) != -1) {
            play_id.push("增3分");
        }
        if (MJModel.RoomConfigID.indexOf(1116001) != -1) {
            play_id.push("1分");
        }
        if (MJModel.RoomConfigID.indexOf(1116002) != -1) {
            play_id.push("2分");
        }
        if (MJModel.RoomConfigID.indexOf(1116003) != -1) {
            play_id.push("5分");
        }

        var gameDes = "";
        for (var i = 0; i < play_id.length; i++) {
            gameDes += play_id[i];
            if (i != play_id - 1) {
                gameDes += " ";
            }
        }
        var DescStr = new cc.LabelTTF(gameDes, "Thonburi",18);
        DescStr.setAnchorPoint(cc.p(0, 0));
        DescStr.setPosition(cc.p(35, 75));
        //DescStr.setColor(cc.color(21, 45, 53));
        this.addChild(DescStr);

        //房间号 局数
        //if (!MJModel.isOnVideo) {
        //    var roomId = MJModel.roomData["gameRoom"]["code"];
        //    var roomIdTxt = new cc.LabelTTF("房间号: " + roomId, "Arial", 18);
        //    roomIdTxt.setColor(this.leftColor);
        //    roomIdTxt.setAnchorPoint(cc.p(0, 0));
        //    roomIdTxt.setPosition(cc.p(35, 40));
        //    this.addChild(roomIdTxt);
        //
        //    var jushu = MJModel.currentCount;
        //    var jushuTxt = new cc.LabelTTF("局数: " + jushu + " / " + MJModel.RoomCountSum, "Arial", 18);
        //    jushuTxt.setColor(this.leftColor);
        //    jushuTxt.setAnchorPoint(cc.p(0, 0));
        //    jushuTxt.setPosition(cc.p(35, 15));
        //    this.addChild(jushuTxt);
        //}
    },

    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;
        var sxendInfo = this.shanxiGameEnd;
        //庄家加倍
        //if (MJModel.banker_seatid == seatid) {
        //    var str = "[庄家加倍]";
        //    var banker = new cc.LabelTTF(str, "Arial", 20);
        //    banker.setColor(this.leftColor);
        //    banker.setAnchorPoint(cc.p(0, 0));
        //    banker.setPosition(cc.p(x, y + 10));
        //    layer.addChild(banker);
        //
        //    x += banker.getContentSize().width + 5;
        //}
        //增
        if (sxendInfo.userpaotou[seatid] && sxendInfo.userpaotou.length > seatid) {
            if (sxendInfo.userpaotou[seatid] > 0) {
                var str = this.getPaoTip(sxendInfo.userpaotou[seatid]);
                var pao = new cc.LabelTTF(str, "Arial", 20);
                pao.setColor(this.leftColor);
                pao.setAnchorPoint(cc.p(0, 0));
                pao.setPosition(cc.p(x, y + 10));
                layer.addChild(pao);

                x += pao.getContentSize().width + 5;
            }
        }
        //补花的次数
        if (sxendInfo.num[seatid] && sxendInfo.num.length > seatid) {
            if (sxendInfo.num[seatid] > 0) {
                var str = this.getHuaTip(sxendInfo.num[seatid]);
                var hua = new cc.LabelTTF(str, "Arial", 20);
                hua.setColor(this.leftColor);
                hua.setAnchorPoint(cc.p(0, 0));
                hua.setPosition(cc.p(x, y + 10));
                layer.addChild(hua);

                x += hua.getContentSize().width + 5;
            }
        }
        if (this.ackGameEnd.EndGangInfo.length > seatid) {
            var gameEndInfo = this.ackGameEnd.EndGangInfo[seatid];
            var map = {};
            for (var i = 0; i < gameEndInfo.Gang.length; i++) {
                var gang = gameEndInfo.Gang[i];
                if (map[gang.GangType] == undefined) {
                    map[gang.GangType] = [];
                }
                map[gang.GangType].push(gang.GangCard);
            }
            for (var key in map) {
                if (!map.hasOwnProperty(key))continue;
                var a = key;
                var typeLabel = new cc.LabelTTF(this.getStringByType(a), "Arial", 20);
                typeLabel.setColor(this.leftColor);
                typeLabel.setAnchorPoint(cc.p(0, 0));
                typeLabel.setPosition(cc.p(x, y + 10));
                layer.addChild(typeLabel);

                x += typeLabel.getContentSize().width;

                var temp = map[key];
                for (var j = 0; j < temp.length; j++) {
                    var smallCard = null;
                    var c = Utils.toHex2(temp[j]);
                    smallCard = new cc.Sprite(__String.createWithFormat(getResPath("jianlimj/smallCard/%1.png"), c));
                    if (smallCard != undefined) {
                        smallCard.setAnchorPoint(cc.p(0.0, 0.0));
                        smallCard.setPosition(cc.p(x, y));
                        layer.addChild(smallCard);
                    }
                    x += 28;
                    if (j == temp.length - 1) {
                        x += 20;
                    }
                }
            }
        }
        x += 10;
        //杠牌分 lq
        //if (sxendInfo.gangfen[seatid]) {
        //    var txt = "杠牌分  +";
        //    if (sxendInfo.gangfen[seatid] < 0) {
        //        txt = "杠牌分  ";
        //    }
        //    var gangfen = new cc.LabelTTF(txt + sxendInfo.gangfen[seatid], "Arial", 20);
        //    gangfen.setColor(this.leftColor);
        //    gangfen.setAnchorPoint(cc.p(0, 0));
        //    gangfen.setPosition(cc.p(x, y + 10));
        //    layer.addChild(gangfen);
        //    x += gangfen.getContentSize().width + 10;
        //}

        var addfan = this.ackGameEnd.faninfo[seatid].addfan;
        if (addfan) {
            for (var i = 0; i < addfan.length; i++) {
                if (AddFanType[addfan[i].AddType]) {
                    var fanType = new cc.LabelTTF(AddFanType[addfan[i].AddType], "Arial", 20);
                    fanType.setColor(this.leftColor);
                    fanType.setAnchorPoint(cc.p(0, 0));
                    fanType.setPosition(cc.p(x, y + 10));
                    layer.addChild(fanType);
                    x += fanType.getContentSize().width + 10;
                }
            }
        }
        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5天和 6地和 7抢杠胡 8杠上开花 9花上添花
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "jianlimj/result-detail/result_detail_zimo.png";
                    break;
                case 2:
                    path = "jianlimj/result-detail/result_detail_paohu.png";
                    break;
                case 3:
                    path = "jianlimj/result-detail/result_detail_dianpao.png";
                    break;
                case 4:
                    path = "jianlimj/result-detail/result_detail_beizimo.png";
                    break;
                case 5:
                    path = "jianlimj/result-detail/result_detail_tianhe.png";
                    break;
                case 6:
                    path = "jianlimj/result-detail/result_detail_dihe.png";
                    break;
                case 7:
                    path = "jianlimj/result-detail/result_detail_qiangganghu.png";
                    break;
                case 8:
                    path = "jianlimj/result-detail/result_detail_gangshang.png";
                    break;
                case 9:
                    path = "jianlimj/result-detail/result_detail_huashanghua.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX + 20, startY + 20));
                this.bgSpr.addChild(typeSprite);

            }
        }
    },
    getStringByType: function (stype) {
        var type = Number(stype);
        var str = "";
        switch (type) {
            case 2:
                str = "点杠";
                break;
            case 4:
                str = "明杠";
                break;
            case 8:
                str = "暗杠";
                break;
            case 16:
                str = "被明杠";
                break;
            case 32:
                str = "被点杠";
                break;
            case 64:
                str = "点杠";
                break;
            case 128:
                str = "被暗杠";
                break;
            default:
                break;
        }
        return str;
    },
    getPaoTip: function (piaoNum) {
        var gaTip = "[" + piaoNum + "个增]";
        return gaTip;
    },
    getHuaTip: function (piaoNum) {
        var gaTip = "[" + piaoNum + "个花]";
        return gaTip;
    },
});
