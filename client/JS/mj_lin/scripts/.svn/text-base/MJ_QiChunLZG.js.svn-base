loadProtoFile("proto/qichunlaizigang.proto");

var selfCMD = {
    SERVER_FAN_BC: 5100,  //桌面倍数
    SERVER_LAST_CARD: 5080,  //最后四张牌
};

var BaoHuType = {
    baoqing: 1,  //报清
    baofeng: 2,  //报风
    baojiang: 4,  //报将
};

var GameActionType = {
    TYPE_BAO_HU: 0x4000,  //报胡
    TYPE_LAIZI_GANG: 0x10000 //癞子杠。痞子杠，红中杠
};

var HuType = {
    HU_INVALID: 0,
    HU_ZIMO: 1,
    HU_PAOHU: 2,
    HU_DIANPAO: 3,
    HU_BEIZIMO: 4,
    HU_QIANG_GANG: 5,
    HU_BEI_QIANG_GANG: 6,
    HU_YI_PAO_DUO_XIANG: 7,
    HU_GANG_SHANG_HUA: 8,
    HU_GANG_HOU_PAO: 9,
    HU_HeiMo: 10, //自摸且硬胡
    Hu_RuanMo: 11, //自摸且软胡
};

var AddFanTypeArray = {
    // 0: "屁胡",
    1: "七对",
    2: "豪华七对",
    3: "双豪华七对",
    4: "碰碰胡",
    5: "清一色",
    6: "将一色",
    7: "风一色",
    8: "全求人",
    9: "硬胡",
    10: "海底捞月",
    11: "杠上花",
    12: "门清",
};

var MJTable_QiChunLZG = MJTable.extend({
    tag: "MJTable_QiChunLZG",
    _pkg_id: 0,
    _curLaizi: -1,
    _curLaizipi: -1,
    _curLaizipi2: -1,
    _hongzhongcard: 65,
    ctor: function () {
        this._super();
    },
    initRoom: function () {
        MJModel.mj_suport_fangyan = 1;
        MJModel.mj_sound_use = 0;
        MJModel.otherOutCardEffect = false;
        MJModel.outCardEffect_style = 1;

        MJModel.mj_suport_change_bg = 1;
        MJModel.toupiaoTipsType = 1;
        MJModel.chi_layout = 3;
        MJModel.needTipWhenPass = 0;
        MJModel.mj_touch_tip = 1;
        MJModel.isOutCard = true;
        MJModel.mj_chat_style = 5;
        MJModel.mj_gps_type = 1;
        MJModel.mj_public_style = 1;
        MJModel.choiceMoreGang_stlye = 1;
        MJModel.mj_card_lib_type = 1;
        MJModel.shareType = 1;
        MJModel.fangyan = "fangyan1";

        try {
            var roomData = JSON.parse(ZJHModel.getInstance().getRoomData());
            this._pkg_id = roomData["gameRoom"]["pkgId"];
            if (this._pkg_id == 1321) {
                MJModel.mj_roomType = 2;
            }
        } catch (e) {
            Log(this, e);
        }

        this._init_extend();
        this._super();
        this._init_ui();
        // this.schedule(this.test, 1.0);
    },
    getMjTypePath: function () {
        return getResPath("qichunlzg/flag/name.png");
    },

    _init_ui: function () {
        var self = this;
        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("qichunlzg/action/baofeng.png"), getResPath("qichunlzg/action/baofeng.png"), "");
            this.room_Action.actions["baofeng"] = btn;
            btn.setName("baofeng");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }

        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("qichunlzg/action/baojiang.png"), getResPath("qichunlzg/action/baojiang.png"), "");
            this.room_Action.actions["baojiang"] = btn;
            btn.setName("baojiang");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }

        {
            var btn = new ccui.Button();
            btn.loadTextures(getResPath("qichunlzg/action/baoqing.png"), getResPath("qichunlzg/action/baoqing.png"), "");
            this.room_Action.actions["baoqing"] = btn;
            btn.setName("baoqing");
            btn.addClickEventListener(function (sender, evt) {
                self.room_Action.btnCallback(sender);
            });
            btn.setVisible(false);
            this.room_Action.addChild(btn);
            this.room_Action.opBtns.push(btn);
        }
    },

    _init_extend: function () {
        var self_table = this;

        MJCard.prototype.check_addFlag = function () {
            self_table._checkAddCardFlag(this);
        };

        MJCards.prototype.sortCard = function (a, b) {
            try {
                var av = a;
                var bv = b;
                if (typeof a === "object") av = a.getValue();
                if (typeof b === "object") bv = b.getValue();
                if (av == self_table._hongzhongcard && bv != self_table._hongzhongcard)return 1;//赖子放在最前边
                if (av != self_table._hongzhongcard && bv == self_table._hongzhongcard)return -1;//赖子放在最前边
                if (av == self_table._curLaizipi && bv != self_table._curLaizipi)return 1;//赖子放在最前边
                if (av != self_table._curLaizipi && bv == self_table._curLaizipi)return -1;//赖子放在最前边
                if (av == self_table._curLaizi && bv != self_table._curLaizi)return 1;//赖子放在最前边
                if (av != self_table._curLaizi && bv == self_table._curLaizi)return -1;//赖子放在最前边
                return bv - av;
            } catch (e) {
                return 0;
            }
        };

        var super_addOutCard = MJCards.prototype.addOutCard;
        MJCards.prototype.addOutCard = function (pos, value, showPoint) {
            if (value == self_table._curLaizi || value == self_table._curLaizipi || value == 65) {
                this.addHuCard(pos, value);
                return;
            }
            return super_addOutCard.call(this, pos, value, showPoint);
        };

        MJPlayer.prototype.setbeishu = function (num) {
            if (!this.beishu_label) {
                this.beishu_label = new cc.LabelTTF("x1", "Thonburi", 22);
                this.beishu_label.setColor(cc.color("#E5E5E5"));
                this.beishu_label.setAnchorPoint(cc.p(0.5, 0.5));
                this.addChild(this.beishu_label);
                this.beishu_label.setPosition(cc.p(this.m_size.width / 2, this.m_size.height + 20));
                if (this.pid == 2) {
                    this.beishu_label.setPosition(cc.p(this.m_size.width / 2, - 48));
                }
            }
            setNodeVis(this.beishu_label, num);
            this.beishu_label.setString("x" + num);
        };

        MJPlayer.prototype.setbaohu = function (optype) {
            if (!this.baohu_sp) {
                this.baohu_sp = new cc.Sprite(getResPath("qichunlzg/action/icon_1.png"));
                this.baohu_sp.setAnchorPoint(cc.p(0.5, 0.5));
                this.addChild(this.baohu_sp);
                this.baohu_sp.setScale(0.75);
                this.baohu_sp.setPosition(cc.p(5, this.m_size.height / 2 - 10));
                if (this.pid == 1) {
                    this.baohu_sp.setPosition(cc.p(this.m_size.width - 5, this.m_size.height / 2 - 10));
                }
            }

            if (optype == 1 || optype == 2 || optype == 4) {
                this.baohu_sp.setVisible(true);
                this.baohu_sp.setTexture(__String.createWithFormat(getResPath("qichunlzg/action/icon_%1.png"), optype));

            } else {
                this.baohu_sp.setVisible(false);
            }
        };

        var superreset = MJPlayer.prototype.reset;
        MJPlayer.prototype.reset = function () {
            superreset.call(this);
            this.setbeishu(1);
            this.setbaohu(-1);
        };

        MJConfig.getOperatorTipPos = function (pos) {
            if (pos == -1)return MJConfig.getInfoPos();
            return MJModel.cardConfig.getChildByName("op").getChildByName("op" + pos).getPosition();
        };

        Setting.prototype.doSupportFangYan = function () {
            this.checkboxs_setting["fangyan_putonghua"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan1"].setVisible(true);
            this.checkboxs_setting["fangyan_fangyan2"].setVisible(false);

            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").setString("方言");
            this.checkboxs_setting["fangyan_fangyan1"].getChildByName("text").ignoreContentAdaptWithSize(true);

            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").setString("方言2");
            this.checkboxs_setting["fangyan_fangyan2"].getChildByName("text").ignoreContentAdaptWithSize(true);
        };

        var super_setOperator = MJAction.prototype.setOperator;
        MJAction.prototype.setOperator = function (operat, operat2) {
            this.removeChildByName("ChooseGang_selectLayer");
            if (operat != -1 && (operat & GameActionType.TYPE_BAO_HU) == GameActionType.TYPE_BAO_HU) {
                if ((operat2 & BaoHuType.baoqing) == BaoHuType.baoqing) {
                    if (this.actions["baoqing"]) {
                        this.actions["baoqing"].setVisible(true);
                    }
                }
                if ((operat2 & BaoHuType.baofeng) == BaoHuType.baofeng) {
                    if (this.actions["baofeng"]) {
                        this.actions["baofeng"].setVisible(true);
                    }
                }
                if ((operat2 & BaoHuType.baojiang) == BaoHuType.baojiang) {
                    if (this.actions["baojiang"]) {
                        this.actions["baojiang"].setVisible(true);
                    }
                }
            }
            super_setOperator.call(this, operat);
        };

        var super_setOperator_v = MJActionVideo.prototype.setOperator;
        MJActionVideo.prototype.setOperator = function (pos , operat, operat2) {
            super_setOperator_v.call(this, pos, operat);
            if (operat != -1 && (operat & GameActionType.TYPE_BAO_HU) == GameActionType.TYPE_BAO_HU) {
                if ((operat2 & BaoHuType.baoqing) == BaoHuType.baoqing) {
                    if (this.actions[pos]["baoqing"]) {
                        this.actions[pos]["baoqing"].setVisible(true);
                    }
                }
                if ((operat2 & BaoHuType.baofeng) == BaoHuType.baofeng) {
                    if (this.actions[pos]["baofeng"]) {
                        this.actions[pos]["baofeng"].setVisible(true);
                    }
                }
                if ((operat2 & BaoHuType.baojiang) == BaoHuType.baojiang) {
                    if (this.actions[pos]["baojiang"]) {
                        this.actions[pos]["baojiang"].setVisible(true);
                    }
                }
            }
            this.reflashOpBtns(pos);
            return true;
        };

        var super_btnCallback = MJAction.prototype.btnCallback;
        MJAction.prototype.btnCallback = function (ref) {
            var n = ref;
            var name = n.getName();
            Log(this, "btnCallback:" + name);
            if (name == "baoqing") {
                this.setOperator(-1);
                var type = GameActionType.TYPE_BAO_HU;
                var card = BaoHuType.baoqing;
                sendOperateCard(type, card);
                return;
            }
            if (name == "baofeng") {
                this.setOperator(-1);
                var type = GameActionType.TYPE_BAO_HU;
                var card = BaoHuType.baofeng;
                sendOperateCard(type, card);
                return;
            }
            if (name == "baojiang") {
                this.setOperator(-1);
                var type = GameActionType.TYPE_BAO_HU;
                var card = BaoHuType.baojiang;
                sendOperateCard(type, card);
                return;
            }
            super_btnCallback.call(this, ref);
        };

    },

    resetGame: function (allClean) {
        this._super(allClean);
        this._curLaizi = -1;
        this._curLaizipi = -1;
        this._curLaizipi2 = -1;
        this._setLaizi(-1, -1, -1);
    },
    handler_cmd: function (cmd, jpacket, canDelay, svrid) {
        if (cmd == CMD.SERVER_GAME_SCENE) {
            this.handlerTableInfo(this.tableData);
            var ackGameFree = parsePacket("proto.game.qichunmj.AckGameScene", jpacket);
            this.handler_server_scene_info_uc(ackGameFree, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_END) {
            var ackGameEnd = parsePacket("proto.game.qichunmj.AckGameEnd", jpacket);
            this.handler_server_game_end_bc(ackGameEnd, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_GAME_RECORD) {
            this._handler_game_record(jpacket, canDelay);
            return;
        }
        if (cmd == CMD.SERVER_LAIZI_BC) {
            this._handler_server_laizi_bc(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_FAN_BC) {
            this.handler_beishu_bc(jpacket, canDelay);
            return;
        }
        if (cmd == selfCMD.SERVER_LAST_CARD) {
            this._handler_last_four_card(jpacket, canDelay);
            return;
        }

        this._super(cmd, jpacket, canDelay, svrid);
    },
    handler_beishu_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.qichunmj.AckDesktopFan", data);
        var fan = packet.fan;
        for (var i = 0; i < fan.length; i++) {
            var pos = MJModel.getPosBySeatid(i);
            var player = this.players[pos];
            if (player) {
                player.setbeishu(fan[i]);
            }
        }
    },
    _handler_last_four_card: function (data, canDelay) {
        MJModel.isEnterWait = true;
        var move_end = cc.callFunc(function () {
            MJModel.isEnterWait = false;
        });

        this.runAction(cc.sequence(cc.delayTime(3.5), move_end));
        var jpacket = parsePacket("proto.game.qichunmj.AckLastFourCard", data);
        var nums = jpacket.stLastFourCard.length;
        this.room_Card.removePublicCardByNums(nums, false);
        var leftCardNum = this.room_Info.curCardNums - nums;
        if (leftCardNum != null) this.room_Info.showCardNums(leftCardNum);
        if (canDelay == false) {
            for (var i = 0; i < jpacket.stLastFourCard.length; i++) {
                var seatid = jpacket.stLastFourCard[i].ChairID;
                var pos = MJModel.getPosBySeatid(seatid);
                var v = jpacket.stLastFourCard[i].Card;
                this.room_Card.initMoCard(pos, v, true, 0);
            }
            return;
        }

        var effect_name = ["effects_xthhzhrz", "effects_xthhzhsz", "effects_xthhzhsiz"];
        this.room_Tip.showOtherEffect(-1, "qichunlzg/effect2/effects_xthhzhrz/effects_xthhzhrz.ExportJson", "effects_xthhzhrz", 1.5, effect_name[nums - 2]);
        Sound.getInstance().playEffect(getResPath("qichunlzg/sound/mj_zhsz.mp3"));
        var size = cc.director.getWinSize();

        var bp = MJConfig.getInfoPos();
        var dx = 150;
        var dy = 150;
        var dxs = [0, dx, 0, -dx];
        var dys = [-dy, 0, dy, 0];

        var self = this;
        for (var i = 0; i < nums; i++) {
            (function (i) {
                var seatid = jpacket.stLastFourCard[i].ChairID;
                var v = jpacket.stLastFourCard[i].Card;
                var pos = MJModel.getPosBySeatid(seatid);
                if (MJModel.isOnVideo == false && pos != 0) {
                    v = 0;
                }
                var card = new MJCard();
                card.setValue(0, 0, CardType.Card_Hand, 0);
                card.setPosition(cc.p(bp.x + dxs[pos], bp.y + dys[pos]));
                self.room_Card.addChild(card, 1000 - i);
                var move_callbck = cc.callFunc(function () {
                    self.room_Card.initMoCard(pos, v, true, 0);
                });
                card.setVisible(false);
                card.runAction(cc.sequence(cc.delayTime(1.5), cc.show(), cc.delayTime(0.17), cc.moveTo(0.3, MJConfig.getMoCardPos(pos)), move_callbck, cc.removeSelf()));
            })(i);
        }
    },
    handlerAutoUpTableReady: function (nums, selfIsReady) {
        if (MJModel.seatid == -1 && nums < 4) {
            this.actionCallBack("uptable");
        }
        else if (selfIsReady == false) {
            //this.actionCallBack("ready");
        }
    },

    handler_server_scene_info_uc: function (hubei_scene, canDelay) {
        var ackGameFree = hubei_scene.public_scene;
        var sceneStatus = hubei_scene.public_scene.SceneStatus;

        if (sceneStatus != 0) {
            this._setLaizi(hubei_scene.lai_zi, hubei_scene.lai_zi_pi, -1);//还原赖子
        }
        this._super(ackGameFree, canDelay);
        this._setGameType();
        var desktop_fan = hubei_scene.desktop_fan;
        if (desktop_fan) {
            for (var i = 0; i < desktop_fan.length; i++) {
                var pos = MJModel.getPosBySeatid(i);
                var player = this.players[pos];
                if (player) {
                    player.setbeishu(desktop_fan[i]);
                }
            }
        }

        var bao_qing_status = hubei_scene.bao_qing_status;
        if (bao_qing_status) {
            for (var i = 0; i < bao_qing_status.length; i++) {
                var OpType2 = bao_qing_status[i];
                var pos = MJModel.getPosBySeatid(i);
                var player = this.players[pos];
                if (player) {
                    player.setbaohu(OpType2);
                }
            }
        }
    },

    _setGameType: function () {
        var play_id = [];
        //甩字胡不可炮胡
        MJModel.play_id_str = [];

        //甩字胡不可炮胡
        if (MJModel.RoomConfigID.indexOf(5461001) != -1) {
            play_id.push("0.5分底");
            MJModel.base_money = 0.5;
        }
        if (MJModel.RoomConfigID.indexOf(5461002) != -1) {
            play_id.push("1分底");
            MJModel.base_money = 1;
        }
        if (MJModel.RoomConfigID.indexOf(5461003) != -1) {
            play_id.push("2分底");
            MJModel.base_money = 2;
        }
        if (MJModel.RoomConfigID.indexOf(5461004) != -1) {
            play_id.push("2.5分底");
            MJModel.base_money = 2.5;
        }
        if (MJModel.RoomConfigID.indexOf(5461005) != -1) {
            play_id.push("3分底");
            MJModel.base_money = 3;
        }
        if (MJModel.RoomConfigID.indexOf(5461006) != -1) {
            play_id.push("5分底");
            MJModel.base_money = 5;
        }
        if (MJModel.RoomConfigID.indexOf(5461007) != -1) {
            play_id.push("10分底");
            MJModel.base_money = 10;
        }

        if (MJModel.RoomConfigID.indexOf(5462001) != -1) {
            play_id.push("门清");
        }
        if (MJModel.RoomConfigID.indexOf(5462002) != -1) {
            play_id.push("七对");
        }

        if (MJModel.RoomConfigID.indexOf(5463001) != -1) {
            play_id.push("计分1");
        }
        if (MJModel.RoomConfigID.indexOf(5463002) != -1) {
            play_id.push("计分2");
        }

        MJModel.play_id_str = play_id;

        var gameDes = "";
        for (var i = 0; i < MJModel.play_id_str.length; i++) {
            gameDes += MJModel.play_id_str[i];
            if (i != MJModel.play_id_str.length - 1) {
                gameDes += " ";
            }
        }
        cc.eventManager.dispatchCustomEvent("notify_mjpublic_roomConfig", gameDes);
        // this._setFastChat();
    },

    handler_server_game_end_bc: function (hubeiGameend, canDelay) {
        Log(this, "handler_server_game_end_bc");
        try {
            var ackGameEnd = hubeiGameend.public_end;
            var self = this;
            this.room_Card.setAutoOutCard(false);
            if (this.room_Action) this.room_Action.setTingPaiVis(false);
            if (this.room_Action) this.room_Action.setAutoOutCardVis(false);
            if (this.room_Action) this.room_Action.setOperator(-1);
            this.room_Info.stopTime();
            this.room_Tip.hideOutCardTip();

            var show_all_handcard = cc.callFunc(function () {
                self.gameend_showAllHandCard(ackGameEnd);
            });

            var state = ackGameEnd.EndState;
            var show_liuju = cc.callFunc(function () {
                if (ackGameEnd.EndState == 1) {
                    //流局
                    self.room_Tip.ShowGameState(3);
                }
            });

            var show_end_score = cc.callFunc(function () {
                self.gameend_showAllScoreEffect(ackGameEnd);
            });

            var update_all_money = cc.callFunc(function () {
                self.gameend_updatePlayersInfo(ackGameEnd);
            });

            var game_end_reset = cc.callFunc(function () {
                self.room_Action.setReady2Visible(false);
                try {
                    var result = new QiChunLZGResult();
                    result.updateContentView(hubeiGameend);
                    result.setName("reset_remove");
                    self.addChild(result, 100000);
                } catch (e) {
                    cc.log("game end:", e);
                    self.room_Action.setReady2Visible(true);
                }
            });

            var show_all_public_card = cc.callFunc(function () {
                self.gameend_showAllPublicCard(ackGameEnd);
            });

            if (MJModel.isOnVideo && canDelay == false) {
                this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(2), update_all_money));
                return;
            }

            this.runAction(cc.sequence(show_all_public_card, show_all_handcard, cc.delayTime(2), show_liuju, cc.delayTime(ackGameEnd.EndState == 1 ? 1 : 0), show_end_score, cc.delayTime(0), update_all_money, cc.delayTime(1), game_end_reset));
        }
        catch (e) {
            ERROR(this, "handler_server_game_end_bc" + e);
        }
    },

    _showHandcardFlag: function (isEndShow) {
        if (MJModel.isOnVideo) {
            for (var j = 0; j < 4; j++) {
                var allcards = this.room_Card.hand_card[j];
                if (allcards) {
                    for (var i = 0; i < allcards.length; i++) {
                        var card = allcards[i];
                        this._checkAddCardFlag(card);
                    }
                }
            }
            return;
        }
        var allcards = this.room_Card.hand_card[0];
        if (allcards) {
            for (var i = 0; i < allcards.length; i++) {
                var card = allcards[i];
                this._checkAddCardFlag(card);
            }
        }
    },

    _checkAddCardFlag: function (card) {
        try {
            if (card.type == CardType.Card_Public)return;
            if (card.type == CardType.Card_Outing)return;
            if (card.type == CardType.Card_Peng)return;
            if (card.getValue() == 0)return;

            var p = card.getChildByName("sprite");
            p.removeChildByName("laizi_flag");

            var flag_str = "";
            if (card.getValue() == this._curLaizi)flag_str = "qichunlzg/flag/lai_flag2.png";
            if (card.getValue() == this._curLaizipi)flag_str = "qichunlzg/flag/pi_flag2.png";
            if (card.getValue() == this._hongzhongcard)flag_str = "qichunlzg/flag/pi_flag2.png";

            if (flag_str == "") return;
            if (card.getValue() == this._curLaizi)card.setStoreColor(cc.color(255, 249, 137));

            var flag = new cc.Sprite(getResPath(flag_str));

            var m_size = p.getContentSize();
            if (flag) {
                flag.setPosition(cc.p(0, m_size.height));
                flag.setAnchorPoint(cc.p(0, 1));
                flag.setName("laizi_flag");
                p.addChild(flag);
                this._flagDirection(card.pos, flag, m_size);
                if (card.type == CardType.Card_End) {
                    if (card.pos == 1 || card.pos == 3 || card.pos == 2) {
                        flag.setScale(0.5);
                    } else {
                        flag.setScale(0.8);
                    }
                }

                if (card.type == CardType.Card_Out || card.type == CardType.Card_Hu) {
                    flag.setScale(0.47);
                }
            }
        } catch (e) {
            Log(this, e);
        }
    },

    //每个方向角标对应
    _flagDirection: function (pos, flag, m_size) {
        if (MJModel.mj_table_view == "2d") {
            if (MJModel.mj_paiban == "vertical" || pos == 2) {
                return;
            }
        }

        if (pos == 1) {
            flag.setPosition(cc.p(0, 17));
            flag.setRotation(-90);
        } else if (pos == 2) {
            flag.setPosition(cc.p(m_size.width, 17));
            flag.setRotation(180);
        } else if (pos == 3) {
            flag.setPosition(cc.p(m_size.width, m_size.height));
            flag.setRotation(90);
        }
    },

    _setLaizi: function (laizi, laizipi, laizipi2, gamestart) {
        if (laizi == null || laizi == undefined || laizi == -1 || laizi == 255 || laizi == 0) {
            if (this._curLaizi_bg) this._curLaizi_bg.setVisible(false);
            return;
        }
        if (gamestart == undefined) gamestart = false;
        var size = cc.director.getWinSize();

        if (this._curLaizi_bg == null) {
            this._curLaizi_bg = new cc.Sprite(getResPath("qichunlzg/flag/laizi_bg.png"));
            this._curLaizi_bg.setPosition(cc.p(size.width - 270, size.height - 75));
            this._curLaizi_bg.setScale(0.7);
            this.addChild(this._curLaizi_bg, 200);
        }
        this._curLaizi_bg.removeAllChildren();
        this._curLaizi_bg.setVisible(false);
        this._curLaizi = laizi;
        this._curLaizipi = laizipi;

        var self = this;
        if (this._curLaizi > 0) {
            this._curLaizi_bg.setVisible(true);
            var card = new MJCard();
            card.setValue(laizi, 0, CardType.Card_Hand, 0);
            card.setPosition(this._curLaizi_bg.getContentSize().width / 2 + 41, this._curLaizi_bg.getContentSize().height / 2 - 11);
            card.setScale(0.75);
            this._curLaizi_bg.addChild(card);
            this.room_Card.other_card.push(card);
            if (this._curLaizipi > 0) {
                var card_2 = new MJCard();
                card_2.setValue(laizipi, 0, CardType.Card_Hand, 0);
                card_2.setPosition(this._curLaizi_bg.getContentSize().width / 2 - 39, this._curLaizi_bg.getContentSize().height / 2 - 11);
                card_2.setScale(0.75);
                this._curLaizi_bg.addChild(card_2);
                this.room_Card.other_card.push(card_2);
            }
            if (gamestart) {
                this._curLaizi_bg.setVisible(false);
                var fcard_laizi = new MJCard();
                fcard_laizi.setValue(0, 0, CardType.Card_Hand, 0);
                fcard_laizi.setScale(0);
                fcard_laizi.setPosition(MJConfig.getInfoPos());
                this.addChild(fcard_laizi);
                var show_card = cc.callFunc(function () {
                    fcard_laizi.setValue(laizipi, 0, CardType.Card_Hand, 0);
                });
                var move_end = cc.callFunc(function () {
                    self._curLaizi_bg.setVisible(true);
                });
                fcard_laizi.runAction(cc.sequence(cc.scaleTo(0.17, 1), cc.delayTime(0.5), cc.scaleTo(0.17, 0, 1), show_card, cc.scaleTo(0.17, 1, 1), cc.delayTime(0.5), cc.spawn(cc.moveTo(0.17, this._curLaizi_bg.getPosition()), cc.scaleTo(0.17, 0.75)), move_end, cc.removeSelf()));
            }
        }
    },

    _handler_server_laizi_bc: function (data, canDelay) {
        var packet = parsePacket("proto.game.qichunmj.AckLaiZiCard", data);
        var curLaizi = packet.laizi;
        var curLaizipi = packet.laizipi;
        this._setLaizi(curLaizi, curLaizipi, -1, canDelay ? true : false);

        if (true) {
            this._showHandcardFlag(false);
            var mo_card = null;
            if (this.room_Card.isDuoPai(0)) {
                mo_card = this.room_Card.hand_card[0][this.room_Card.hand_card[0].length - 1];
                this.room_Card.hand_card[0].splice(this.room_Card.hand_card[0].length - 1, 1);
            }
            this.room_Card.reflashHandCard(0, true);
            if (mo_card) {
                mo_card.setMyPosition(MJConfig.getMoCardPos(0));
                this.room_Card.hand_card[0].push(mo_card);
            }
            this.room_Card.reflashHandCard(1, true);
            this.room_Card.reflashHandCard(2, true);
            this.room_Card.reflashHandCard(3, true);
            return;
        }
    },

    handler_server_peng_kang_bc: function (data, canDelay) {
        this.room_Tip.showTextTip("");
        this.check_tip_operate_card(0, 0);
        var ackBcOpResult = parsePacket("proto.game.AckBcOpResult", data);
        this.unschedule(this.autoOutCardTimeOut);
        this.unschedule(this.autoHuCardTimeOut);

        var seatid = ackBcOpResult.ChairID;
        var out_seatid = ackBcOpResult.OutCardChairID;
        var OpType = ackBcOpResult.OpType;
        var OpType2 = ackBcOpResult.OpType2;
        var card = ackBcOpResult.Card;
        var cardList = ackBcOpResult.OpCards;
        var removeHandcards1 = ackBcOpResult.cardDel;
        var specialCard = ackBcOpResult.SpecialCard;
        var LaiziNum = ackBcOpResult.LaiziNum;


        var scores = ackBcOpResult.Score;
        this.handler_gang_scores(scores, OpType, OpType2, canDelay);

        if (MJModel.isMyPlayer(seatid)) {
            if (this.room_Action) this.room_Action.setOperator(-1);
        }

        if (this.room_Action_video) this.room_Action_video.reset();

        var pos = MJModel.getPosBySeatid(seatid);
        var out_pos = MJModel.getPosBySeatid(out_seatid);

        this.players[pos].setTimeOut(false);
        this.players[pos].setOffline(false);
        if (MJModel.outtimeplayers.length > 1 && MJModel.outtimeplayers.indexOf(seatid) != -1) {
            MJModel.outtimeplayers.splice(MJModel.outtimeplayers.indexOf(seatid), 1);
        }

        if ((OpType & ActionType.TYPE_PASS) != ActionType.TYPE_PASS && (OpType & GameActionType.TYPE_BAO_HU) == GameActionType.TYPE_BAO_HU) {
            var player = this.players[pos];
            if (player) {
                player.setbaohu(OpType2);
            }

            if (MJModel.isMyPlayer(seatid) && seatid == out_seatid && this.room_Card.isDuoPai(0))//如果是我自己摸的牌  自己过 则放开选牌功能
            {
                MJModel.cur_seat = seatid;
                this.myselfOpenOutCard(true);
            }

            var player = MJModel.players[seatid];
            if (player && canDelay) {
                this.show_baohu_effect(pos, OpType, OpType2);
            }
            return;
        }
        this._super(data, canDelay);
    },

    show_baohu_effect: function (pos, type, op2) {
        try {
            var sp = null;
            var effect = null;
            var begin;
            var end;
            var size = cc.director.getWinSize();

            {
                begin = MJConfig.getOperatorTipPos(pos);

                var armature = null;

                if ((type & GameActionType.TYPE_BAO_HU) == GameActionType.TYPE_BAO_HU) {
                    //返回报清类型，1清一色，2风一色，3将一色
                    if (op2 == BaoHuType.baoqing) {
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("qichunlzg/effect2/baoqing/effects_qcmj_baoqing.ExportJson"));
                        armature = new ccs.Armature("effects_qcmj_baoqing");
                    } else if (op2 == BaoHuType.baofeng) {
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("qichunlzg/effect2/baofeng/effects_qcmj_baofeng.ExportJson"));
                        armature = new ccs.Armature("effects_qcmj_baofeng");
                    } else if (op2 == BaoHuType.baojiang) {
                        ccs.armatureDataManager.addArmatureFileInfo(getResPath("qichunlzg/effect2/baojiang/effects_qcmj_baojiang.ExportJson"));
                        armature = new ccs.Armature("effects_qcmj_baojiang");
                    }
                }

                if (armature != null) {
                    var animation = armature.getAnimation();
                    if (animation) {
                        if (typeof animation.playWithIndex === "function") {
                            animation.playWithIndex(0, -1, 0);
                            armature.setPosition(begin);
                            MJModel.mj_table.addChild(armature, 10000);
                        }
                    }

                    armature.runAction(cc.sequence(cc.delayTime(1), cc.removeSelf()));
                    armature.setName("hu_effect");
                    return armature;
                }
            }
        } catch (e) {
            Log(this, e);
        }
        return null;
    },

    handler_server_out_card_bc: function (data, canDelay) {
        this._super(data, canDelay);
        var userOutCard = parsePacket("proto.game.AckUserOutCard", data);
        var seatId = userOutCard.ChairID;
        var card = userOutCard.Card;
        var pos = MJModel.getPosBySeatid(seatId);
        if (card == this._curLaizi || card == this._curLaizipi || card == 65) {
            var player = MJModel.players[seatId];
            var effectname = "";
            if (card == this._curLaizi) effectname = "laizigang";
            if (card == this._curLaizipi) effectname = "pizigang";
            if (card == 65) effectname = "hongzhonggang";
            this.handler_op_sound(pos, player.sex, GameActionType.TYPE_LAIZI_GANG, "", effectname);
            this.handler_op_effect(pos, pos, player.sex, GameActionType.TYPE_LAIZI_GANG, "");
        }
    },

    handler_out_card_sound: function (sex, card) {
        if (card == this._curLaizi || card == this._curLaizipi || card == 65) return;
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/operator/luopai.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("qichunlzg/sound/chupai/%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w", Utils.toHex2(card)));
        } else {
            this._super(sex, card);
        }
    },

    handler_op_sound: function (pos, sex, OpType, OpType2, effectname) {
        if (MJModel.mj_suport_fangyan == 1 && MJModel.fangyan != "putonghua") {
            var effect = "gang";
            if ((OpType & ActionType.TYPE_HU) == ActionType.TYPE_HU) {
                effect = "hu";
                var zimo = this.room_Card.isDuoPai(pos);
                if (zimo) {
                   effect = "zimo";
                }
            }
            else if ((OpType & ActionType.TYPE_PENG) == ActionType.TYPE_PENG) {
                effect = "peng";
            }
            else if ((OpType & ActionType.TYPE_LEFT_CHI) == ActionType.TYPE_LEFT_CHI || (OpType & ActionType.TYPE_CENTER_CHI) == ActionType.TYPE_CENTER_CHI || (OpType & ActionType.TYPE_RIGHT_CHI) == ActionType.TYPE_RIGHT_CHI) {
                effect = "chi";
            }

            if (effectname && effectname != "") {
                effect = effectname;
            }

            Sound.getInstance().playEffect(getResPath("RoomMJ/sound/give.mp3"));
            Sound.getInstance().playEffect(__String.createWithFormat(getResPath("qichunlzg/sound/operator/%1_%2.mp3"), sex == SEX_ID.SEX_MAN ? "m" : "w", effect));
        } else {
            this._super(pos, sex, OpType, OpType2, effectname);
        }
    },

    timeEnd: function (dt) {
        if (MJModel.isEnd)return;

        if (MJModel.isState(MJ_STATUS.MJ_GAME_FREE)) {
            sendGameEndRecordReq();
        }
    },

    get_gamerecord_config: function (gameRecord) {
        var data = {
            "title": "蕲春癞子杠",
            "itemNames": [],
            "itemValues": []
        };

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            var arrStr = ["坐庄次数", "胡牌次数", "超时次数"];
            var arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.outtime_num];
            data.itemNames.push(arrStr);
            data.itemValues.push(arrcount);
        }
        return data;
    },

    _handler_game_record: function (data, canDelay) {
        //-----新总结算界面
        cc.log("------big End");
        if (this.isRecordShow) {
            return;
        }
        this.isRecordShow = true;
        var self = this;
        this.resetGame(false);
        var pkgId = this._pkg_id;
        var gameType = "蕲春癞子杠";

        var gameRecord = parsePacket("proto.game.GameEndRecord", data);
        var bigResult = new CommonTotalResult();
        this.addChild(bigResult, 100000);

        var time = Utils.getTime(gameRecord.DataTime * 1000);
        var startTime = Utils.getTime(MJModel.roomData["gameRoom"]["createTime"]);

        var roomId = "房间号:" + MJModel.roomData["gameRoom"]["code"];
        gameType += " · " + MJModel.base_money + "分底";

        bigResult.initUI(gameType, roomId, time, startTime, MJModel.RoomCountSum, MJModel.currentCount);
        bigResult.back_btn.addClickEventListener(function (node) {
            self.exitRoom(true);
        });
        //var _winSeatid = [0, 0, 0, 0];
        var _PaoSeatid = [0, 0, 0, 0];
        for (var i = 0; i < gameRecord.MostDianPaoUser.length; i++) {
            var seatId = gameRecord.MostDianPaoUser[i];
            if (seatId != 255) {
                _PaoSeatid[seatId] = 1;
            }
        }
        var addX = 0;
        var PlayerNumber = 0;
        var has_result = false;
        var houseOwner = false;

        var max_score = 0;
        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            if (recoreInfo.totalscore > max_score) {
                max_score = recoreInfo.totalscore;
            }
        }

        for (var i = 0; i < gameRecord.UserRecoreInfo.length; i++) {
            var recoreInfo = gameRecord.UserRecoreInfo[i];
            //var playerRecord = totalRecord.player_records[i];
            var player = MJModel.players[i];
            var arrStr = [];
            //次数
            var arrcount = [];

            arrStr = ["坐庄次数", "胡牌次数", "超时次数"];
            arrcount = [recoreInfo.banker_num, recoreInfo.hu_num, recoreInfo.outtime_num];

            if (player && player.uid != -1 && player.uid != 0) {
                if (MJModel.roomData["gameRoom"]["userId"] == player.uid) {
                    houseOwner = true;
                } else {
                    houseOwner = false;
                }
                var isWin = false;
                if (max_score > 0 && recoreInfo.totalscore == max_score) {
                    isWin = true;
                }
                var Item = bigResult.addItem(player.avatar, player.name, player.uid, isWin, _PaoSeatid[i], arrStr, arrcount, recoreInfo.totalscore, houseOwner, recoreInfo.dissState);
                Item.setAnchorPoint(cc.p(0.5, 0.5));
                bigResult.player_records[i] = Item;
                PlayerNumber++;
            }
        }
        bigResult.refresh(PlayerNumber);
        this.release();
    },

    test: function (dt) {
        MJModel.testCount++;
        var tempCount = MJModel.testCount;
        if (tempCount == 5 && true) {
            var packet = {
                "public_end": {
                    "UserCard": [{
                        "ChangeableCardsLen": 4,
                        "ChangeableCards": [9, 9, 25, 25],
                        "FixedCardsLen": 3,
                        "stFixedCards": [{
                            "CardData": 52,
                            "state": 1,
                            "chairID": 1,
                            "OpCards": [],
                            "LaiziNum": null
                        }, {"CardData": 6, "state": 1, "chairID": 1, "OpCards": [], "LaiziNum": null}, {
                            "CardData": 4,
                            "state": 1,
                            "chairID": 3,
                            "OpCards": [],
                            "LaiziNum": null
                        }],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 7,
                        "ChangeableCards": [5, 5, 22, 23, 24, 41, 41],
                        "FixedCardsLen": 2,
                        "stFixedCards": [{
                            "CardData": 51,
                            "state": 1,
                            "chairID": 3,
                            "OpCards": [],
                            "LaiziNum": null
                        }, {"CardData": 37, "state": 1, "chairID": 3, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 10,
                        "ChangeableCards": [1, 2, 3, 20, 20, 22, 22, 23, 24, 25],
                        "FixedCardsLen": 1,
                        "stFixedCards": [{"CardData": 33, "state": 4, "chairID": 1, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }, {
                        "ChangeableCardsLen": 10,
                        "ChangeableCards": [1, 2, 3, 9, 18, 19, 21, 21, 37, 38],
                        "FixedCardsLen": 1,
                        "stFixedCards": [{"CardData": 66, "state": 1, "chairID": 0, "OpCards": [], "LaiziNum": null}],
                        "stFenZhangCard": null
                    }],
                    "Score": [88, -8, -16, -64],
                    "EndState": 0,
                    "EndGangInfo": [{"Gang": [], "TotalGangScore": 0}, {
                        "Gang": [],
                        "TotalGangScore": 0
                    }, {"Gang": [{"GangType": 4, "GangCard": 33}], "TotalGangScore": 0}, {
                        "Gang": [],
                        "TotalGangScore": 0
                    }],
                    "faninfo": [{
                        "chairid": 0,
                        "SpecialType": 2,
                        "FanNum": 2,
                        "addfan": [{"AddType": 4, "AddNum": 1, "AddType2": null}, {
                            "AddType": 9,
                            "AddNum": 1,
                            "AddType2": null
                        }],
                        "hucard": 9
                    }, {"chairid": 1, "SpecialType": 0, "FanNum": 0, "addfan": [], "hucard": 0}, {
                        "chairid": 2,
                        "SpecialType": 0,
                        "FanNum": 0,
                        "addfan": [],
                        "hucard": 0
                    }, {"chairid": 3, "SpecialType": 3, "FanNum": 0, "addfan": [], "hucard": 0}],
                    "money": [100088, 99992, 99984, 99936]
                },
                "feng_ding": [1, 2, 3, 4],
                "lai_zi_gang": [0, 0, 0, 1],
                "pi_zi_gang": [0, 0, 1, 0],
                "hong_zhong_gang": [0, 1, 1, 1],
                "kai_kou": [3, 2, 1, 1],
                "bao_hu": [0, 0, 0, 0]
            };
            this.handler_server_game_end_bc(packet, true);
        }
    },

});

var QiChunLZGResult = MJCommonResult.extend({
    updateContentView: function (ackGameEndJS) {
        this.ackGameEnd = ackGameEndJS.public_end;
        this.ackGameEndJS = ackGameEndJS;
        //输赢标志
        var seatId = MJModel.seatid;
        var score = this.ackGameEnd.Score[seatId];
        var effectName = "lose";
        if (score > 0) {
            effectName = "win";
        }
        this._win_effect(effectName);

        var size = cc.director.getWinSize();
        var LayerBg = new cc.LayerColor(cc.color(0, 0, 0, 200));
        LayerBg.setContentSize(cc.size(size.width, size.height));
        LayerBg.setAnchorPoint(cc.p(0, 0));
        LayerBg.setPosition(cc.p(0, 0));
        this.addChild(LayerBg, -2);

        var itemHeight = 120;

        var count = 0;
        for (var m = 0; m < 4; m++) {
            var pos = m - 1 < 0 ? 3 : m - 1;

            var countY = m;

            if (MJModel.mj_roomType == 1) {
                if (pos == 2) {
                    continue;
                }
            }

            if (MJModel.mj_roomType == 2) {
                if (pos == 1 || pos == 3) {
                    continue;
                }

                if (pos == 0) {
                    countY = 1;
                } else if (pos == 2) {
                    countY = 2;
                }
            }

            var seatid = MJModel.getSeatidByPos(pos);

            var startY = 495 - count * itemHeight;
            var startX = 40;

            //头像
            var headLayer = this.createAvatar(pos);
            headLayer.setPosition(cc.p(startX + 60, startY + 55));
            this.bgSpr.addChild(headLayer, 10);

            //上排牌 杠
            var ganghuLayer = this.createGangHuLayer(seatid);
            this.bgSpr.addChild(ganghuLayer, 10);
            ganghuLayer.setPosition(cc.p(startX + 230, startY + 65));

            //下排牌
            var handCardLayer = this.createHandCard(seatid);
            handCardLayer.setPosition(cc.p(startX + 0, startY));
            this.bgSpr.addChild(handCardLayer);

            // this.createSpecialHuTip(startX + 785, startY + 40, seatid);
            this.createSpecialHuTip(startX + 900, startY + 40, seatid);

            // 输赢分
            var scoreLayer = this.createScoreLayer(seatid);
            scoreLayer.setPosition(cc.p(startX + 1100, startY + 40));
            this.bgSpr.addChild(scoreLayer);

            //中马列表
            var maLayer = this.createMaLayer(seatid);
            if (maLayer) {
                maLayer.setPosition(cc.p(startX + 845, startY + 85));
                this.bgSpr.addChild(maLayer);
            }
            count++;
        }
    },
    createGangHuLayer: function (seatid) {
        var layer = new cc.Layer();
        var x = 0;
        var y = 0;

        // for (var i = 0; i < this.ackGameEnd.EndGangInfo[seatid].Gang.length; i++) {
        //     var gangType = this.ackGameEnd.EndGangInfo[seatid].Gang[i].GangType;
        //     if (gangType == 16) {
        //         var cardvalue = this.ackGameEnd.EndGangInfo[seatid].Gang[i].GangCard;
        //         var fanType = new cc.LabelTTF("点杠", "Arial", 20);
        //         fanType.setColor(this.leftColor);
        //         fanType.setAnchorPoint(cc.p(0, 0));
        //         fanType.setPosition(cc.p(x, y + 10));
        //         layer.addChild(fanType);
        //         x += fanType.getContentSize().width;
        //
        //         var card = new MJCard();
        //         card.setValue(cardvalue, 0, CardType.Card_Hand, 0);
        //         card.setScale(0.25);
        //         card.setAnchorPoint(cc.p(0, 0));
        //         card.setPosition(cc.p(x, y + 7));
        //         x += card.getBoundingBox().width + 10;
        //         layer.addChild(card);
        //     }
        // }

        //
        var ackGameEnd = this.ackGameEndJS;
        var addFanType = [];
        if (ackGameEnd.lai_zi_gang[seatid]) {
            addFanType.push("癞子杠(" + ackGameEnd.lai_zi_gang[seatid] + ")");
        }
        if (ackGameEnd.pi_zi_gang[seatid]) {
            addFanType.push("痞子杠(" + ackGameEnd.pi_zi_gang[seatid] + ")");
        }
        if (ackGameEnd.hong_zhong_gang[seatid]) {
            addFanType.push("红中杠(" + ackGameEnd.hong_zhong_gang[seatid] + ")");
        }

        var specialType = ackGameEnd.public_end.faninfo[seatid].SpecialType;
        if (specialType == HuType.HU_PAOHU) addFanType.push("接炮");
        if (specialType == HuType.HU_ZIMO) addFanType.push("自摸");
        if (specialType == HuType.HU_DIANPAO) addFanType.push("点炮");
        switch (specialType) {
            case HuType.HU_ZIMO:
            case HuType.HU_PAOHU:
            case HuType.HU_QIANG_GANG:
            case HuType.HU_GANG_SHANG_HUA:
                var addfan = ackGameEnd.public_end.faninfo[seatid].addfan;
                for (var t = 0; t < addfan.length; t++) {
                    var add_type = addfan[t].AddType;
                    var add_value = addfan[t].AddNum;
                    if (AddFanTypeArray[add_type]) {
                        addFanType.push(AddFanTypeArray[add_type]);
                    }
                }
                break;
        }

        if (ackGameEnd.kai_kou[seatid]) {
            addFanType.push("开口");
        }
        if (ackGameEnd.feng_ding[seatid]) {
            if (ackGameEnd.feng_ding[seatid] == 1) {
                addFanType.push("封顶");
            } else if (ackGameEnd.feng_ding[seatid] == 2) {
                addFanType.push("边顶");
            } if (ackGameEnd.feng_ding[seatid] == 3) {
                addFanType.push("金顶");
            } if (ackGameEnd.feng_ding[seatid] == 4) {
                addFanType.push("超金顶");
            }
        }
        //

        for (var i = 0; i < addFanType.length; i++) {
            var fanType = new cc.LabelTTF(addFanType[i], "Arial", 20);
            fanType.setColor(this.leftColor);
            fanType.setAnchorPoint(cc.p(0, 0));
            fanType.setPosition(cc.p(x, y + 10));
            layer.addChild(fanType);
            x += fanType.getContentSize().width + 10;
        }

        return layer;
    },

    createSpecialHuTip: function (startX, startY, seatid) {
        if (this.ackGameEnd.faninfo.length > seatid) {
            //胡牌类型
            var fanInfo = this.ackGameEnd.faninfo[seatid];
            var path = "";
            //1表示自摸，2表示点炮胡，3表示放炮,4 被自摸 5天和 6地和 7抢杠胡 8杠上开花 9花上添花
            switch (fanInfo.SpecialType) {
                case 1:
                    path = "RoomMJ/result2/zi_mo_icon.png";
                    break;
                case 2:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                case 3:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 5:
                    path = "RoomMJ/result2/qiang_gang_icon.png";
                    break;
                case 7:
                    path = "RoomMJ/result2/dian_pao_icon.png";
                    break;
                case 9:
                    path = "RoomMJ/result2/pao_hu_icon.png";
                    break;
                default:
                    break;
            }
            if (path != "") {
                var typeSprite = new cc.Sprite(getResPath(path));
                typeSprite.setPosition(cc.p(startX, startY));
                this.bgSpr.addChild(typeSprite);

            }
        }

        var fengding = this.ackGameEndJS.feng_ding[seatid];
        if (fengding) {
            var typeSprite = new cc.Sprite(__String.createWithFormat(getResPath("qichunlzg/action/text_fengding%1.png"), fengding));
            typeSprite.setPosition(cc.p(startX + 120, startY));
            this.bgSpr.addChild(typeSprite);
        }
    },
    //输赢分
    createScoreLayer: function (seatid) {
        var layer = new cc.Layer();

        var width = 65;
        var nameLabel = new cc.LabelTTF("总分", "Arial", 32);
        nameLabel.setColor(this.leftColor);
        nameLabel.setAnchorPoint(cc.p(0.5, 0.5));
        nameLabel.setPosition(cc.p(width, 40));
        layer.addChild(nameLabel);

        var score = 0;
        if (this.ackGameEnd.Score && this.ackGameEnd.Score.length > seatid) score = this.ackGameEnd.Score[seatid];

        var path = getResPath("RoomMJ/result2/result_small_label_lose.png");
        if (score > 0) {
            path = getResPath("RoomMJ/result2/result_small_label_win.png");
        }
        var scoredes = ":";
        if (score == 0) scoredes = "";
        var scoreLabel = new cc.LabelAtlas(scoredes + Math.abs(score), path, 29, 37, '0');

        scoreLabel.setAnchorPoint(cc.p(0.5, 0.5));

        scoreLabel.setPosition(cc.p(width, -10));
        scoreLabel.setName("scoreLabel");
        layer.addChild(scoreLabel);

        if (Math.abs(score) >= 10000) {
            scoreLabel.setScale(0.8);
        }
        return layer;
    },
    getXiaZuiStr: function (v) {
        var str = "";
        if (v == 0) {
            str = "不下";
        }
        if (v == 1) {
            str = "1嘴";
        }
        if (v == 2) {
            str = "2嘴";
        }
        return str;
    },
});
